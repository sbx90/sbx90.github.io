/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "src_components_header_index_tsx";
exports.ids = ["src_components_header_index_tsx"];
exports.modules = {

/***/ "./node_modules/next/dist/client/link.js":
/*!***********************************************!*\
  !*** ./node_modules/next/dist/client/link.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\n\nvar _router = __webpack_require__(/*! ../shared/lib/router/router */ \"./node_modules/next/dist/shared/lib/router/router.js\");\n\nvar _router1 = __webpack_require__(/*! ./router */ \"./node_modules/next/dist/client/router.js\");\n\nvar _useIntersection = __webpack_require__(/*! ./use-intersection */ \"./node_modules/next/dist/client/use-intersection.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst prefetched = {};\n\nfunction prefetch(router, href, as, options) {\n  if (true) return;\n  if (!(0, _router).isLocalURL(href)) return; // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n\n  router.prefetch(href, as, options).catch(err => {\n    if (true) {\n      // rethrow to show invalid URL errors\n      throw err;\n    }\n  });\n  const curLocale = options && typeof options.locale !== 'undefined' ? options.locale : router && router.locale; // Join on an invalid URI character\n\n  prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')] = true;\n}\n\nfunction isModifiedEvent(event) {\n  const {\n    target\n  } = event.currentTarget;\n  return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || event.nativeEvent && event.nativeEvent.which === 2;\n}\n\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale) {\n  const {\n    nodeName\n  } = e.currentTarget; // anchors inside an svg have a lowercase nodeName\n\n  const isAnchorNodeName = nodeName.toUpperCase() === 'A';\n\n  if (isAnchorNodeName && (isModifiedEvent(e) || !(0, _router).isLocalURL(href))) {\n    // ignore click for browserâ€™s default behavior\n    return;\n  }\n\n  e.preventDefault(); // replace state instead of push if prop is present\n\n  router[replace ? 'replace' : 'push'](href, as, {\n    shallow,\n    locale,\n    scroll\n  });\n}\n\nfunction Link(props) {\n  if (true) {\n    function createPropError(args) {\n      return new Error(`Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` + ( false ? 0 : ''));\n    } // TypeScript trick for type-guarding:\n\n\n    const requiredPropsGuard = {\n      href: true\n    };\n    const requiredProps = Object.keys(requiredPropsGuard);\n    requiredProps.forEach(key => {\n      if (key === 'href') {\n        if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key]\n          });\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _ = key;\n      }\n    }); // TypeScript trick for type-guarding:\n\n    const optionalPropsGuard = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      locale: true\n    };\n    const optionalProps = Object.keys(optionalPropsGuard);\n    optionalProps.forEach(key => {\n      const valType = typeof props[key];\n\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType\n          });\n        }\n      } else if (key === 'locale') {\n        if (props[key] && valType !== 'string') {\n          throw createPropError({\n            key,\n            expected: '`string`',\n            actual: valType\n          });\n        }\n      } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'prefetch') {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType\n          });\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _ = key;\n      }\n    }); // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    const hasWarned = _react.default.useRef(false);\n\n    if (props.prefetch && !hasWarned.current) {\n      hasWarned.current = true;\n      console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated');\n    }\n  }\n\n  const p = props.prefetch !== false;\n  const router = (0, _router1).useRouter();\n\n  const {\n    href,\n    as\n  } = _react.default.useMemo(() => {\n    const [resolvedHref, resolvedAs] = (0, _router).resolveHref(router, props.href, true);\n    return {\n      href: resolvedHref,\n      as: props.as ? (0, _router).resolveHref(router, props.as) : resolvedAs || resolvedHref\n    };\n  }, [router, props.href, props.as]);\n\n  let {\n    children,\n    replace,\n    shallow,\n    scroll,\n    locale\n  } = props;\n\n  if (typeof children === 'string') {\n    children = /*#__PURE__*/_react.default.createElement(\"a\", null, children);\n  } // This will return the first child, if multiple are provided it will throw an error\n\n\n  let child;\n\n  if (true) {\n    try {\n      child = _react.default.Children.only(children);\n    } catch (err) {\n      if (!children) {\n        throw new Error(`No children were passed to <Link> with \\`href\\` of \\`${props.href}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`);\n      }\n\n      throw new Error(`Multiple children were passed to <Link> with \\`href\\` of \\`${props.href}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` + ( false ? 0 : ''));\n    }\n  } else {}\n\n  const childRef = child && typeof child === 'object' && child.ref;\n  const [setIntersectionRef, isVisible] = (0, _useIntersection).useIntersection({\n    rootMargin: '200px'\n  });\n\n  const setRef = _react.default.useCallback(el => {\n    setIntersectionRef(el);\n\n    if (childRef) {\n      if (typeof childRef === 'function') childRef(el);else if (typeof childRef === 'object') {\n        childRef.current = el;\n      }\n    }\n  }, [childRef, setIntersectionRef]);\n\n  _react.default.useEffect(() => {\n    const shouldPrefetch = isVisible && p && (0, _router).isLocalURL(href);\n    const curLocale = typeof locale !== 'undefined' ? locale : router && router.locale;\n    const isPrefetched = prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')];\n\n    if (shouldPrefetch && !isPrefetched) {\n      prefetch(router, href, as, {\n        locale: curLocale\n      });\n    }\n  }, [as, href, isVisible, locale, p, router]);\n\n  const childProps = {\n    ref: setRef,\n    onClick: e => {\n      if (true) {\n        if (!e) {\n          throw new Error(`Component rendered inside next/link has to pass click event to \"onClick\" prop.`);\n        }\n      }\n\n      if (child.props && typeof child.props.onClick === 'function') {\n        child.props.onClick(e);\n      }\n\n      if (!e.defaultPrevented) {\n        linkClicked(e, router, href, as, replace, shallow, scroll, locale);\n      }\n    }\n  };\n\n  childProps.onMouseEnter = e => {\n    if (child.props && typeof child.props.onMouseEnter === 'function') {\n      child.props.onMouseEnter(e);\n    }\n\n    if ((0, _router).isLocalURL(href)) {\n      prefetch(router, href, as, {\n        priority: true\n      });\n    }\n  }; // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user\n\n\n  if (props.passHref || child.type === 'a' && !('href' in child.props)) {\n    const curLocale = typeof locale !== 'undefined' ? locale : router && router.locale; // we only render domain locales if we are currently on a domain locale\n    // so that locale links are still visitable in development/preview envs\n\n    const localeDomain = router && router.isLocaleDomain && (0, _router).getDomainLocale(as, curLocale, router && router.locales, router && router.domainLocales);\n    childProps.href = localeDomain || (0, _router).addBasePath((0, _router).addLocale(as, curLocale, router && router.defaultLocale));\n  }\n\n  return /*#__PURE__*/_react.default.cloneElement(child, childProps);\n}\n\nvar _default = Link;\nexports[\"default\"] = _default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/link.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/normalize-trailing-slash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/next/dist/client/normalize-trailing-slash.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.removePathTrailingSlash = removePathTrailingSlash;\nexports.normalizePathTrailingSlash = void 0;\n\nfunction removePathTrailingSlash(path) {\n  return path.endsWith('/') && path !== '/' ? path.slice(0, -1) : path;\n}\n\nconst normalizePathTrailingSlash =  false ? 0 : removePathTrailingSlash;\nexports.normalizePathTrailingSlash = normalizePathTrailingSlash;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztBQUN6Q0csRUFBQUEsS0FBSyxFQUFFO0FBRGtDLENBQTdDO0FBR0FELCtCQUFBLEdBQWtDRSx1QkFBbEM7QUFDQUYsa0NBQUEsR0FBcUMsS0FBSyxDQUExQzs7QUFDQSxTQUFTRSx1QkFBVCxDQUFpQ0UsSUFBakMsRUFBdUM7QUFDbkMsU0FBT0EsSUFBSSxDQUFDQyxRQUFMLENBQWMsR0FBZCxLQUFzQkQsSUFBSSxLQUFLLEdBQS9CLEdBQXFDQSxJQUFJLENBQUNFLEtBQUwsQ0FBVyxDQUFYLEVBQWMsQ0FBQyxDQUFmLENBQXJDLEdBQXlERixJQUFoRTtBQUNIOztBQUNELE1BQU1ELDBCQUEwQixHQUFHSSxNQUFBLEdBQXFDSCxDQUFyQyxHQVEvQkYsdUJBUko7QUFTQUYsa0NBQUEsR0FBcUNHLDBCQUFyQyIsInNvdXJjZXMiOlsid2VicGFjazovL21lcmN1cnkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanM/NGMyZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbmV4cG9ydHMucmVtb3ZlUGF0aFRyYWlsaW5nU2xhc2ggPSByZW1vdmVQYXRoVHJhaWxpbmdTbGFzaDtcbmV4cG9ydHMubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2ggPSB2b2lkIDA7XG5mdW5jdGlvbiByZW1vdmVQYXRoVHJhaWxpbmdTbGFzaChwYXRoKSB7XG4gICAgcmV0dXJuIHBhdGguZW5kc1dpdGgoJy8nKSAmJiBwYXRoICE9PSAnLycgPyBwYXRoLnNsaWNlKDAsIC0xKSA6IHBhdGg7XG59XG5jb25zdCBub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9UUkFJTElOR19TTEFTSCA/IChwYXRoKT0+e1xuICAgIGlmICgvXFwuW14vXStcXC8/JC8udGVzdChwYXRoKSkge1xuICAgICAgICByZXR1cm4gcmVtb3ZlUGF0aFRyYWlsaW5nU2xhc2gocGF0aCk7XG4gICAgfSBlbHNlIGlmIChwYXRoLmVuZHNXaXRoKCcvJykpIHtcbiAgICAgICAgcmV0dXJuIHBhdGg7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHBhdGggKyAnLyc7XG4gICAgfVxufSA6IHJlbW92ZVBhdGhUcmFpbGluZ1NsYXNoO1xuZXhwb3J0cy5ub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCA9IG5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub3JtYWxpemUtdHJhaWxpbmctc2xhc2guanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwicmVtb3ZlUGF0aFRyYWlsaW5nU2xhc2giLCJub3JtYWxpemVQYXRoVHJhaWxpbmdTbGFzaCIsInBhdGgiLCJlbmRzV2l0aCIsInNsaWNlIiwicHJvY2VzcyIsImVudiIsIl9fTkVYVF9UUkFJTElOR19TTEFTSCIsInRlc3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/normalize-trailing-slash.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/request-idle-callback.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/client/request-idle-callback.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.cancelIdleCallback = exports.requestIdleCallback = void 0;\n\nconst requestIdleCallback = typeof self !== 'undefined' && self.requestIdleCallback && self.requestIdleCallback.bind(window) || function (cb) {\n  let start = Date.now();\n  return setTimeout(function () {\n    cb({\n      didTimeout: false,\n      timeRemaining: function () {\n        return Math.max(0, 50 - (Date.now() - start));\n      }\n    });\n  }, 1);\n};\n\nexports.requestIdleCallback = requestIdleCallback;\n\nconst cancelIdleCallback = typeof self !== 'undefined' && self.cancelIdleCallback && self.cancelIdleCallback.bind(window) || function (id) {\n  return clearTimeout(id);\n};\n\nexports.cancelIdleCallback = cancelIdleCallback;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yZXF1ZXN0LWlkbGUtY2FsbGJhY2suanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztBQUN6Q0csRUFBQUEsS0FBSyxFQUFFO0FBRGtDLENBQTdDO0FBR0FELDBCQUFBLEdBQTZCQSwyQkFBQSxHQUE4QixLQUFLLENBQWhFOztBQUNBLE1BQU1HLG1CQUFtQixHQUFHLE9BQU9DLElBQVAsS0FBZ0IsV0FBaEIsSUFBK0JBLElBQUksQ0FBQ0QsbUJBQXBDLElBQTJEQyxJQUFJLENBQUNELG1CQUFMLENBQXlCRSxJQUF6QixDQUE4QkMsTUFBOUIsQ0FBM0QsSUFBb0csVUFBU0MsRUFBVCxFQUFhO0FBQ3pJLE1BQUlDLEtBQUssR0FBR0MsSUFBSSxDQUFDQyxHQUFMLEVBQVo7QUFDQSxTQUFPQyxVQUFVLENBQUMsWUFBVztBQUN6QkosSUFBQUEsRUFBRSxDQUFDO0FBQ0NLLE1BQUFBLFVBQVUsRUFBRSxLQURiO0FBRUNDLE1BQUFBLGFBQWEsRUFBRSxZQUFXO0FBQ3RCLGVBQU9DLElBQUksQ0FBQ0MsR0FBTCxDQUFTLENBQVQsRUFBWSxNQUFNTixJQUFJLENBQUNDLEdBQUwsS0FBYUYsS0FBbkIsQ0FBWixDQUFQO0FBQ0g7QUFKRixLQUFELENBQUY7QUFNSCxHQVBnQixFQU9kLENBUGMsQ0FBakI7QUFRSCxDQVZEOztBQVdBUiwyQkFBQSxHQUE4QkcsbUJBQTlCOztBQUNBLE1BQU1ELGtCQUFrQixHQUFHLE9BQU9FLElBQVAsS0FBZ0IsV0FBaEIsSUFBK0JBLElBQUksQ0FBQ0Ysa0JBQXBDLElBQTBERSxJQUFJLENBQUNGLGtCQUFMLENBQXdCRyxJQUF4QixDQUE2QkMsTUFBN0IsQ0FBMUQsSUFBa0csVUFBU1UsRUFBVCxFQUFhO0FBQ3RJLFNBQU9DLFlBQVksQ0FBQ0QsRUFBRCxDQUFuQjtBQUNILENBRkQ7O0FBR0FoQiwwQkFBQSxHQUE2QkUsa0JBQTdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVyY3VyeS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L3JlcXVlc3QtaWRsZS1jYWxsYmFjay5qcz8xZTIwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5jYW5jZWxJZGxlQ2FsbGJhY2sgPSBleHBvcnRzLnJlcXVlc3RJZGxlQ2FsbGJhY2sgPSB2b2lkIDA7XG5jb25zdCByZXF1ZXN0SWRsZUNhbGxiYWNrID0gdHlwZW9mIHNlbGYgIT09ICd1bmRlZmluZWQnICYmIHNlbGYucmVxdWVzdElkbGVDYWxsYmFjayAmJiBzZWxmLnJlcXVlc3RJZGxlQ2FsbGJhY2suYmluZCh3aW5kb3cpIHx8IGZ1bmN0aW9uKGNiKSB7XG4gICAgbGV0IHN0YXJ0ID0gRGF0ZS5ub3coKTtcbiAgICByZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgY2Ioe1xuICAgICAgICAgICAgZGlkVGltZW91dDogZmFsc2UsXG4gICAgICAgICAgICB0aW1lUmVtYWluaW5nOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gTWF0aC5tYXgoMCwgNTAgLSAoRGF0ZS5ub3coKSAtIHN0YXJ0KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0sIDEpO1xufTtcbmV4cG9ydHMucmVxdWVzdElkbGVDYWxsYmFjayA9IHJlcXVlc3RJZGxlQ2FsbGJhY2s7XG5jb25zdCBjYW5jZWxJZGxlQ2FsbGJhY2sgPSB0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcgJiYgc2VsZi5jYW5jZWxJZGxlQ2FsbGJhY2sgJiYgc2VsZi5jYW5jZWxJZGxlQ2FsbGJhY2suYmluZCh3aW5kb3cpIHx8IGZ1bmN0aW9uKGlkKSB7XG4gICAgcmV0dXJuIGNsZWFyVGltZW91dChpZCk7XG59O1xuZXhwb3J0cy5jYW5jZWxJZGxlQ2FsbGJhY2sgPSBjYW5jZWxJZGxlQ2FsbGJhY2s7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJlcXVlc3QtaWRsZS1jYWxsYmFjay5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJjYW5jZWxJZGxlQ2FsbGJhY2siLCJyZXF1ZXN0SWRsZUNhbGxiYWNrIiwic2VsZiIsImJpbmQiLCJ3aW5kb3ciLCJjYiIsInN0YXJ0IiwiRGF0ZSIsIm5vdyIsInNldFRpbWVvdXQiLCJkaWRUaW1lb3V0IiwidGltZVJlbWFpbmluZyIsIk1hdGgiLCJtYXgiLCJpZCIsImNsZWFyVGltZW91dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/request-idle-callback.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/route-loader.js":
/*!*******************************************************!*\
  !*** ./node_modules/next/dist/client/route-loader.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.markAssetError = markAssetError;\nexports.isAssetError = isAssetError;\nexports.getClientBuildManifest = getClientBuildManifest;\nexports.getMiddlewareManifest = getMiddlewareManifest;\nexports.createRouteLoader = createRouteLoader;\n\nvar _getAssetPathFromRoute = _interopRequireDefault(__webpack_require__(/*! ../shared/lib/router/utils/get-asset-path-from-route */ \"../shared/lib/router/utils/get-asset-path-from-route\"));\n\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // 3.8s was arbitrarily chosen as it's what https://web.dev/interactive\n// considers as \"Good\" time-to-interactive. We must assume something went\n// wrong beyond this point, and then fall-back to a full page transition to\n// show the user something of value.\n\n\nconst MS_MAX_IDLE_DELAY = 3800;\n\nfunction withFuture(key, map, generator) {\n  let entry = map.get(key);\n\n  if (entry) {\n    if ('future' in entry) {\n      return entry.future;\n    }\n\n    return Promise.resolve(entry);\n  }\n\n  let resolver;\n  const prom = new Promise(resolve => {\n    resolver = resolve;\n  });\n  map.set(key, entry = {\n    resolve: resolver,\n    future: prom\n  });\n  return generator ? generator() // eslint-disable-next-line no-sequences\n  .then(value => (resolver(value), value)).catch(err => {\n    map.delete(key);\n    throw err;\n  }) : prom;\n}\n\nfunction hasPrefetch(link) {\n  try {\n    link = document.createElement('link');\n    return (// detect IE11 since it supports prefetch but isn't detected\n      // with relList.support\n      !!window.MSInputMethodContext && !!document.documentMode || link.relList.supports('prefetch')\n    );\n  } catch (e) {\n    return false;\n  }\n}\n\nconst canPrefetch = hasPrefetch();\n\nfunction prefetchViaDom(href, as, link) {\n  return new Promise((res, rej) => {\n    const selector = `\n      link[rel=\"prefetch\"][href^=\"${href}\"],\n      link[rel=\"preload\"][href^=\"${href}\"],\n      script[src^=\"${href}\"]`;\n\n    if (document.querySelector(selector)) {\n      return res();\n    }\n\n    link = document.createElement('link'); // The order of property assignment here is intentional:\n\n    if (as) link.as = as;\n    link.rel = `prefetch`;\n    link.crossOrigin = undefined;\n    link.onload = res;\n    link.onerror = rej; // `href` should always be last:\n\n    link.href = href;\n    document.head.appendChild(link);\n  });\n}\n\nconst ASSET_LOAD_ERROR = Symbol('ASSET_LOAD_ERROR');\n\nfunction markAssetError(err) {\n  return Object.defineProperty(err, ASSET_LOAD_ERROR, {});\n}\n\nfunction isAssetError(err) {\n  return err && ASSET_LOAD_ERROR in err;\n}\n\nfunction appendScript(src, script) {\n  return new Promise((resolve, reject) => {\n    script = document.createElement('script'); // The order of property assignment here is intentional.\n    // 1. Setup success/failure hooks in case the browser synchronously\n    //    executes when `src` is set.\n\n    script.onload = resolve;\n\n    script.onerror = () => reject(markAssetError(new Error(`Failed to load script: ${src}`))); // 2. Configure the cross-origin attribute before setting `src` in case the\n    //    browser begins to fetch.\n\n\n    script.crossOrigin = undefined; // 3. Finally, set the source and inject into the DOM in case the child\n    //    must be appended for fetching to start.\n\n    script.src = src;\n    document.body.appendChild(script);\n  });\n} // We wait for pages to be built in dev before we start the route transition\n// timeout to prevent an un-necessary hard navigation in development.\n\n\nlet devBuildPromise; // Resolve a promise that times out after given amount of milliseconds.\n\nfunction resolvePromiseWithTimeout(p, ms, err) {\n  return new Promise((resolve, reject) => {\n    let cancelled = false;\n    p.then(r => {\n      // Resolved, cancel the timeout\n      cancelled = true;\n      resolve(r);\n    }).catch(reject); // We wrap these checks separately for better dead-code elimination in\n    // production bundles.\n\n    if (true) {\n      (devBuildPromise || Promise.resolve()).then(() => {\n        (0, _requestIdleCallback).requestIdleCallback(() => setTimeout(() => {\n          if (!cancelled) {\n            reject(err);\n          }\n        }, ms));\n      });\n    }\n\n    if (false) {}\n  });\n}\n\nfunction getClientBuildManifest() {\n  if (self.__BUILD_MANIFEST) {\n    return Promise.resolve(self.__BUILD_MANIFEST);\n  }\n\n  const onBuildManifest = new Promise(resolve => {\n    // Mandatory because this is not concurrent safe:\n    const cb = self.__BUILD_MANIFEST_CB;\n\n    self.__BUILD_MANIFEST_CB = () => {\n      resolve(self.__BUILD_MANIFEST);\n      cb && cb();\n    };\n  });\n  return resolvePromiseWithTimeout(onBuildManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error('Failed to load client build manifest')));\n}\n\nfunction getMiddlewareManifest() {\n  if (self.__MIDDLEWARE_MANIFEST) {\n    return Promise.resolve(self.__MIDDLEWARE_MANIFEST);\n  }\n\n  const onMiddlewareManifest = new Promise(resolve => {\n    const cb = self.__MIDDLEWARE_MANIFEST_CB;\n\n    self.__MIDDLEWARE_MANIFEST_CB = () => {\n      resolve(self.__MIDDLEWARE_MANIFEST);\n      cb && cb();\n    };\n  });\n  return resolvePromiseWithTimeout(onMiddlewareManifest, MS_MAX_IDLE_DELAY, markAssetError(new Error('Failed to load client middleware manifest')));\n}\n\nfunction getFilesForRoute(assetPrefix, route) {\n  if (true) {\n    return Promise.resolve({\n      scripts: [assetPrefix + '/_next/static/chunks/pages' + encodeURI((0, _getAssetPathFromRoute).default(route, '.js'))],\n      // Styles are handled by `style-loader` in development:\n      css: []\n    });\n  }\n\n  return getClientBuildManifest().then(manifest => {\n    if (!(route in manifest)) {\n      throw markAssetError(new Error(`Failed to lookup route: ${route}`));\n    }\n\n    const allFiles = manifest[route].map(entry => assetPrefix + '/_next/' + encodeURI(entry));\n    return {\n      scripts: allFiles.filter(v => v.endsWith('.js')),\n      css: allFiles.filter(v => v.endsWith('.css'))\n    };\n  });\n}\n\nfunction createRouteLoader(assetPrefix) {\n  const entrypoints = new Map();\n  const loadedScripts = new Map();\n  const styleSheets = new Map();\n  const routes = new Map();\n\n  function maybeExecuteScript(src) {\n    // With HMR we might need to \"reload\" scripts when they are\n    // disposed and readded. Executing scripts twice has no functional\n    // differences\n    if (false) {} else {\n      return appendScript(src);\n    }\n  }\n\n  function fetchStyleSheet(href) {\n    let prom = styleSheets.get(href);\n\n    if (prom) {\n      return prom;\n    }\n\n    styleSheets.set(href, prom = fetch(href).then(res => {\n      if (!res.ok) {\n        throw new Error(`Failed to load stylesheet: ${href}`);\n      }\n\n      return res.text().then(text => ({\n        href: href,\n        content: text\n      }));\n    }).catch(err => {\n      throw markAssetError(err);\n    }));\n    return prom;\n  }\n\n  return {\n    whenEntrypoint(route) {\n      return withFuture(route, entrypoints);\n    },\n\n    onEntrypoint(route, execute) {\n      (execute ? Promise.resolve().then(() => execute()).then(exports => ({\n        component: exports && exports.default || exports,\n        exports: exports\n      }), err => ({\n        error: err\n      })) : Promise.resolve(undefined)).then(input => {\n        const old = entrypoints.get(route);\n\n        if (old && 'resolve' in old) {\n          if (input) {\n            entrypoints.set(route, input);\n            old.resolve(input);\n          }\n        } else {\n          if (input) {\n            entrypoints.set(route, input);\n          } else {\n            entrypoints.delete(route);\n          } // when this entrypoint has been resolved before\n          // the route is outdated and we want to invalidate\n          // this cache entry\n\n\n          routes.delete(route);\n        }\n      });\n    },\n\n    loadRoute(route, prefetch) {\n      return withFuture(route, routes, () => {\n        let devBuildPromiseResolve;\n\n        if (true) {\n          devBuildPromise = new Promise(resolve => {\n            devBuildPromiseResolve = resolve;\n          });\n        }\n\n        return resolvePromiseWithTimeout(getFilesForRoute(assetPrefix, route).then(({\n          scripts,\n          css\n        }) => {\n          return Promise.all([entrypoints.has(route) ? [] : Promise.all(scripts.map(maybeExecuteScript)), Promise.all(css.map(fetchStyleSheet))]);\n        }).then(res => {\n          return this.whenEntrypoint(route).then(entrypoint => ({\n            entrypoint,\n            styles: res[1]\n          }));\n        }), MS_MAX_IDLE_DELAY, markAssetError(new Error(`Route did not complete loading: ${route}`))).then(({\n          entrypoint,\n          styles\n        }) => {\n          const res = Object.assign({\n            styles: styles\n          }, entrypoint);\n          return 'error' in entrypoint ? entrypoint : res;\n        }).catch(err => {\n          if (prefetch) {\n            // we don't want to cache errors during prefetch\n            throw err;\n          }\n\n          return {\n            error: err\n          };\n        }).finally(() => {\n          return devBuildPromiseResolve === null || devBuildPromiseResolve === void 0 ? void 0 : devBuildPromiseResolve();\n        });\n      });\n    },\n\n    prefetch(route) {\n      // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n      // License: Apache 2.0\n      let cn;\n\n      if (cn = navigator.connection) {\n        // Don't prefetch if using 2G or if Save-Data is enabled.\n        if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve();\n      }\n\n      return getFilesForRoute(assetPrefix, route).then(output => Promise.all(canPrefetch ? output.scripts.map(script => prefetchViaDom(script, 'script')) : [])).then(() => {\n        (0, _requestIdleCallback).requestIdleCallback(() => this.loadRoute(route, true).catch(() => {}));\n      }).catch( // swallow prefetch errors\n      () => {});\n    }\n\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/route-loader.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/router.js":
/*!*************************************************!*\
  !*** ./node_modules/next/dist/client/router.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"Router\", ({\n  enumerable: true,\n  get: function () {\n    return _router.default;\n  }\n}));\nObject.defineProperty(exports, \"withRouter\", ({\n  enumerable: true,\n  get: function () {\n    return _withRouter.default;\n  }\n}));\nexports.useRouter = useRouter;\nexports.createRouter = createRouter;\nexports.makePublicRouterInstance = makePublicRouterInstance;\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\n\nvar _router = _interopRequireDefault(__webpack_require__(/*! ../shared/lib/router/router */ \"./node_modules/next/dist/shared/lib/router/router.js\"));\n\nvar _routerContext = __webpack_require__(/*! ../shared/lib/router-context */ \"../shared/lib/router-context\");\n\nvar _isError = _interopRequireDefault(__webpack_require__(/*! ../lib/is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\n\nvar _withRouter = _interopRequireDefault(__webpack_require__(/*! ./with-router */ \"./node_modules/next/dist/client/with-router.js\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst singletonRouter = {\n  router: null,\n  readyCallbacks: [],\n\n  ready(cb) {\n    if (this.router) return cb();\n\n    if (false) {}\n  }\n\n}; // Create public properties and methods of the router in the singletonRouter\n\nconst urlPropertyFields = ['pathname', 'route', 'query', 'asPath', 'components', 'isFallback', 'basePath', 'locale', 'locales', 'defaultLocale', 'isReady', 'isPreview', 'isLocaleDomain', 'domainLocales'];\nconst routerEvents = ['routeChangeStart', 'beforeHistoryChange', 'routeChangeComplete', 'routeChangeError', 'hashChangeStart', 'hashChangeComplete'];\nconst coreMethodFields = ['push', 'replace', 'reload', 'back', 'prefetch', 'beforePopState']; // Events is a static property on the router, the router doesn't have to be initialized to use it\n\nObject.defineProperty(singletonRouter, 'events', {\n  get() {\n    return _router.default.events;\n  }\n\n});\nurlPropertyFields.forEach(field => {\n  // Here we need to use Object.defineProperty because we need to return\n  // the property assigned to the actual router\n  // The value might get changed as we change routes and this is the\n  // proper way to access it\n  Object.defineProperty(singletonRouter, field, {\n    get() {\n      const router = getRouter();\n      return router[field];\n    }\n\n  });\n});\ncoreMethodFields.forEach(field => {\n  singletonRouter[field] = (...args) => {\n    const router = getRouter();\n    return router[field](...args);\n  };\n});\nrouterEvents.forEach(event => {\n  singletonRouter.ready(() => {\n    _router.default.events.on(event, (...args) => {\n      const eventField = `on${event.charAt(0).toUpperCase()}${event.substring(1)}`;\n      const _singletonRouter = singletonRouter;\n\n      if (_singletonRouter[eventField]) {\n        try {\n          _singletonRouter[eventField](...args);\n        } catch (err) {\n          console.error(`Error when running the Router event: ${eventField}`);\n          console.error((0, _isError).default(err) ? `${err.message}\\n${err.stack}` : err + '');\n        }\n      }\n    });\n  });\n});\n\nfunction getRouter() {\n  if (!singletonRouter.router) {\n    const message = 'No router instance found.\\n' + 'You should only use \"next/router\" on the client side of your app.\\n';\n    throw new Error(message);\n  }\n\n  return singletonRouter.router;\n}\n\nvar _default = singletonRouter;\nexports[\"default\"] = _default;\n\nfunction useRouter() {\n  return _react.default.useContext(_routerContext.RouterContext);\n}\n\nfunction createRouter(...args) {\n  singletonRouter.router = new _router.default(...args);\n  singletonRouter.readyCallbacks.forEach(cb => cb());\n  singletonRouter.readyCallbacks = [];\n  return singletonRouter.router;\n}\n\nfunction makePublicRouterInstance(router) {\n  const scopedRouter = router;\n  const instance = {};\n\n  for (const property of urlPropertyFields) {\n    if (typeof scopedRouter[property] === 'object') {\n      instance[property] = Object.assign(Array.isArray(scopedRouter[property]) ? [] : {}, scopedRouter[property]) // makes sure query is not stateful\n      ;\n      continue;\n    }\n\n    instance[property] = scopedRouter[property];\n  } // Events is a static property on the router, the router doesn't have to be initialized to use it\n\n\n  instance.events = _router.default.events;\n  coreMethodFields.forEach(field => {\n    instance[field] = (...args) => {\n      return scopedRouter[field](...args);\n    };\n  });\n  return instance;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yb3V0ZXIuanMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBQ2JBLDhDQUE2QztBQUN6Q0csRUFBQUEsS0FBSyxFQUFFO0FBRGtDLENBQTdDO0FBR0FILDBDQUF5QztBQUNyQ0ksRUFBQUEsVUFBVSxFQUFFLElBRHlCO0FBRXJDQyxFQUFBQSxHQUFHLEVBQUUsWUFBVztBQUNaLFdBQU9DLE9BQU8sQ0FBQ0MsT0FBZjtBQUNIO0FBSm9DLENBQXpDO0FBTUFQLDhDQUE2QztBQUN6Q0ksRUFBQUEsVUFBVSxFQUFFLElBRDZCO0FBRXpDQyxFQUFBQSxHQUFHLEVBQUUsWUFBVztBQUNaLFdBQU9HLFdBQVcsQ0FBQ0QsT0FBbkI7QUFDSDtBQUp3QyxDQUE3QztBQU1BTCxpQkFBQSxHQUFvQk8sU0FBcEI7QUFDQVAsb0JBQUEsR0FBdUJRLFlBQXZCO0FBQ0FSLGdDQUFBLEdBQW1DUyx3QkFBbkM7QUFDQVQsa0JBQUEsR0FBa0IsS0FBSyxDQUF2Qjs7QUFDQSxJQUFJVSxNQUFNLEdBQUdDLHNCQUFzQixDQUFDQyxtQkFBTyxDQUFDLG9CQUFELENBQVIsQ0FBbkM7O0FBQ0EsSUFBSVIsT0FBTyxHQUFHTyxzQkFBc0IsQ0FBQ0MsbUJBQU8sQ0FBQyx5RkFBRCxDQUFSLENBQXBDOztBQUNBLElBQUlDLGNBQWMsR0FBR0QsbUJBQU8sQ0FBQyxrRUFBRCxDQUE1Qjs7QUFDQSxJQUFJRSxRQUFRLEdBQUdILHNCQUFzQixDQUFDQyxtQkFBTyxDQUFDLGlFQUFELENBQVIsQ0FBckM7O0FBQ0EsSUFBSU4sV0FBVyxHQUFHSyxzQkFBc0IsQ0FBQ0MsbUJBQU8sQ0FBQyxxRUFBRCxDQUFSLENBQXhDOztBQUNBLFNBQVNELHNCQUFULENBQWdDSSxHQUFoQyxFQUFxQztBQUNqQyxTQUFPQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0MsVUFBWCxHQUF3QkQsR0FBeEIsR0FBOEI7QUFDakNWLElBQUFBLE9BQU8sRUFBRVU7QUFEd0IsR0FBckM7QUFHSDs7QUFDRCxNQUFNRSxlQUFlLEdBQUc7QUFDcEJDLEVBQUFBLE1BQU0sRUFBRSxJQURZO0FBRXBCQyxFQUFBQSxjQUFjLEVBQUUsRUFGSTs7QUFHcEJDLEVBQUFBLEtBQUssQ0FBRUMsRUFBRixFQUFNO0FBQ1AsUUFBSSxLQUFLSCxNQUFULEVBQWlCLE9BQU9HLEVBQUUsRUFBVDs7QUFDakIsZUFBbUMsRUFFbEM7QUFDSjs7QUFSbUIsQ0FBeEIsQyxDQVVBOztBQUNBLE1BQU1FLGlCQUFpQixHQUFHLENBQ3RCLFVBRHNCLEVBRXRCLE9BRnNCLEVBR3RCLE9BSHNCLEVBSXRCLFFBSnNCLEVBS3RCLFlBTHNCLEVBTXRCLFlBTnNCLEVBT3RCLFVBUHNCLEVBUXRCLFFBUnNCLEVBU3RCLFNBVHNCLEVBVXRCLGVBVnNCLEVBV3RCLFNBWHNCLEVBWXRCLFdBWnNCLEVBYXRCLGdCQWJzQixFQWN0QixlQWRzQixDQUExQjtBQWdCQSxNQUFNQyxZQUFZLEdBQUcsQ0FDakIsa0JBRGlCLEVBRWpCLHFCQUZpQixFQUdqQixxQkFIaUIsRUFJakIsa0JBSmlCLEVBS2pCLGlCQUxpQixFQU1qQixvQkFOaUIsQ0FBckI7QUFRQSxNQUFNQyxnQkFBZ0IsR0FBRyxDQUNyQixNQURxQixFQUVyQixTQUZxQixFQUdyQixRQUhxQixFQUlyQixNQUpxQixFQUtyQixVQUxxQixFQU1yQixnQkFOcUIsQ0FBekIsQyxDQVFBOztBQUNBM0IsTUFBTSxDQUFDQyxjQUFQLENBQXNCa0IsZUFBdEIsRUFBdUMsUUFBdkMsRUFBaUQ7QUFDN0NkLEVBQUFBLEdBQUcsR0FBSTtBQUNILFdBQU9DLE9BQU8sQ0FBQ0MsT0FBUixDQUFnQnFCLE1BQXZCO0FBQ0g7O0FBSDRDLENBQWpEO0FBS0FILGlCQUFpQixDQUFDSSxPQUFsQixDQUEyQkMsS0FBRCxJQUFTO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E5QixFQUFBQSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JrQixlQUF0QixFQUF1Q1csS0FBdkMsRUFBOEM7QUFDMUN6QixJQUFBQSxHQUFHLEdBQUk7QUFDSCxZQUFNZSxNQUFNLEdBQUdXLFNBQVMsRUFBeEI7QUFDQSxhQUFPWCxNQUFNLENBQUNVLEtBQUQsQ0FBYjtBQUNIOztBQUp5QyxHQUE5QztBQU1ILENBWEQ7QUFZQUgsZ0JBQWdCLENBQUNFLE9BQWpCLENBQTBCQyxLQUFELElBQVM7QUFDOUJYLEVBQUFBLGVBQWUsQ0FBQ1csS0FBRCxDQUFmLEdBQXlCLENBQUMsR0FBR0UsSUFBSixLQUFXO0FBQ2hDLFVBQU1aLE1BQU0sR0FBR1csU0FBUyxFQUF4QjtBQUNBLFdBQU9YLE1BQU0sQ0FBQ1UsS0FBRCxDQUFOLENBQWMsR0FBR0UsSUFBakIsQ0FBUDtBQUNILEdBSEQ7QUFJSCxDQUxEO0FBTUFOLFlBQVksQ0FBQ0csT0FBYixDQUFzQkksS0FBRCxJQUFTO0FBQzFCZCxFQUFBQSxlQUFlLENBQUNHLEtBQWhCLENBQXNCLE1BQUk7QUFDdEJoQixJQUFBQSxPQUFPLENBQUNDLE9BQVIsQ0FBZ0JxQixNQUFoQixDQUF1Qk0sRUFBdkIsQ0FBMEJELEtBQTFCLEVBQWlDLENBQUMsR0FBR0QsSUFBSixLQUFXO0FBQ3hDLFlBQU1HLFVBQVUsR0FBSSxLQUFJRixLQUFLLENBQUNHLE1BQU4sQ0FBYSxDQUFiLEVBQWdCQyxXQUFoQixFQUE4QixHQUFFSixLQUFLLENBQUNLLFNBQU4sQ0FBZ0IsQ0FBaEIsQ0FBbUIsRUFBM0U7QUFDQSxZQUFNQyxnQkFBZ0IsR0FBR3BCLGVBQXpCOztBQUNBLFVBQUlvQixnQkFBZ0IsQ0FBQ0osVUFBRCxDQUFwQixFQUFrQztBQUM5QixZQUFJO0FBQ0FJLFVBQUFBLGdCQUFnQixDQUFDSixVQUFELENBQWhCLENBQTZCLEdBQUdILElBQWhDO0FBQ0gsU0FGRCxDQUVFLE9BQU9RLEdBQVAsRUFBWTtBQUNWQyxVQUFBQSxPQUFPLENBQUNDLEtBQVIsQ0FBZSx3Q0FBdUNQLFVBQVcsRUFBakU7QUFDQU0sVUFBQUEsT0FBTyxDQUFDQyxLQUFSLENBQWMsQ0FBQyxHQUFHMUIsUUFBSixFQUFjVCxPQUFkLENBQXNCaUMsR0FBdEIsSUFBOEIsR0FBRUEsR0FBRyxDQUFDRyxPQUFRLEtBQUlILEdBQUcsQ0FBQ0ksS0FBTSxFQUExRCxHQUE4REosR0FBRyxHQUFHLEVBQWxGO0FBQ0g7QUFDSjtBQUNKLEtBWEQ7QUFZSCxHQWJEO0FBY0gsQ0FmRDs7QUFnQkEsU0FBU1QsU0FBVCxHQUFxQjtBQUNqQixNQUFJLENBQUNaLGVBQWUsQ0FBQ0MsTUFBckIsRUFBNkI7QUFDekIsVUFBTXVCLE9BQU8sR0FBRyxnQ0FBZ0MscUVBQWhEO0FBQ0EsVUFBTSxJQUFJRSxLQUFKLENBQVVGLE9BQVYsQ0FBTjtBQUNIOztBQUNELFNBQU94QixlQUFlLENBQUNDLE1BQXZCO0FBQ0g7O0FBQ0QsSUFBSTBCLFFBQVEsR0FBRzNCLGVBQWY7QUFDQWpCLGtCQUFBLEdBQWtCNEMsUUFBbEI7O0FBQ0EsU0FBU3JDLFNBQVQsR0FBcUI7QUFDakIsU0FBT0csTUFBTSxDQUFDTCxPQUFQLENBQWV3QyxVQUFmLENBQTBCaEMsY0FBYyxDQUFDaUMsYUFBekMsQ0FBUDtBQUNIOztBQUNELFNBQVN0QyxZQUFULENBQXNCLEdBQUdzQixJQUF6QixFQUErQjtBQUMzQmIsRUFBQUEsZUFBZSxDQUFDQyxNQUFoQixHQUF5QixJQUFJZCxPQUFPLENBQUNDLE9BQVosQ0FBb0IsR0FBR3lCLElBQXZCLENBQXpCO0FBQ0FiLEVBQUFBLGVBQWUsQ0FBQ0UsY0FBaEIsQ0FBK0JRLE9BQS9CLENBQXdDTixFQUFELElBQU1BLEVBQUUsRUFBL0M7QUFFQUosRUFBQUEsZUFBZSxDQUFDRSxjQUFoQixHQUFpQyxFQUFqQztBQUNBLFNBQU9GLGVBQWUsQ0FBQ0MsTUFBdkI7QUFDSDs7QUFDRCxTQUFTVCx3QkFBVCxDQUFrQ1MsTUFBbEMsRUFBMEM7QUFDdEMsUUFBTTZCLFlBQVksR0FBRzdCLE1BQXJCO0FBQ0EsUUFBTThCLFFBQVEsR0FBRyxFQUFqQjs7QUFDQSxPQUFLLE1BQU1DLFFBQVgsSUFBdUIxQixpQkFBdkIsRUFBeUM7QUFDckMsUUFBSSxPQUFPd0IsWUFBWSxDQUFDRSxRQUFELENBQW5CLEtBQWtDLFFBQXRDLEVBQWdEO0FBQzVDRCxNQUFBQSxRQUFRLENBQUNDLFFBQUQsQ0FBUixHQUFxQm5ELE1BQU0sQ0FBQ29ELE1BQVAsQ0FBY0MsS0FBSyxDQUFDQyxPQUFOLENBQWNMLFlBQVksQ0FBQ0UsUUFBRCxDQUExQixJQUF3QyxFQUF4QyxHQUE2QyxFQUEzRCxFQUErREYsWUFBWSxDQUFDRSxRQUFELENBQTNFLENBQXJCLENBQTRHO0FBQTVHO0FBRUE7QUFDSDs7QUFDREQsSUFBQUEsUUFBUSxDQUFDQyxRQUFELENBQVIsR0FBcUJGLFlBQVksQ0FBQ0UsUUFBRCxDQUFqQztBQUNILEdBVnFDLENBV3RDOzs7QUFDQUQsRUFBQUEsUUFBUSxDQUFDdEIsTUFBVCxHQUFrQnRCLE9BQU8sQ0FBQ0MsT0FBUixDQUFnQnFCLE1BQWxDO0FBQ0FELEVBQUFBLGdCQUFnQixDQUFDRSxPQUFqQixDQUEwQkMsS0FBRCxJQUFTO0FBQzlCb0IsSUFBQUEsUUFBUSxDQUFDcEIsS0FBRCxDQUFSLEdBQWtCLENBQUMsR0FBR0UsSUFBSixLQUFXO0FBQ3pCLGFBQU9pQixZQUFZLENBQUNuQixLQUFELENBQVosQ0FBb0IsR0FBR0UsSUFBdkIsQ0FBUDtBQUNILEtBRkQ7QUFHSCxHQUpEO0FBS0EsU0FBT2tCLFFBQVA7QUFDSCIsInNvdXJjZXMiOlsid2VicGFjazovL21lcmN1cnkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9yb3V0ZXIuanM/MzFmYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJvdXRlclwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX3JvdXRlci5kZWZhdWx0O1xuICAgIH1cbn0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwid2l0aFJvdXRlclwiLCB7XG4gICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gX3dpdGhSb3V0ZXIuZGVmYXVsdDtcbiAgICB9XG59KTtcbmV4cG9ydHMudXNlUm91dGVyID0gdXNlUm91dGVyO1xuZXhwb3J0cy5jcmVhdGVSb3V0ZXIgPSBjcmVhdGVSb3V0ZXI7XG5leHBvcnRzLm1ha2VQdWJsaWNSb3V0ZXJJbnN0YW5jZSA9IG1ha2VQdWJsaWNSb3V0ZXJJbnN0YW5jZTtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgX3JvdXRlciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL3NoYXJlZC9saWIvcm91dGVyL3JvdXRlclwiKSk7XG52YXIgX3JvdXRlckNvbnRleHQgPSByZXF1aXJlKFwiLi4vc2hhcmVkL2xpYi9yb3V0ZXItY29udGV4dFwiKTtcbnZhciBfaXNFcnJvciA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL2xpYi9pcy1lcnJvclwiKSk7XG52YXIgX3dpdGhSb3V0ZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3dpdGgtcm91dGVyXCIpKTtcbmZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHtcbiAgICAgICAgZGVmYXVsdDogb2JqXG4gICAgfTtcbn1cbmNvbnN0IHNpbmdsZXRvblJvdXRlciA9IHtcbiAgICByb3V0ZXI6IG51bGwsXG4gICAgcmVhZHlDYWxsYmFja3M6IFtdLFxuICAgIHJlYWR5IChjYikge1xuICAgICAgICBpZiAodGhpcy5yb3V0ZXIpIHJldHVybiBjYigpO1xuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIHRoaXMucmVhZHlDYWxsYmFja3MucHVzaChjYik7XG4gICAgICAgIH1cbiAgICB9XG59O1xuLy8gQ3JlYXRlIHB1YmxpYyBwcm9wZXJ0aWVzIGFuZCBtZXRob2RzIG9mIHRoZSByb3V0ZXIgaW4gdGhlIHNpbmdsZXRvblJvdXRlclxuY29uc3QgdXJsUHJvcGVydHlGaWVsZHMgPSBbXG4gICAgJ3BhdGhuYW1lJyxcbiAgICAncm91dGUnLFxuICAgICdxdWVyeScsXG4gICAgJ2FzUGF0aCcsXG4gICAgJ2NvbXBvbmVudHMnLFxuICAgICdpc0ZhbGxiYWNrJyxcbiAgICAnYmFzZVBhdGgnLFxuICAgICdsb2NhbGUnLFxuICAgICdsb2NhbGVzJyxcbiAgICAnZGVmYXVsdExvY2FsZScsXG4gICAgJ2lzUmVhZHknLFxuICAgICdpc1ByZXZpZXcnLFxuICAgICdpc0xvY2FsZURvbWFpbicsXG4gICAgJ2RvbWFpbkxvY2FsZXMnLCBcbl07XG5jb25zdCByb3V0ZXJFdmVudHMgPSBbXG4gICAgJ3JvdXRlQ2hhbmdlU3RhcnQnLFxuICAgICdiZWZvcmVIaXN0b3J5Q2hhbmdlJyxcbiAgICAncm91dGVDaGFuZ2VDb21wbGV0ZScsXG4gICAgJ3JvdXRlQ2hhbmdlRXJyb3InLFxuICAgICdoYXNoQ2hhbmdlU3RhcnQnLFxuICAgICdoYXNoQ2hhbmdlQ29tcGxldGUnLCBcbl07XG5jb25zdCBjb3JlTWV0aG9kRmllbGRzID0gW1xuICAgICdwdXNoJyxcbiAgICAncmVwbGFjZScsXG4gICAgJ3JlbG9hZCcsXG4gICAgJ2JhY2snLFxuICAgICdwcmVmZXRjaCcsXG4gICAgJ2JlZm9yZVBvcFN0YXRlJywgXG5dO1xuLy8gRXZlbnRzIGlzIGEgc3RhdGljIHByb3BlcnR5IG9uIHRoZSByb3V0ZXIsIHRoZSByb3V0ZXIgZG9lc24ndCBoYXZlIHRvIGJlIGluaXRpYWxpemVkIHRvIHVzZSBpdFxuT2JqZWN0LmRlZmluZVByb3BlcnR5KHNpbmdsZXRvblJvdXRlciwgJ2V2ZW50cycsIHtcbiAgICBnZXQgKCkge1xuICAgICAgICByZXR1cm4gX3JvdXRlci5kZWZhdWx0LmV2ZW50cztcbiAgICB9XG59KTtcbnVybFByb3BlcnR5RmllbGRzLmZvckVhY2goKGZpZWxkKT0+e1xuICAgIC8vIEhlcmUgd2UgbmVlZCB0byB1c2UgT2JqZWN0LmRlZmluZVByb3BlcnR5IGJlY2F1c2Ugd2UgbmVlZCB0byByZXR1cm5cbiAgICAvLyB0aGUgcHJvcGVydHkgYXNzaWduZWQgdG8gdGhlIGFjdHVhbCByb3V0ZXJcbiAgICAvLyBUaGUgdmFsdWUgbWlnaHQgZ2V0IGNoYW5nZWQgYXMgd2UgY2hhbmdlIHJvdXRlcyBhbmQgdGhpcyBpcyB0aGVcbiAgICAvLyBwcm9wZXIgd2F5IHRvIGFjY2VzcyBpdFxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShzaW5nbGV0b25Sb3V0ZXIsIGZpZWxkLCB7XG4gICAgICAgIGdldCAoKSB7XG4gICAgICAgICAgICBjb25zdCByb3V0ZXIgPSBnZXRSb3V0ZXIoKTtcbiAgICAgICAgICAgIHJldHVybiByb3V0ZXJbZmllbGRdO1xuICAgICAgICB9XG4gICAgfSk7XG59KTtcbmNvcmVNZXRob2RGaWVsZHMuZm9yRWFjaCgoZmllbGQpPT57XG4gICAgc2luZ2xldG9uUm91dGVyW2ZpZWxkXSA9ICguLi5hcmdzKT0+e1xuICAgICAgICBjb25zdCByb3V0ZXIgPSBnZXRSb3V0ZXIoKTtcbiAgICAgICAgcmV0dXJuIHJvdXRlcltmaWVsZF0oLi4uYXJncyk7XG4gICAgfTtcbn0pO1xucm91dGVyRXZlbnRzLmZvckVhY2goKGV2ZW50KT0+e1xuICAgIHNpbmdsZXRvblJvdXRlci5yZWFkeSgoKT0+e1xuICAgICAgICBfcm91dGVyLmRlZmF1bHQuZXZlbnRzLm9uKGV2ZW50LCAoLi4uYXJncyk9PntcbiAgICAgICAgICAgIGNvbnN0IGV2ZW50RmllbGQgPSBgb24ke2V2ZW50LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpfSR7ZXZlbnQuc3Vic3RyaW5nKDEpfWA7XG4gICAgICAgICAgICBjb25zdCBfc2luZ2xldG9uUm91dGVyID0gc2luZ2xldG9uUm91dGVyO1xuICAgICAgICAgICAgaWYgKF9zaW5nbGV0b25Sb3V0ZXJbZXZlbnRGaWVsZF0pIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICBfc2luZ2xldG9uUm91dGVyW2V2ZW50RmllbGRdKC4uLmFyZ3MpO1xuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGBFcnJvciB3aGVuIHJ1bm5pbmcgdGhlIFJvdXRlciBldmVudDogJHtldmVudEZpZWxkfWApO1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCgwLCBfaXNFcnJvcikuZGVmYXVsdChlcnIpID8gYCR7ZXJyLm1lc3NhZ2V9XFxuJHtlcnIuc3RhY2t9YCA6IGVyciArICcnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSk7XG5mdW5jdGlvbiBnZXRSb3V0ZXIoKSB7XG4gICAgaWYgKCFzaW5nbGV0b25Sb3V0ZXIucm91dGVyKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSAnTm8gcm91dGVyIGluc3RhbmNlIGZvdW5kLlxcbicgKyAnWW91IHNob3VsZCBvbmx5IHVzZSBcIm5leHQvcm91dGVyXCIgb24gdGhlIGNsaWVudCBzaWRlIG9mIHlvdXIgYXBwLlxcbic7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICB9XG4gICAgcmV0dXJuIHNpbmdsZXRvblJvdXRlci5yb3V0ZXI7XG59XG52YXIgX2RlZmF1bHQgPSBzaW5nbGV0b25Sb3V0ZXI7XG5leHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDtcbmZ1bmN0aW9uIHVzZVJvdXRlcigpIHtcbiAgICByZXR1cm4gX3JlYWN0LmRlZmF1bHQudXNlQ29udGV4dChfcm91dGVyQ29udGV4dC5Sb3V0ZXJDb250ZXh0KTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVJvdXRlciguLi5hcmdzKSB7XG4gICAgc2luZ2xldG9uUm91dGVyLnJvdXRlciA9IG5ldyBfcm91dGVyLmRlZmF1bHQoLi4uYXJncyk7XG4gICAgc2luZ2xldG9uUm91dGVyLnJlYWR5Q2FsbGJhY2tzLmZvckVhY2goKGNiKT0+Y2IoKVxuICAgICk7XG4gICAgc2luZ2xldG9uUm91dGVyLnJlYWR5Q2FsbGJhY2tzID0gW107XG4gICAgcmV0dXJuIHNpbmdsZXRvblJvdXRlci5yb3V0ZXI7XG59XG5mdW5jdGlvbiBtYWtlUHVibGljUm91dGVySW5zdGFuY2Uocm91dGVyKSB7XG4gICAgY29uc3Qgc2NvcGVkUm91dGVyID0gcm91dGVyO1xuICAgIGNvbnN0IGluc3RhbmNlID0ge307XG4gICAgZm9yIChjb25zdCBwcm9wZXJ0eSBvZiB1cmxQcm9wZXJ0eUZpZWxkcyl7XG4gICAgICAgIGlmICh0eXBlb2Ygc2NvcGVkUm91dGVyW3Byb3BlcnR5XSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIGluc3RhbmNlW3Byb3BlcnR5XSA9IE9iamVjdC5hc3NpZ24oQXJyYXkuaXNBcnJheShzY29wZWRSb3V0ZXJbcHJvcGVydHldKSA/IFtdIDoge30sIHNjb3BlZFJvdXRlcltwcm9wZXJ0eV0pIC8vIG1ha2VzIHN1cmUgcXVlcnkgaXMgbm90IHN0YXRlZnVsXG4gICAgICAgICAgICA7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpbnN0YW5jZVtwcm9wZXJ0eV0gPSBzY29wZWRSb3V0ZXJbcHJvcGVydHldO1xuICAgIH1cbiAgICAvLyBFdmVudHMgaXMgYSBzdGF0aWMgcHJvcGVydHkgb24gdGhlIHJvdXRlciwgdGhlIHJvdXRlciBkb2Vzbid0IGhhdmUgdG8gYmUgaW5pdGlhbGl6ZWQgdG8gdXNlIGl0XG4gICAgaW5zdGFuY2UuZXZlbnRzID0gX3JvdXRlci5kZWZhdWx0LmV2ZW50cztcbiAgICBjb3JlTWV0aG9kRmllbGRzLmZvckVhY2goKGZpZWxkKT0+e1xuICAgICAgICBpbnN0YW5jZVtmaWVsZF0gPSAoLi4uYXJncyk9PntcbiAgICAgICAgICAgIHJldHVybiBzY29wZWRSb3V0ZXJbZmllbGRdKC4uLmFyZ3MpO1xuICAgICAgICB9O1xuICAgIH0pO1xuICAgIHJldHVybiBpbnN0YW5jZTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cm91dGVyLmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImVudW1lcmFibGUiLCJnZXQiLCJfcm91dGVyIiwiZGVmYXVsdCIsIl93aXRoUm91dGVyIiwidXNlUm91dGVyIiwiY3JlYXRlUm91dGVyIiwibWFrZVB1YmxpY1JvdXRlckluc3RhbmNlIiwiX3JlYWN0IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJfcm91dGVyQ29udGV4dCIsIl9pc0Vycm9yIiwib2JqIiwiX19lc01vZHVsZSIsInNpbmdsZXRvblJvdXRlciIsInJvdXRlciIsInJlYWR5Q2FsbGJhY2tzIiwicmVhZHkiLCJjYiIsInB1c2giLCJ1cmxQcm9wZXJ0eUZpZWxkcyIsInJvdXRlckV2ZW50cyIsImNvcmVNZXRob2RGaWVsZHMiLCJldmVudHMiLCJmb3JFYWNoIiwiZmllbGQiLCJnZXRSb3V0ZXIiLCJhcmdzIiwiZXZlbnQiLCJvbiIsImV2ZW50RmllbGQiLCJjaGFyQXQiLCJ0b1VwcGVyQ2FzZSIsInN1YnN0cmluZyIsIl9zaW5nbGV0b25Sb3V0ZXIiLCJlcnIiLCJjb25zb2xlIiwiZXJyb3IiLCJtZXNzYWdlIiwic3RhY2siLCJFcnJvciIsIl9kZWZhdWx0IiwidXNlQ29udGV4dCIsIlJvdXRlckNvbnRleHQiLCJzY29wZWRSb3V0ZXIiLCJpbnN0YW5jZSIsInByb3BlcnR5IiwiYXNzaWduIiwiQXJyYXkiLCJpc0FycmF5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/use-intersection.js":
/*!***********************************************************!*\
  !*** ./node_modules/next/dist/client/use-intersection.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.useIntersection = useIntersection;\n\nvar _react = __webpack_require__(/*! react */ \"react\");\n\nvar _requestIdleCallback = __webpack_require__(/*! ./request-idle-callback */ \"./node_modules/next/dist/client/request-idle-callback.js\");\n\nconst hasIntersectionObserver = typeof IntersectionObserver !== 'undefined';\n\nfunction useIntersection({\n  rootRef,\n  rootMargin,\n  disabled\n}) {\n  const isDisabled = disabled || !hasIntersectionObserver;\n  const unobserve = (0, _react).useRef();\n  const [visible, setVisible] = (0, _react).useState(false);\n  const [root, setRoot] = (0, _react).useState(rootRef ? rootRef.current : null);\n  const setRef = (0, _react).useCallback(el => {\n    if (unobserve.current) {\n      unobserve.current();\n      unobserve.current = undefined;\n    }\n\n    if (isDisabled || visible) return;\n\n    if (el && el.tagName) {\n      unobserve.current = observe(el, isVisible => isVisible && setVisible(isVisible), {\n        root,\n        rootMargin\n      });\n    }\n  }, [isDisabled, root, rootMargin, visible]);\n  (0, _react).useEffect(() => {\n    if (!hasIntersectionObserver) {\n      if (!visible) {\n        const idleCallback = (0, _requestIdleCallback).requestIdleCallback(() => setVisible(true));\n        return () => (0, _requestIdleCallback).cancelIdleCallback(idleCallback);\n      }\n    }\n  }, [visible]);\n  (0, _react).useEffect(() => {\n    if (rootRef) setRoot(rootRef.current);\n  }, [rootRef]);\n  return [setRef, visible];\n}\n\nfunction observe(element, callback, options) {\n  const {\n    id,\n    observer,\n    elements\n  } = createObserver(options);\n  elements.set(element, callback);\n  observer.observe(element);\n  return function unobserve() {\n    elements.delete(element);\n    observer.unobserve(element); // Destroy observer when there's nothing left to watch:\n\n    if (elements.size === 0) {\n      observer.disconnect();\n      observers.delete(id);\n      let index = idList.findIndex(obj => obj.root === id.root && obj.margin === id.margin);\n\n      if (index > -1) {\n        idList.splice(index, 1);\n      }\n    }\n  };\n}\n\nconst observers = new Map();\nconst idList = [];\n\nfunction createObserver(options) {\n  const id = {\n    root: options.root || null,\n    margin: options.rootMargin || ''\n  };\n  let existing = idList.find(obj => obj.root === id.root && obj.margin === id.margin);\n  let instance;\n\n  if (existing) {\n    instance = observers.get(existing);\n  } else {\n    instance = observers.get(id);\n    idList.push(id);\n  }\n\n  if (instance) {\n    return instance;\n  }\n\n  const elements = new Map();\n  const observer = new IntersectionObserver(entries => {\n    entries.forEach(entry => {\n      const callback = elements.get(entry.target);\n      const isVisible = entry.isIntersecting || entry.intersectionRatio > 0;\n\n      if (callback && isVisible) {\n        callback(isVisible);\n      }\n    });\n  }, options);\n  observers.set(id, instance = {\n    id,\n    observer,\n    elements\n  });\n  return instance;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/use-intersection.js\n");

/***/ }),

/***/ "./node_modules/next/dist/client/with-router.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/client/with-router.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = withRouter;\n\nvar _react = _interopRequireDefault(__webpack_require__(/*! react */ \"react\"));\n\nvar _router = __webpack_require__(/*! ./router */ \"./node_modules/next/dist/client/router.js\");\n\nfunction withRouter(ComposedComponent) {\n  function WithRouterWrapper(props) {\n    return /*#__PURE__*/_react.default.createElement(ComposedComponent, Object.assign({\n      router: (0, _router).useRouter()\n    }, props));\n  }\n\n  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps;\n  WithRouterWrapper.origGetInitialProps = ComposedComponent.origGetInitialProps;\n\n  if (true) {\n    const name = ComposedComponent.displayName || ComposedComponent.name || 'Unknown';\n    WithRouterWrapper.displayName = `withRouter(${name})`;\n  }\n\n  return WithRouterWrapper;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC93aXRoLXJvdXRlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFDYkEsOENBQTZDO0FBQ3pDRyxFQUFBQSxLQUFLLEVBQUU7QUFEa0MsQ0FBN0M7QUFHQUQsa0JBQUEsR0FBa0JHLFVBQWxCOztBQUNBLElBQUlDLE1BQU0sR0FBR0Msc0JBQXNCLENBQUNDLG1CQUFPLENBQUMsb0JBQUQsQ0FBUixDQUFuQzs7QUFDQSxJQUFJQyxPQUFPLEdBQUdELG1CQUFPLENBQUMsMkRBQUQsQ0FBckI7O0FBQ0EsU0FBU0gsVUFBVCxDQUFvQkssaUJBQXBCLEVBQXVDO0FBQ25DLFdBQVNDLGlCQUFULENBQTJCQyxLQUEzQixFQUFrQztBQUM5QixXQUFPLGFBQWNOLE1BQU0sQ0FBQ0YsT0FBUCxDQUFlUyxhQUFmLENBQTZCSCxpQkFBN0IsRUFBZ0RWLE1BQU0sQ0FBQ2MsTUFBUCxDQUFjO0FBQy9FQyxNQUFBQSxNQUFNLEVBQUUsQ0FBQyxHQUFHTixPQUFKLEVBQWFPLFNBQWI7QUFEdUUsS0FBZCxFQUVsRUosS0FGa0UsQ0FBaEQsQ0FBckI7QUFHSDs7QUFDREQsRUFBQUEsaUJBQWlCLENBQUNNLGVBQWxCLEdBQW9DUCxpQkFBaUIsQ0FBQ08sZUFBdEQ7QUFDQU4sRUFBQUEsaUJBQWlCLENBQUNPLG1CQUFsQixHQUF3Q1IsaUJBQWlCLENBQUNRLG1CQUExRDs7QUFDQSxZQUEyQztBQUN2QyxVQUFNQyxJQUFJLEdBQUdULGlCQUFpQixDQUFDVSxXQUFsQixJQUFpQ1YsaUJBQWlCLENBQUNTLElBQW5ELElBQTJELFNBQXhFO0FBQ0FSLElBQUFBLGlCQUFpQixDQUFDUyxXQUFsQixHQUFpQyxjQUFhRCxJQUFLLEdBQW5EO0FBQ0g7O0FBQ0QsU0FBT1IsaUJBQVA7QUFDSDs7QUFDRCxTQUFTSixzQkFBVCxDQUFnQ2MsR0FBaEMsRUFBcUM7QUFDakMsU0FBT0EsR0FBRyxJQUFJQSxHQUFHLENBQUNDLFVBQVgsR0FBd0JELEdBQXhCLEdBQThCO0FBQ2pDakIsSUFBQUEsT0FBTyxFQUFFaUI7QUFEd0IsR0FBckM7QUFHSCIsInNvdXJjZXMiOlsid2VicGFjazovL21lcmN1cnkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC93aXRoLXJvdXRlci5qcz9hYzdjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gd2l0aFJvdXRlcjtcbnZhciBfcmVhY3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJyZWFjdFwiKSk7XG52YXIgX3JvdXRlciA9IHJlcXVpcmUoXCIuL3JvdXRlclwiKTtcbmZ1bmN0aW9uIHdpdGhSb3V0ZXIoQ29tcG9zZWRDb21wb25lbnQpIHtcbiAgICBmdW5jdGlvbiBXaXRoUm91dGVyV3JhcHBlcihwcm9wcykge1xuICAgICAgICByZXR1cm4oLyojX19QVVJFX18qLyBfcmVhY3QuZGVmYXVsdC5jcmVhdGVFbGVtZW50KENvbXBvc2VkQ29tcG9uZW50LCBPYmplY3QuYXNzaWduKHtcbiAgICAgICAgICAgIHJvdXRlcjogKDAsIF9yb3V0ZXIpLnVzZVJvdXRlcigpXG4gICAgICAgIH0sIHByb3BzKSkpO1xuICAgIH1cbiAgICBXaXRoUm91dGVyV3JhcHBlci5nZXRJbml0aWFsUHJvcHMgPSBDb21wb3NlZENvbXBvbmVudC5nZXRJbml0aWFsUHJvcHM7XG4gICAgV2l0aFJvdXRlcldyYXBwZXIub3JpZ0dldEluaXRpYWxQcm9wcyA9IENvbXBvc2VkQ29tcG9uZW50Lm9yaWdHZXRJbml0aWFsUHJvcHM7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IENvbXBvc2VkQ29tcG9uZW50LmRpc3BsYXlOYW1lIHx8IENvbXBvc2VkQ29tcG9uZW50Lm5hbWUgfHwgJ1Vua25vd24nO1xuICAgICAgICBXaXRoUm91dGVyV3JhcHBlci5kaXNwbGF5TmFtZSA9IGB3aXRoUm91dGVyKCR7bmFtZX0pYDtcbiAgICB9XG4gICAgcmV0dXJuIFdpdGhSb3V0ZXJXcmFwcGVyO1xufVxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xufVxuXG4vLyMgc291cmNlTWFwcGluZ1VSTD13aXRoLXJvdXRlci5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJkZWZhdWx0Iiwid2l0aFJvdXRlciIsIl9yZWFjdCIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3JvdXRlciIsIkNvbXBvc2VkQ29tcG9uZW50IiwiV2l0aFJvdXRlcldyYXBwZXIiLCJwcm9wcyIsImNyZWF0ZUVsZW1lbnQiLCJhc3NpZ24iLCJyb3V0ZXIiLCJ1c2VSb3V0ZXIiLCJnZXRJbml0aWFsUHJvcHMiLCJvcmlnR2V0SW5pdGlhbFByb3BzIiwibmFtZSIsImRpc3BsYXlOYW1lIiwib2JqIiwiX19lc01vZHVsZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/client/with-router.js\n");

/***/ }),

/***/ "./node_modules/next/dist/shared/lib/router/router.js":
/*!************************************************************!*\
  !*** ./node_modules/next/dist/shared/lib/router/router.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.getDomainLocale = getDomainLocale;\nexports.addLocale = addLocale;\nexports.delLocale = delLocale;\nexports.hasBasePath = hasBasePath;\nexports.addBasePath = addBasePath;\nexports.delBasePath = delBasePath;\nexports.isLocalURL = isLocalURL;\nexports.interpolateAs = interpolateAs;\nexports.resolveHref = resolveHref;\nexports[\"default\"] = void 0;\n\nvar _normalizeTrailingSlash = __webpack_require__(/*! ../../../client/normalize-trailing-slash */ \"./node_modules/next/dist/client/normalize-trailing-slash.js\");\n\nvar _routeLoader = __webpack_require__(/*! ../../../client/route-loader */ \"./node_modules/next/dist/client/route-loader.js\");\n\nvar _isError = _interopRequireWildcard(__webpack_require__(/*! ../../../lib/is-error */ \"./node_modules/next/dist/lib/is-error.js\"));\n\nvar _denormalizePagePath = __webpack_require__(/*! ../../../server/denormalize-page-path */ \"../../../server/denormalize-page-path\");\n\nvar _normalizeLocalePath = __webpack_require__(/*! ../i18n/normalize-locale-path */ \"../i18n/normalize-locale-path\");\n\nvar _mitt = _interopRequireDefault(__webpack_require__(/*! ../mitt */ \"../mitt\"));\n\nvar _utils = __webpack_require__(/*! ../utils */ \"../utils\");\n\nvar _isDynamic = __webpack_require__(/*! ./utils/is-dynamic */ \"./utils/is-dynamic\");\n\nvar _parseRelativeUrl = __webpack_require__(/*! ./utils/parse-relative-url */ \"./utils/parse-relative-url\");\n\nvar _querystring = __webpack_require__(/*! ./utils/querystring */ \"./utils/querystring\");\n\nvar _resolveRewrites = _interopRequireDefault(__webpack_require__(/*! ./utils/resolve-rewrites */ \"./utils/resolve-rewrites\"));\n\nvar _routeMatcher = __webpack_require__(/*! ./utils/route-matcher */ \"./utils/route-matcher\");\n\nvar _routeRegex = __webpack_require__(/*! ./utils/route-regex */ \"./utils/route-regex\");\n\nvar _formatUrl = __webpack_require__(/*! ./utils/format-url */ \"./utils/format-url\");\n\nvar _routingItems = __webpack_require__(/*! ./utils/routing-items */ \"./utils/routing-items\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nlet detectDomainLocale;\n\nif (false) {}\n\nconst basePath =  false || '';\n\nfunction buildCancellationError() {\n  return Object.assign(new Error('Route Cancelled'), {\n    cancelled: true\n  });\n}\n\nfunction addPathPrefix(path, prefix) {\n  if (!path.startsWith('/') || !prefix) {\n    return path;\n  }\n\n  const pathname = pathNoQueryHash(path);\n  return (0, _normalizeTrailingSlash).normalizePathTrailingSlash(`${prefix}${pathname}`) + path.slice(pathname.length);\n}\n\nfunction getDomainLocale(path, locale, locales, domainLocales) {\n  if (false) {} else {\n    return false;\n  }\n}\n\nfunction addLocale(path, locale, defaultLocale) {\n  if (false) {}\n\n  return path;\n}\n\nfunction delLocale(path, locale) {\n  if (false) {}\n\n  return path;\n}\n\nfunction pathNoQueryHash(path) {\n  const queryIndex = path.indexOf('?');\n  const hashIndex = path.indexOf('#');\n\n  if (queryIndex > -1 || hashIndex > -1) {\n    path = path.substring(0, queryIndex > -1 ? queryIndex : hashIndex);\n  }\n\n  return path;\n}\n\nfunction hasBasePath(path) {\n  path = pathNoQueryHash(path);\n  return path === basePath || path.startsWith(basePath + '/');\n}\n\nfunction addBasePath(path) {\n  // we only add the basepath on relative urls\n  return addPathPrefix(path, basePath);\n}\n\nfunction delBasePath(path) {\n  path = path.slice(basePath.length);\n  if (!path.startsWith('/')) path = `/${path}`;\n  return path;\n}\n\nfunction isLocalURL(url) {\n  // prevent a hydration mismatch on href for url with anchor refs\n  if (url.startsWith('/') || url.startsWith('#') || url.startsWith('?')) return true;\n\n  try {\n    // absolute urls can be local if they are on the same origin\n    const locationOrigin = (0, _utils).getLocationOrigin();\n    const resolved = new URL(url, locationOrigin);\n    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname);\n  } catch (_) {\n    return false;\n  }\n}\n\nfunction interpolateAs(route, asPathname, query) {\n  let interpolatedRoute = '';\n  const dynamicRegex = (0, _routeRegex).getRouteRegex(route);\n  const dynamicGroups = dynamicRegex.groups;\n  const dynamicMatches = // Try to match the dynamic route against the asPath\n  (asPathname !== route ? (0, _routeMatcher).getRouteMatcher(dynamicRegex)(asPathname) : '') || // Fall back to reading the values from the href\n  // TODO: should this take priority; also need to change in the router.\n  query;\n  interpolatedRoute = route;\n  const params = Object.keys(dynamicGroups);\n\n  if (!params.every(param => {\n    let value = dynamicMatches[param] || '';\n    const {\n      repeat,\n      optional\n    } = dynamicGroups[param]; // support single-level catch-all\n    // TODO: more robust handling for user-error (passing `/`)\n\n    let replaced = `[${repeat ? '...' : ''}${param}]`;\n\n    if (optional) {\n      replaced = `${!value ? '/' : ''}[${replaced}]`;\n    }\n\n    if (repeat && !Array.isArray(value)) value = [value];\n    return (optional || param in dynamicMatches) && (interpolatedRoute = interpolatedRoute.replace(replaced, repeat ? value.map( // these values should be fully encoded instead of just\n    // path delimiter escaped since they are being inserted\n    // into the URL and we expect URL encoded segments\n    // when parsing dynamic route params\n    segment => encodeURIComponent(segment)).join('/') : encodeURIComponent(value)) || '/');\n  })) {\n    interpolatedRoute = '' // did not satisfy all requirements\n    ; // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n  }\n\n  return {\n    params,\n    result: interpolatedRoute\n  };\n}\n\nfunction omitParmsFromQuery(query, params) {\n  const filteredQuery = {};\n  Object.keys(query).forEach(key => {\n    if (!params.includes(key)) {\n      filteredQuery[key] = query[key];\n    }\n  });\n  return filteredQuery;\n}\n\nfunction resolveHref(router, href, resolveAs) {\n  // we use a dummy base url for relative urls\n  let base;\n  let urlAsString = typeof href === 'string' ? href : (0, _formatUrl).formatWithValidation(href); // repeated slashes and backslashes in the URL are considered\n  // invalid and will never match a Next.js page/file\n\n  const urlProtoMatch = urlAsString.match(/^[a-zA-Z]{1,}:\\/\\//);\n  const urlAsStringNoProto = urlProtoMatch ? urlAsString.slice(urlProtoMatch[0].length) : urlAsString;\n  const urlParts = urlAsStringNoProto.split('?');\n\n  if ((urlParts[0] || '').match(/(\\/\\/|\\\\)/)) {\n    console.error(`Invalid href passed to next/router: ${urlAsString}, repeated forward-slashes (//) or backslashes \\\\ are not valid in the href`);\n    const normalizedUrl = (0, _utils).normalizeRepeatedSlashes(urlAsStringNoProto);\n    urlAsString = (urlProtoMatch ? urlProtoMatch[0] : '') + normalizedUrl;\n  } // Return because it cannot be routed by the Next.js router\n\n\n  if (!isLocalURL(urlAsString)) {\n    return resolveAs ? [urlAsString] : urlAsString;\n  }\n\n  try {\n    base = new URL(urlAsString.startsWith('#') ? router.asPath : router.pathname, 'http://n');\n  } catch (_) {\n    // fallback to / for invalid asPath values e.g. //\n    base = new URL('/', 'http://n');\n  }\n\n  try {\n    const finalUrl = new URL(urlAsString, base);\n    finalUrl.pathname = (0, _normalizeTrailingSlash).normalizePathTrailingSlash(finalUrl.pathname);\n    let interpolatedAs = '';\n\n    if ((0, _isDynamic).isDynamicRoute(finalUrl.pathname) && finalUrl.searchParams && resolveAs) {\n      const query = (0, _querystring).searchParamsToUrlQuery(finalUrl.searchParams);\n      const {\n        result,\n        params\n      } = interpolateAs(finalUrl.pathname, finalUrl.pathname, query);\n\n      if (result) {\n        interpolatedAs = (0, _formatUrl).formatWithValidation({\n          pathname: result,\n          hash: finalUrl.hash,\n          query: omitParmsFromQuery(query, params)\n        });\n      }\n    } // if the origin didn't change, it means we received a relative href\n\n\n    const resolvedHref = finalUrl.origin === base.origin ? finalUrl.href.slice(finalUrl.origin.length) : finalUrl.href;\n    return resolveAs ? [resolvedHref, interpolatedAs || resolvedHref] : resolvedHref;\n  } catch (_1) {\n    return resolveAs ? [urlAsString] : urlAsString;\n  }\n}\n\nfunction stripOrigin(url) {\n  const origin = (0, _utils).getLocationOrigin();\n  return url.startsWith(origin) ? url.substring(origin.length) : url;\n}\n\nfunction prepareUrlAs(router, url, as) {\n  // If url and as provided as an object representation,\n  // we'll format them into the string version here.\n  let [resolvedHref, resolvedAs] = resolveHref(router, url, true);\n  const origin = (0, _utils).getLocationOrigin();\n  const hrefHadOrigin = resolvedHref.startsWith(origin);\n  const asHadOrigin = resolvedAs && resolvedAs.startsWith(origin);\n  resolvedHref = stripOrigin(resolvedHref);\n  resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs;\n  const preparedUrl = hrefHadOrigin ? resolvedHref : addBasePath(resolvedHref);\n  const preparedAs = as ? stripOrigin(resolveHref(router, as)) : resolvedAs || resolvedHref;\n  return {\n    url: preparedUrl,\n    as: asHadOrigin ? preparedAs : addBasePath(preparedAs)\n  };\n}\n\nfunction resolveDynamicRoute(pathname, pages) {\n  const cleanPathname = (0, _normalizeTrailingSlash).removePathTrailingSlash((0, _denormalizePagePath).denormalizePagePath(pathname));\n\n  if (cleanPathname === '/404' || cleanPathname === '/_error') {\n    return pathname;\n  } // handle resolving href for dynamic routes\n\n\n  if (!pages.includes(cleanPathname)) {\n    // eslint-disable-next-line array-callback-return\n    pages.some(page => {\n      if ((0, _isDynamic).isDynamicRoute(page) && (0, _routeRegex).getRouteRegex(page).re.test(cleanPathname)) {\n        pathname = page;\n        return true;\n      }\n    });\n  }\n\n  return (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n}\n\nconst manualScrollRestoration =  false && 0;\nconst SSG_DATA_NOT_FOUND = Symbol('SSG_DATA_NOT_FOUND');\n\nfunction fetchRetry(url, attempts, opts) {\n  return fetch(url, {\n    // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n    // Cookies may also be required for `getServerSideProps`.\n    //\n    // > `fetch` wonâ€™t send cookies, unless you set the credentials init\n    // > option.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n    //\n    // > For maximum browser compatibility when it comes to sending &\n    // > receiving cookies, always supply the `credentials: 'same-origin'`\n    // > option instead of relying on the default.\n    // https://github.com/github/fetch#caveats\n    credentials: 'same-origin'\n  }).then(res => {\n    if (!res.ok) {\n      if (attempts > 1 && res.status >= 500) {\n        return fetchRetry(url, attempts - 1, opts);\n      }\n\n      if (res.status === 404) {\n        return res.json().then(data => {\n          if (data.notFound) {\n            return {\n              notFound: SSG_DATA_NOT_FOUND\n            };\n          }\n\n          throw new Error(`Failed to load static props`);\n        });\n      }\n\n      throw new Error(`Failed to load static props`);\n    }\n\n    return opts.text ? res.text() : res.json();\n  });\n}\n\nfunction fetchNextData(dataHref, isServerRender, text, inflightCache, persistCache) {\n  const {\n    href: cacheKey\n  } = new URL(dataHref, window.location.href);\n\n  if (inflightCache[cacheKey] !== undefined) {\n    return inflightCache[cacheKey];\n  }\n\n  return inflightCache[cacheKey] = fetchRetry(dataHref, isServerRender ? 3 : 1, {\n    text\n  }).catch(err => {\n    // We should only trigger a server-side transition if this was caused\n    // on a client-side transition. Otherwise, we'd get into an infinite\n    // loop.\n    if (!isServerRender) {\n      (0, _routeLoader).markAssetError(err);\n    }\n\n    throw err;\n  }).then(data => {\n    if (!persistCache || true) {\n      delete inflightCache[cacheKey];\n    }\n\n    return data;\n  }).catch(err => {\n    delete inflightCache[cacheKey];\n    throw err;\n  });\n}\n\nclass Router {\n  constructor(pathname1, query1, as1, {\n    initialProps,\n    pageLoader,\n    App,\n    wrapApp,\n    Component,\n    err,\n    subscription,\n    isFallback,\n    locale,\n    locales,\n    defaultLocale,\n    domainLocales,\n    isPreview,\n    isRsc\n  }) {\n    // Static Data Cache\n    this.sdc = {}; // In-flight Server Data Requests, for deduping\n\n    this.sdr = {}; // In-flight middleware preflight requests\n\n    this.sde = {};\n    this._idx = 0;\n\n    this.onPopState = e => {\n      const state = e.state;\n\n      if (!state) {\n        // We get state as undefined for two reasons.\n        //  1. With older safari (< 8) and older chrome (< 34)\n        //  2. When the URL changed with #\n        //\n        // In the both cases, we don't need to proceed and change the route.\n        // (as it's already changed)\n        // But we can simply replace the state with the new changes.\n        // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n        // So, doing the following for (1) does no harm.\n        const {\n          pathname,\n          query\n        } = this;\n        this.changeState('replaceState', (0, _formatUrl).formatWithValidation({\n          pathname: addBasePath(pathname),\n          query\n        }), (0, _utils).getURL());\n        return;\n      }\n\n      if (!state.__N) {\n        return;\n      }\n\n      let forcedScroll;\n      const {\n        url,\n        as,\n        options,\n        idx\n      } = state;\n\n      if (false) {}\n\n      this._idx = idx;\n      const {\n        pathname\n      } = (0, _parseRelativeUrl).parseRelativeUrl(url); // Make sure we don't re-render on initial load,\n      // can be caused by navigating back from an external site\n\n      if (this.isSsr && as === addBasePath(this.asPath) && pathname === addBasePath(this.pathname)) {\n        return;\n      } // If the downstream application returns falsy, return.\n      // They will then be responsible for handling the event.\n\n\n      if (this._bps && !this._bps(state)) {\n        return;\n      }\n\n      this.change('replaceState', url, as, Object.assign({}, options, {\n        shallow: options.shallow && this._shallow,\n        locale: options.locale || this.defaultLocale\n      }), forcedScroll);\n    }; // represents the current component key\n\n\n    const route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname1); // set up the component cache (by route keys)\n\n    this.components = {}; // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n\n    if (pathname1 !== '/_error') {\n      this.components[route] = {\n        Component,\n        initial: true,\n        props: initialProps,\n        err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP,\n        __N_RSC: !!isRsc\n      };\n    }\n\n    this.components['/_app'] = {\n      Component: App,\n      styleSheets: []\n    }; // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n\n    this.events = Router.events;\n    this.pageLoader = pageLoader; // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n\n    const autoExportDynamic = (0, _isDynamic).isDynamicRoute(pathname1) && self.__NEXT_DATA__.autoExport;\n\n    this.basePath = basePath;\n    this.sub = subscription;\n    this.clc = null;\n    this._wrapApp = wrapApp; // make sure to ignore extra popState in safari on navigating\n    // back from external site\n\n    this.isSsr = true;\n    this.isLocaleDomain = false;\n    this.isReady = !!(self.__NEXT_DATA__.gssp || self.__NEXT_DATA__.gip || self.__NEXT_DATA__.appGip && !self.__NEXT_DATA__.gsp || !autoExportDynamic && !self.location.search && !false);\n\n    if (false) {}\n\n    this.state = {\n      route,\n      pathname: pathname1,\n      query: query1,\n      asPath: autoExportDynamic ? pathname1 : as1,\n      isPreview: !!isPreview,\n      locale:  false ? 0 : undefined,\n      isFallback\n    };\n\n    if (false) {}\n  }\n\n  reload() {\n    window.location.reload();\n  }\n  /**\n  * Go back in history\n  */\n\n\n  back() {\n    window.history.back();\n  }\n  /**\n  * Performs a `pushState` with arguments\n  * @param url of the route\n  * @param as masks `url` for the browser\n  * @param options object you can define `shallow` and other options\n  */\n\n\n  push(url, as, options = {}) {\n    if (false) {}\n\n    ({\n      url,\n      as\n    } = prepareUrlAs(this, url, as));\n    return this.change('pushState', url, as, options);\n  }\n  /**\n  * Performs a `replaceState` with arguments\n  * @param url of the route\n  * @param as masks `url` for the browser\n  * @param options object you can define `shallow` and other options\n  */\n\n\n  replace(url, as, options = {}) {\n    ({\n      url,\n      as\n    } = prepareUrlAs(this, url, as));\n    return this.change('replaceState', url, as, options);\n  }\n\n  async change(method, url, as, options, forcedScroll) {\n    if (!isLocalURL(url)) {\n      window.location.href = url;\n      return false;\n    }\n\n    const shouldResolveHref = options._h || options._shouldResolveHref || pathNoQueryHash(url) === pathNoQueryHash(as);\n\n    const nextState = _objectSpread({}, this.state); // for static pages with query params in the URL we delay\n    // marking the router ready until after the query is updated\n\n\n    if (options._h) {\n      this.isReady = true;\n    }\n\n    const prevLocale = nextState.locale;\n\n    if (false) { var ref; }\n\n    if (!options._h) {\n      this.isSsr = false;\n    } // marking route changes as a navigation start entry\n\n\n    if (_utils.ST) {\n      performance.mark('routeChange');\n    }\n\n    const {\n      shallow = false,\n      scroll = true\n    } = options;\n    const routeProps = {\n      shallow\n    };\n\n    if (this._inFlightRoute) {\n      this.abortComponentLoad(this._inFlightRoute, routeProps);\n    }\n\n    as = addBasePath(addLocale(hasBasePath(as) ? delBasePath(as) : as, options.locale, this.defaultLocale));\n    const cleanedAs = delLocale(hasBasePath(as) ? delBasePath(as) : as, nextState.locale);\n    this._inFlightRoute = as;\n    let localeChange = prevLocale !== nextState.locale; // If the url change is only related to a hash change\n    // We should not proceed. We should only change the state.\n    // WARNING: `_h` is an internal option for handing Next.js client-side\n    // hydration. Your app should _never_ use this property. It may change at\n    // any time without notice.\n\n    if (!options._h && this.onlyAHashChange(cleanedAs) && !localeChange) {\n      nextState.asPath = cleanedAs;\n      Router.events.emit('hashChangeStart', as, routeProps); // TODO: do we need the resolved href when only a hash change?\n\n      this.changeState(method, url, as, _objectSpread(_objectSpread({}, options), {}, {\n        scroll: false\n      }));\n\n      if (scroll) {\n        this.scrollToHash(cleanedAs);\n      }\n\n      this.set(nextState, this.components[nextState.route], null);\n      Router.events.emit('hashChangeComplete', as, routeProps);\n      return true;\n    }\n\n    let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url);\n    let {\n      pathname,\n      query\n    } = parsed; // The build manifest needs to be loaded before auto-static dynamic pages\n    // get their query parameters to allow ensuring they can be parsed properly\n    // when rewritten to\n\n    let pages, rewrites;\n\n    try {\n      [pages, {\n        __rewrites: rewrites\n      }] = await Promise.all([this.pageLoader.getPageList(), (0, _routeLoader).getClientBuildManifest(), this.pageLoader.getMiddlewareList()]);\n    } catch (err) {\n      // If we fail to resolve the page list or client-build manifest, we must\n      // do a server-side transition:\n      window.location.href = as;\n      return false;\n    } // If asked to change the current URL we should reload the current page\n    // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n    // We also need to set the method = replaceState always\n    // as this should not go into the history (That's how browsers work)\n    // We should compare the new asPath to the current asPath, not the url\n\n\n    if (!this.urlIsNew(cleanedAs) && !localeChange) {\n      method = 'replaceState';\n    } // we need to resolve the as value using rewrites for dynamic SSG\n    // pages to allow building the data URL correctly\n\n\n    let resolvedAs = as; // url and as should always be prefixed with basePath by this\n    // point by either next/link or router.push/replace so strip the\n    // basePath from the pathname to match the pages dir 1-to-1\n\n    pathname = pathname ? (0, _normalizeTrailingSlash).removePathTrailingSlash(delBasePath(pathname)) : pathname;\n\n    if (shouldResolveHref && pathname !== '/_error') {\n      options._shouldResolveHref = true;\n\n      if (false) {} else {\n        parsed.pathname = resolveDynamicRoute(pathname, pages);\n\n        if (parsed.pathname !== pathname) {\n          pathname = parsed.pathname;\n          parsed.pathname = addBasePath(pathname);\n          url = (0, _formatUrl).formatWithValidation(parsed);\n        }\n      }\n    }\n\n    if (!isLocalURL(as)) {\n      if (true) {\n        throw new Error(`Invalid href: \"${url}\" and as: \"${as}\", received relative href and external as` + `\\nSee more info: https://nextjs.org/docs/messages/invalid-relative-url-external-as`);\n      }\n\n      window.location.href = as;\n      return false;\n    }\n\n    resolvedAs = delLocale(delBasePath(resolvedAs), nextState.locale);\n    /**\n    * If the route update was triggered for client-side hydration and\n    * the rendered route is not dynamic do not check the preflight\n    * request as it is not necessary.\n    */\n\n    if ((!options.shallow || options._h === 1) && (options._h !== 1 || (0, _isDynamic).isDynamicRoute((0, _normalizeTrailingSlash).removePathTrailingSlash(pathname)))) {\n      const effect = await this._preflightRequest({\n        as,\n        cache: false,\n        pages,\n        pathname,\n        query,\n        locale: nextState.locale,\n        isPreview: nextState.isPreview\n      });\n\n      if (effect.type === 'rewrite') {\n        query = _objectSpread(_objectSpread({}, query), effect.parsedAs.query);\n        resolvedAs = effect.asPath;\n        pathname = effect.resolvedHref;\n        parsed.pathname = effect.resolvedHref;\n        url = (0, _formatUrl).formatWithValidation(parsed);\n      } else if (effect.type === 'redirect' && effect.newAs) {\n        return this.change(method, effect.newUrl, effect.newAs, options);\n      } else if (effect.type === 'redirect' && effect.destination) {\n        window.location.href = effect.destination;\n        return new Promise(() => {});\n      } else if (effect.type === 'refresh' && as !== window.location.pathname) {\n        window.location.href = as;\n        return new Promise(() => {});\n      }\n    }\n\n    const route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n\n    if ((0, _isDynamic).isDynamicRoute(route)) {\n      const parsedAs = (0, _parseRelativeUrl).parseRelativeUrl(resolvedAs);\n      const asPathname = parsedAs.pathname;\n      const routeRegex = (0, _routeRegex).getRouteRegex(route);\n      const routeMatch = (0, _routeMatcher).getRouteMatcher(routeRegex)(asPathname);\n      const shouldInterpolate = route === asPathname;\n      const interpolatedAs = shouldInterpolate ? interpolateAs(route, asPathname, query) : {};\n\n      if (!routeMatch || shouldInterpolate && !interpolatedAs.result) {\n        const missingParams = Object.keys(routeRegex.groups).filter(param => !query[param]);\n\n        if (missingParams.length > 0) {\n          if (true) {\n            console.warn(`${shouldInterpolate ? `Interpolating href` : `Mismatching \\`as\\` and \\`href\\``} failed to manually provide ` + `the params: ${missingParams.join(', ')} in the \\`href\\`'s \\`query\\``);\n          }\n\n          throw new Error((shouldInterpolate ? `The provided \\`href\\` (${url}) value is missing query values (${missingParams.join(', ')}) to be interpolated properly. ` : `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). `) + `Read more: https://nextjs.org/docs/messages/${shouldInterpolate ? 'href-interpolation-failed' : 'incompatible-href-as'}`);\n        }\n      } else if (shouldInterpolate) {\n        as = (0, _formatUrl).formatWithValidation(Object.assign({}, parsedAs, {\n          pathname: interpolatedAs.result,\n          query: omitParmsFromQuery(query, interpolatedAs.params)\n        }));\n      } else {\n        // Merge params into `query`, overwriting any specified in search\n        Object.assign(query, routeMatch);\n      }\n    }\n\n    Router.events.emit('routeChangeStart', as, routeProps);\n\n    try {\n      var ref1, ref2;\n      let routeInfo = await this.getRouteInfo(route, pathname, query, as, resolvedAs, routeProps, nextState.locale, nextState.isPreview);\n      let {\n        error,\n        props,\n        __N_SSG,\n        __N_SSP\n      } = routeInfo; // handle redirect on client-transition\n\n      if ((__N_SSG || __N_SSP) && props) {\n        if (props.pageProps && props.pageProps.__N_REDIRECT) {\n          const destination = props.pageProps.__N_REDIRECT; // check if destination is internal (resolves to a page) and attempt\n          // client-navigation if it is falling back to hard navigation if\n          // it's not\n\n          if (destination.startsWith('/') && props.pageProps.__N_REDIRECT_BASE_PATH !== false) {\n            const parsedHref = (0, _parseRelativeUrl).parseRelativeUrl(destination);\n            parsedHref.pathname = resolveDynamicRoute(parsedHref.pathname, pages);\n            const {\n              url: newUrl,\n              as: newAs\n            } = prepareUrlAs(this, destination, destination);\n            return this.change(method, newUrl, newAs, options);\n          }\n\n          window.location.href = destination;\n          return new Promise(() => {});\n        }\n\n        nextState.isPreview = !!props.__N_PREVIEW; // handle SSG data 404\n\n        if (props.notFound === SSG_DATA_NOT_FOUND) {\n          let notFoundRoute;\n\n          try {\n            await this.fetchComponent('/404');\n            notFoundRoute = '/404';\n          } catch (_) {\n            notFoundRoute = '/_error';\n          }\n\n          routeInfo = await this.getRouteInfo(notFoundRoute, notFoundRoute, query, as, resolvedAs, {\n            shallow: false\n          }, nextState.locale, nextState.isPreview);\n        }\n      }\n\n      Router.events.emit('beforeHistoryChange', as, routeProps);\n      this.changeState(method, url, as, options);\n\n      if (options._h && pathname === '/_error' && ((ref1 = self.__NEXT_DATA__.props) === null || ref1 === void 0 ? void 0 : (ref2 = ref1.pageProps) === null || ref2 === void 0 ? void 0 : ref2.statusCode) === 500 && (props === null || props === void 0 ? void 0 : props.pageProps)) {\n        // ensure statusCode is still correct for static 500 page\n        // when updating query information\n        props.pageProps.statusCode = 500;\n      } // shallow routing is only allowed for same page URL changes.\n\n\n      const isValidShallowRoute = options.shallow && nextState.route === route;\n\n      var _scroll;\n\n      const shouldScroll = (_scroll = options.scroll) !== null && _scroll !== void 0 ? _scroll : !isValidShallowRoute;\n      const resetScroll = shouldScroll ? {\n        x: 0,\n        y: 0\n      } : null;\n      await this.set(_objectSpread(_objectSpread({}, nextState), {}, {\n        route,\n        pathname,\n        query,\n        asPath: cleanedAs,\n        isFallback: false\n      }), routeInfo, forcedScroll !== null && forcedScroll !== void 0 ? forcedScroll : resetScroll).catch(e => {\n        if (e.cancelled) error = error || e;else throw e;\n      });\n\n      if (error) {\n        Router.events.emit('routeChangeError', error, cleanedAs, routeProps);\n        throw error;\n      }\n\n      if (false) {}\n\n      Router.events.emit('routeChangeComplete', as, routeProps);\n      return true;\n    } catch (err1) {\n      if ((0, _isError).default(err1) && err1.cancelled) {\n        return false;\n      }\n\n      throw err1;\n    }\n  }\n\n  changeState(method, url, as, options = {}) {\n    if (true) {\n      if (typeof window.history === 'undefined') {\n        console.error(`Warning: window.history is not available.`);\n        return;\n      }\n\n      if (typeof window.history[method] === 'undefined') {\n        console.error(`Warning: window.history.${method} is not available`);\n        return;\n      }\n    }\n\n    if (method !== 'pushState' || (0, _utils).getURL() !== as) {\n      this._shallow = options.shallow;\n      window.history[method]({\n        url,\n        as,\n        options,\n        __N: true,\n        idx: this._idx = method !== 'pushState' ? this._idx : this._idx + 1\n      }, // Most browsers currently ignores this parameter, although they may use it in the future.\n      // Passing the empty string here should be safe against future changes to the method.\n      // https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\n      '', as);\n    }\n  }\n\n  async handleRouteInfoError(err, pathname, query, as, routeProps, loadErrorFail) {\n    if (err.cancelled) {\n      // bubble up cancellation errors\n      throw err;\n    }\n\n    if ((0, _routeLoader).isAssetError(err) || loadErrorFail) {\n      Router.events.emit('routeChangeError', err, as, routeProps); // If we can't load the page it could be one of following reasons\n      //  1. Page doesn't exists\n      //  2. Page does exist in a different zone\n      //  3. Internal error while loading the page\n      // So, doing a hard reload is the proper way to deal with this.\n\n      window.location.href = as; // Changing the URL doesn't block executing the current code path.\n      // So let's throw a cancellation error stop the routing logic.\n\n      throw buildCancellationError();\n    }\n\n    try {\n      let Component;\n      let styleSheets;\n      let props;\n\n      if (typeof Component === 'undefined' || typeof styleSheets === 'undefined') {\n        ({\n          page: Component,\n          styleSheets\n        } = await this.fetchComponent('/_error'));\n      }\n\n      const routeInfo = {\n        props,\n        Component,\n        styleSheets,\n        err,\n        error: err\n      };\n\n      if (!routeInfo.props) {\n        try {\n          routeInfo.props = await this.getInitialProps(Component, {\n            err,\n            pathname,\n            query\n          });\n        } catch (gipErr) {\n          console.error('Error in error page `getInitialProps`: ', gipErr);\n          routeInfo.props = {};\n        }\n      }\n\n      return routeInfo;\n    } catch (routeInfoErr) {\n      return this.handleRouteInfoError((0, _isError).default(routeInfoErr) ? routeInfoErr : new Error(routeInfoErr + ''), pathname, query, as, routeProps, true);\n    }\n  }\n\n  async getRouteInfo(route, pathname, query, as, resolvedAs, routeProps, locale, isPreview) {\n    try {\n      const existingRouteInfo = this.components[route];\n\n      if (routeProps.shallow && existingRouteInfo && this.route === route) {\n        return existingRouteInfo;\n      }\n\n      let cachedRouteInfo = undefined; // can only use non-initial route info\n      // cannot reuse route info in development since it can change after HMR\n\n      if (false) {}\n\n      const routeInfo = cachedRouteInfo || (await this.fetchComponent(route).then(res => ({\n        Component: res.page,\n        styleSheets: res.styleSheets,\n        __N_SSG: res.mod.__N_SSG,\n        __N_SSP: res.mod.__N_SSP,\n        __N_RSC: !!res.mod.__next_rsc__\n      })));\n      const {\n        Component,\n        __N_SSG,\n        __N_SSP,\n        __N_RSC\n      } = routeInfo;\n\n      if (true) {\n        const {\n          isValidElementType\n        } = __webpack_require__(/*! next/dist/compiled/react-is */ \"next/dist/compiled/react-is\");\n\n        if (!isValidElementType(Component)) {\n          throw new Error(`The default export is not a React Component in page: \"${pathname}\"`);\n        }\n      }\n\n      let dataHref;\n\n      if (__N_SSG || __N_SSP || __N_RSC) {\n        dataHref = this.pageLoader.getDataHref({\n          href: (0, _formatUrl).formatWithValidation({\n            pathname,\n            query\n          }),\n          asPath: resolvedAs,\n          ssg: __N_SSG,\n          rsc: __N_RSC,\n          locale\n        });\n      }\n\n      const props = await this._getData(() => __N_SSG || __N_SSP ? fetchNextData(dataHref, this.isSsr, false, __N_SSG ? this.sdc : this.sdr, !!__N_SSG && !isPreview) : this.getInitialProps(Component, // we provide AppTree later so this needs to be `any`\n      {\n        pathname,\n        query,\n        asPath: as,\n        locale,\n        locales: this.locales,\n        defaultLocale: this.defaultLocale\n      }));\n\n      if (__N_RSC) {\n        const {\n          fresh,\n          data\n        } = await this._getData(() => this._getFlightData(dataHref));\n        props.pageProps = Object.assign(props.pageProps, {\n          __flight_serialized__: data,\n          __flight_fresh__: fresh\n        });\n      }\n\n      routeInfo.props = props;\n      this.components[route] = routeInfo;\n      return routeInfo;\n    } catch (err) {\n      return this.handleRouteInfoError((0, _isError).getProperError(err), pathname, query, as, routeProps);\n    }\n  }\n\n  set(state, data, resetScroll) {\n    this.state = state;\n    return this.sub(data, this.components['/_app'].Component, resetScroll);\n  }\n  /**\n  * Callback to execute before replacing router state\n  * @param cb callback to be executed\n  */\n\n\n  beforePopState(cb) {\n    this._bps = cb;\n  }\n\n  onlyAHashChange(as) {\n    if (!this.asPath) return false;\n    const [oldUrlNoHash, oldHash] = this.asPath.split('#');\n    const [newUrlNoHash, newHash] = as.split('#'); // Makes sure we scroll to the provided hash if the url/hash are the same\n\n    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n      return true;\n    } // If the urls are change, there's more than a hash change\n\n\n    if (oldUrlNoHash !== newUrlNoHash) {\n      return false;\n    } // If the hash has changed, then it's a hash only change.\n    // This check is necessary to handle both the enter and\n    // leave hash === '' cases. The identity case falls through\n    // and is treated as a next reload.\n\n\n    return oldHash !== newHash;\n  }\n\n  scrollToHash(as) {\n    const [, hash = ''] = as.split('#'); // Scroll to top if the hash is just `#` with no value or `#top`\n    // To mirror browsers\n\n    if (hash === '' || hash === 'top') {\n      window.scrollTo(0, 0);\n      return;\n    } // First we check if the element by id is found\n\n\n    const idEl = document.getElementById(hash);\n\n    if (idEl) {\n      idEl.scrollIntoView();\n      return;\n    } // If there's no element with the id, we check the `name` property\n    // To mirror browsers\n\n\n    const nameEl = document.getElementsByName(hash)[0];\n\n    if (nameEl) {\n      nameEl.scrollIntoView();\n    }\n  }\n\n  urlIsNew(asPath) {\n    return this.asPath !== asPath;\n  }\n  /**\n  * Prefetch page code, you may wait for the data during page rendering.\n  * This feature only works in production!\n  * @param url the href of prefetched page\n  * @param asPath the as path of the prefetched page\n  */\n\n\n  async prefetch(url, asPath = url, options = {}) {\n    let parsed = (0, _parseRelativeUrl).parseRelativeUrl(url);\n    let {\n      pathname,\n      query\n    } = parsed;\n\n    if (false) {}\n\n    const pages = await this.pageLoader.getPageList();\n    let resolvedAs = asPath;\n\n    if (false) {} else {\n      parsed.pathname = resolveDynamicRoute(parsed.pathname, pages);\n\n      if (parsed.pathname !== pathname) {\n        pathname = parsed.pathname;\n        parsed.pathname = pathname;\n        url = (0, _formatUrl).formatWithValidation(parsed);\n      }\n    } // Prefetch is not supported in development mode because it would trigger on-demand-entries\n\n\n    if (true) {\n      return;\n    }\n\n    const effects = await this._preflightRequest({\n      as: addBasePath(asPath),\n      cache: true,\n      pages,\n      pathname,\n      query,\n      locale: this.locale,\n      isPreview: this.isPreview\n    });\n\n    if (effects.type === 'rewrite') {\n      parsed.pathname = effects.resolvedHref;\n      pathname = effects.resolvedHref;\n      query = _objectSpread(_objectSpread({}, query), effects.parsedAs.query);\n      resolvedAs = effects.asPath;\n      url = (0, _formatUrl).formatWithValidation(parsed);\n    }\n\n    const route = (0, _normalizeTrailingSlash).removePathTrailingSlash(pathname);\n    await Promise.all([this.pageLoader._isSsg(route).then(isSsg => {\n      return isSsg ? fetchNextData(this.pageLoader.getDataHref({\n        href: url,\n        asPath: resolvedAs,\n        ssg: true,\n        locale: typeof options.locale !== 'undefined' ? options.locale : this.locale\n      }), false, false, this.sdc, true) : false;\n    }), this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route)]);\n  }\n\n  async fetchComponent(route) {\n    let cancelled = false;\n\n    const cancel = this.clc = () => {\n      cancelled = true;\n    };\n\n    const handleCancelled = () => {\n      if (cancelled) {\n        const error = new Error(`Abort fetching component for route: \"${route}\"`);\n        error.cancelled = true;\n        throw error;\n      }\n\n      if (cancel === this.clc) {\n        this.clc = null;\n      }\n    };\n\n    try {\n      const componentResult = await this.pageLoader.loadPage(route);\n      handleCancelled();\n      return componentResult;\n    } catch (err) {\n      handleCancelled();\n      throw err;\n    }\n  }\n\n  _getData(fn) {\n    let cancelled = false;\n\n    const cancel = () => {\n      cancelled = true;\n    };\n\n    this.clc = cancel;\n    return fn().then(data => {\n      if (cancel === this.clc) {\n        this.clc = null;\n      }\n\n      if (cancelled) {\n        const err = new Error('Loading initial props cancelled');\n        err.cancelled = true;\n        throw err;\n      }\n\n      return data;\n    });\n  }\n\n  _getFlightData(dataHref) {\n    // Do not cache RSC flight response since it's not a static resource\n    return fetchNextData(dataHref, true, true, this.sdc, false).then(serialized => {\n      return {\n        fresh: true,\n        data: serialized\n      };\n    });\n  }\n\n  async _preflightRequest(options) {\n    const asPathname = pathNoQueryHash(options.as);\n    const cleanedAs = delLocale(hasBasePath(asPathname) ? delBasePath(asPathname) : asPathname, options.locale);\n    const middlewareList = await this.pageLoader.getMiddlewareList();\n    const middleware = middlewareList.map(([page, ssr]) => ({\n      page,\n      ssr\n    }));\n    const routingItems = (0, _routingItems).getRoutingItems(options.pages, middleware);\n    let requiresPreflight = false;\n\n    for (const item of routingItems) {\n      if (item.match(cleanedAs)) {\n        if (item.isMiddleware) {\n          requiresPreflight = true;\n        }\n\n        break;\n      }\n    }\n\n    if (!requiresPreflight) {\n      return {\n        type: 'next'\n      };\n    }\n\n    let preflight;\n\n    try {\n      preflight = await this._getPreflightData({\n        preflightHref: options.as,\n        shouldCache: options.cache,\n        isPreview: options.isPreview\n      });\n    } catch (err) {\n      // If preflight request fails, we need to do a hard-navigation.\n      return {\n        type: 'redirect',\n        destination: options.as\n      };\n    }\n\n    if (preflight.rewrite) {\n      // for external rewrites we need to do a hard navigation\n      // to the resource\n      if (!preflight.rewrite.startsWith('/')) {\n        return {\n          type: 'redirect',\n          destination: options.as\n        };\n      }\n\n      const parsed = (0, _parseRelativeUrl).parseRelativeUrl((0, _normalizeLocalePath).normalizeLocalePath(hasBasePath(preflight.rewrite) ? delBasePath(preflight.rewrite) : preflight.rewrite, this.locales).pathname);\n      const fsPathname = (0, _normalizeTrailingSlash).removePathTrailingSlash(parsed.pathname);\n      let matchedPage;\n      let resolvedHref;\n\n      if (options.pages.includes(fsPathname)) {\n        matchedPage = true;\n        resolvedHref = fsPathname;\n      } else {\n        resolvedHref = resolveDynamicRoute(fsPathname, options.pages);\n\n        if (resolvedHref !== parsed.pathname && options.pages.includes(resolvedHref)) {\n          matchedPage = true;\n        }\n      }\n\n      return {\n        type: 'rewrite',\n        asPath: parsed.pathname,\n        parsedAs: parsed,\n        matchedPage,\n        resolvedHref\n      };\n    }\n\n    if (preflight.redirect) {\n      if (preflight.redirect.startsWith('/')) {\n        const cleanRedirect = (0, _normalizeTrailingSlash).removePathTrailingSlash((0, _normalizeLocalePath).normalizeLocalePath(hasBasePath(preflight.redirect) ? delBasePath(preflight.redirect) : preflight.redirect, this.locales).pathname);\n        const {\n          url: newUrl,\n          as: newAs\n        } = prepareUrlAs(this, cleanRedirect, cleanRedirect);\n        return {\n          type: 'redirect',\n          newUrl,\n          newAs\n        };\n      }\n\n      return {\n        type: 'redirect',\n        destination: preflight.redirect\n      };\n    } // For SSR requests, they will be handled like normal pages.\n\n\n    if (preflight.refresh && !preflight.ssr) {\n      return {\n        type: 'refresh'\n      };\n    }\n\n    return {\n      type: 'next'\n    };\n  }\n\n  _getPreflightData(params) {\n    const {\n      preflightHref,\n      shouldCache = false,\n      isPreview\n    } = params;\n    const {\n      href: cacheKey\n    } = new URL(preflightHref, window.location.href);\n\n    if (false) {}\n\n    return fetch(preflightHref, {\n      method: 'HEAD',\n      credentials: 'same-origin',\n      headers: {\n        'x-middleware-preflight': '1'\n      }\n    }).then(res => {\n      if (!res.ok) {\n        throw new Error(`Failed to preflight request`);\n      }\n\n      return {\n        cache: res.headers.get('x-middleware-cache'),\n        redirect: res.headers.get('Location'),\n        refresh: res.headers.has('x-middleware-refresh'),\n        rewrite: res.headers.get('x-middleware-rewrite'),\n        ssr: !!res.headers.get('x-middleware-ssr')\n      };\n    }).then(data => {\n      if (shouldCache && data.cache !== 'no-cache') {\n        this.sde[cacheKey] = data;\n      }\n\n      return data;\n    }).catch(err => {\n      delete this.sde[cacheKey];\n      throw err;\n    });\n  }\n\n  getInitialProps(Component, ctx) {\n    const {\n      Component: App\n    } = this.components['/_app'];\n\n    const AppTree = this._wrapApp(App);\n\n    ctx.AppTree = AppTree;\n    return (0, _utils).loadGetInitialProps(App, {\n      AppTree,\n      Component,\n      router: this,\n      ctx\n    });\n  }\n\n  abortComponentLoad(as, routeProps) {\n    if (this.clc) {\n      Router.events.emit('routeChangeError', buildCancellationError(), as, routeProps);\n      this.clc();\n      this.clc = null;\n    }\n  }\n\n  get route() {\n    return this.state.route;\n  }\n\n  get pathname() {\n    return this.state.pathname;\n  }\n\n  get query() {\n    return this.state.query;\n  }\n\n  get asPath() {\n    return this.state.asPath;\n  }\n\n  get locale() {\n    return this.state.locale;\n  }\n\n  get isFallback() {\n    return this.state.isFallback;\n  }\n\n  get isPreview() {\n    return this.state.isPreview;\n  }\n\n}\n\nexports[\"default\"] = Router;\nRouter.events = (0, _mitt).default();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L3NoYXJlZC9saWIvcm91dGVyL3JvdXRlci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7Ozs7Ozs7QUFDYkEsOENBQTZDO0FBQ3pDRyxFQUFBQSxLQUFLLEVBQUU7QUFEa0MsQ0FBN0M7QUFHQUQsdUJBQUEsR0FBMEJFLGVBQTFCO0FBQ0FGLGlCQUFBLEdBQW9CRyxTQUFwQjtBQUNBSCxpQkFBQSxHQUFvQkksU0FBcEI7QUFDQUosbUJBQUEsR0FBc0JLLFdBQXRCO0FBQ0FMLG1CQUFBLEdBQXNCTSxXQUF0QjtBQUNBTixtQkFBQSxHQUFzQk8sV0FBdEI7QUFDQVAsa0JBQUEsR0FBcUJRLFVBQXJCO0FBQ0FSLHFCQUFBLEdBQXdCUyxhQUF4QjtBQUNBVCxtQkFBQSxHQUFzQlUsV0FBdEI7QUFDQVYsa0JBQUEsR0FBa0IsS0FBSyxDQUF2Qjs7QUFDQSxJQUFJWSx1QkFBdUIsR0FBR0MsbUJBQU8sQ0FBQyw2R0FBRCxDQUFyQzs7QUFDQSxJQUFJQyxZQUFZLEdBQUdELG1CQUFPLENBQUMscUZBQUQsQ0FBMUI7O0FBQ0EsSUFBSUUsUUFBUSxHQUFHQyx1QkFBdUIsQ0FBQ0gsbUJBQU8sQ0FBQyx1RUFBRCxDQUFSLENBQXRDOztBQUNBLElBQUlJLG9CQUFvQixHQUFHSixtQkFBTyxDQUFDLG9GQUFELENBQWxDOztBQUNBLElBQUlLLG9CQUFvQixHQUFHTCxtQkFBTyxDQUFDLG9FQUFELENBQWxDOztBQUNBLElBQUlNLEtBQUssR0FBR0Msc0JBQXNCLENBQUNQLG1CQUFPLENBQUMsd0JBQUQsQ0FBUixDQUFsQzs7QUFDQSxJQUFJUSxNQUFNLEdBQUdSLG1CQUFPLENBQUMsMEJBQUQsQ0FBcEI7O0FBQ0EsSUFBSVMsVUFBVSxHQUFHVCxtQkFBTyxDQUFDLDhDQUFELENBQXhCOztBQUNBLElBQUlVLGlCQUFpQixHQUFHVixtQkFBTyxDQUFDLDhEQUFELENBQS9COztBQUNBLElBQUlXLFlBQVksR0FBR1gsbUJBQU8sQ0FBQyxnREFB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Q0FBYzJDLElBQWQsQ0FBbUIsa0JBQW5CLEVBQXVDek8sc0JBQXNCLEVBQTdELEVBQWlFNEYsRUFBakUsRUFBcUV1SSxVQUFyRTtBQUNBLFdBQUtoQyxHQUFMO0FBQ0EsV0FBS0EsR0FBTCxHQUFXLElBQVg7QUFDSDtBQUNKOztBQUNRLE1BQUw5SixLQUFLLEdBQUc7QUFDUixXQUFPLEtBQUs0SCxLQUFMLENBQVc1SCxLQUFsQjtBQUNIOztBQUNXLE1BQVI3QixRQUFRLEdBQUc7QUFDWCxXQUFPLEtBQUt5SixLQUFMLENBQVd6SixRQUFsQjtBQUNIOztBQUNRLE1BQUwrQixLQUFLLEdBQUc7QUFDUixXQUFPLEtBQUswSCxLQUFMLENBQVcxSCxLQUFsQjtBQUNIOztBQUNTLE1BQU4wQyxNQUFNLEdBQUc7QUFDVCxXQUFPLEtBQUtnRixLQUFMLENBQVdoRixNQUFsQjtBQUNIOztBQUNTLE1BQU5wRSxNQUFNLEdBQUc7QUFDVCxXQUFPLEtBQUtvSixLQUFMLENBQVdwSixNQUFsQjtBQUNIOztBQUNhLE1BQVYySSxVQUFVLEdBQUc7QUFDYixXQUFPLEtBQUtTLEtBQUwsQ0FBV1QsVUFBbEI7QUFDSDs7QUFDWSxNQUFUQyxTQUFTLEdBQUc7QUFDWixXQUFPLEtBQUtRLEtBQUwsQ0FBV1IsU0FBbEI7QUFDSDs7QUF0OUJROztBQXc5QmJ4TSxrQkFBQSxHQUFrQjRMLE1BQWxCO0FBQ0FBLE1BQU0sQ0FBQ2lELE1BQVAsR0FBZ0IsQ0FBQyxHQUFHMU4sS0FBSixFQUFXUixPQUFYLEVBQWhCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVyY3VyeS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3Qvc2hhcmVkL2xpYi9yb3V0ZXIvcm91dGVyLmpzPzg2ODQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5leHBvcnRzLmdldERvbWFpbkxvY2FsZSA9IGdldERvbWFpbkxvY2FsZTtcbmV4cG9ydHMuYWRkTG9jYWxlID0gYWRkTG9jYWxlO1xuZXhwb3J0cy5kZWxMb2NhbGUgPSBkZWxMb2NhbGU7XG5leHBvcnRzLmhhc0Jhc2VQYXRoID0gaGFzQmFzZVBhdGg7XG5leHBvcnRzLmFkZEJhc2VQYXRoID0gYWRkQmFzZVBhdGg7XG5leHBvcnRzLmRlbEJhc2VQYXRoID0gZGVsQmFzZVBhdGg7XG5leHBvcnRzLmlzTG9jYWxVUkwgPSBpc0xvY2FsVVJMO1xuZXhwb3J0cy5pbnRlcnBvbGF0ZUFzID0gaW50ZXJwb2xhdGVBcztcbmV4cG9ydHMucmVzb2x2ZUhyZWYgPSByZXNvbHZlSHJlZjtcbmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDtcbnZhciBfbm9ybWFsaXplVHJhaWxpbmdTbGFzaCA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jbGllbnQvbm9ybWFsaXplLXRyYWlsaW5nLXNsYXNoXCIpO1xudmFyIF9yb3V0ZUxvYWRlciA9IHJlcXVpcmUoXCIuLi8uLi8uLi9jbGllbnQvcm91dGUtbG9hZGVyXCIpO1xudmFyIF9pc0Vycm9yID0gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcIi4uLy4uLy4uL2xpYi9pcy1lcnJvclwiKSk7XG52YXIgX2Rlbm9ybWFsaXplUGFnZVBhdGggPSByZXF1aXJlKFwiLi4vLi4vLi4vc2VydmVyL2Rlbm9ybWFsaXplLXBhZ2UtcGF0aFwiKTtcbnZhciBfbm9ybWFsaXplTG9jYWxlUGF0aCA9IHJlcXVpcmUoXCIuLi9pMThuL25vcm1hbGl6ZS1sb2NhbGUtcGF0aFwiKTtcbnZhciBfbWl0dCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4uL21pdHRcIikpO1xudmFyIF91dGlscyA9IHJlcXVpcmUoXCIuLi91dGlsc1wiKTtcbnZhciBfaXNEeW5hbWljID0gcmVxdWlyZShcIi4vdXRpbHMvaXMtZHluYW1pY1wiKTtcbnZhciBfcGFyc2VSZWxhdGl2ZVVybCA9IHJlcXVpcmUoXCIuL3V0aWxzL3BhcnNlLXJlbGF0aXZlLXVybFwiKTtcbnZhciBfcXVlcnlzdHJpbmcgPSByZXF1aXJlKFwiLi91dGlscy9xdWVyeXN0cmluZ1wiKTtcbnZhciBfcmVzb2x2ZVJld3JpdGVzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi91dGlscy9yZXNvbHZlLXJld3JpdGVzXCIpKTtcbnZhciBfcm91dGVNYXRjaGVyID0gcmVxdWlyZShcIi4vdXRpbHMvcm91dGUtbWF0Y2hlclwiKTtcbnZhciBfcm91dGVSZWdleCA9IHJlcXVpcmUoXCIuL3V0aWxzL3JvdXRlLXJlZ2V4XCIpO1xudmFyIF9mb3JtYXRVcmwgPSByZXF1aXJlKFwiLi91dGlscy9mb3JtYXQtdXJsXCIpO1xudmFyIF9yb3V0aW5nSXRlbXMgPSByZXF1aXJlKFwiLi91dGlscy9yb3V0aW5nLWl0ZW1zXCIpO1xuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHtcbiAgICByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDoge1xuICAgICAgICBkZWZhdWx0OiBvYmpcbiAgICB9O1xufVxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQob2JqKSB7XG4gICAgaWYgKG9iaiAmJiBvYmouX19lc01vZHVsZSkge1xuICAgICAgICByZXR1cm4gb2JqO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHZhciBuZXdPYmogPSB7fTtcbiAgICAgICAgaWYgKG9iaiAhPSBudWxsKSB7XG4gICAgICAgICAgICBmb3IodmFyIGtleSBpbiBvYmope1xuICAgICAgICAgICAgICAgIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZXNjID0gT2JqZWN0LmRlZmluZVByb3BlcnR5ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IgPyBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iaiwga2V5KSA6IHt9O1xuICAgICAgICAgICAgICAgICAgICBpZiAoZGVzYy5nZXQgfHwgZGVzYy5zZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShuZXdPYmosIGtleSwgZGVzYyk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdPYmpba2V5XSA9IG9ialtrZXldO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIG5ld09iai5kZWZhdWx0ID0gb2JqO1xuICAgICAgICByZXR1cm4gbmV3T2JqO1xuICAgIH1cbn1cbmxldCBkZXRlY3REb21haW5Mb2NhbGU7XG5pZiAocHJvY2Vzcy5lbnYuX19ORVhUX0kxOE5fU1VQUE9SVCkge1xuICAgIGRldGVjdERvbWFpbkxvY2FsZSA9IHJlcXVpcmUoJy4uL2kxOG4vZGV0ZWN0LWRvbWFpbi1sb2NhbGUnKS5kZXRlY3REb21haW5Mb2NhbGU7XG59XG5jb25zdCBiYXNlUGF0aCA9IHByb2Nlc3MuZW52Ll9fTkVYVF9ST1VURVJfQkFTRVBBVEggfHwgJyc7XG5mdW5jdGlvbiBidWlsZENhbmNlbGxhdGlvbkVycm9yKCkge1xuICAgIHJldHVybiBPYmplY3QuYXNzaWduKG5ldyBFcnJvcignUm91dGUgQ2FuY2VsbGVkJyksIHtcbiAgICAgICAgY2FuY2VsbGVkOiB0cnVlXG4gICAgfSk7XG59XG5mdW5jdGlvbiBhZGRQYXRoUHJlZml4KHBhdGgsIHByZWZpeCkge1xuICAgIGlmICghcGF0aC5zdGFydHNXaXRoKCcvJykgfHwgIXByZWZpeCkge1xuICAgICAgICByZXR1cm4gcGF0aDtcbiAgICB9XG4gICAgY29uc3QgcGF0aG5hbWUgPSBwYXRoTm9RdWVyeUhhc2gocGF0aCk7XG4gICAgcmV0dXJuICgwLCBfbm9ybWFsaXplVHJhaWxpbmdTbGFzaCkubm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2goYCR7cHJlZml4fSR7cGF0aG5hbWV9YCkgKyBwYXRoLnNsaWNlKHBhdGhuYW1lLmxlbmd0aCk7XG59XG5mdW5jdGlvbiBnZXREb21haW5Mb2NhbGUocGF0aCwgbG9jYWxlLCBsb2NhbGVzLCBkb21haW5Mb2NhbGVzKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9JMThOX1NVUFBPUlQpIHtcbiAgICAgICAgbG9jYWxlID0gbG9jYWxlIHx8ICgwLCBfbm9ybWFsaXplTG9jYWxlUGF0aCkubm9ybWFsaXplTG9jYWxlUGF0aChwYXRoLCBsb2NhbGVzKS5kZXRlY3RlZExvY2FsZTtcbiAgICAgICAgY29uc3QgZGV0ZWN0ZWREb21haW4gPSBkZXRlY3REb21haW5Mb2NhbGUoZG9tYWluTG9jYWxlcywgdW5kZWZpbmVkLCBsb2NhbGUpO1xuICAgICAgICBpZiAoZGV0ZWN0ZWREb21haW4pIHtcbiAgICAgICAgICAgIHJldHVybiBgaHR0cCR7ZGV0ZWN0ZWREb21haW4uaHR0cCA/ICcnIDogJ3MnfTovLyR7ZGV0ZWN0ZWREb21haW4uZG9tYWlufSR7YmFzZVBhdGggfHwgJyd9JHtsb2NhbGUgPT09IGRldGVjdGVkRG9tYWluLmRlZmF1bHRMb2NhbGUgPyAnJyA6IGAvJHtsb2NhbGV9YH0ke3BhdGh9YDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGFkZExvY2FsZShwYXRoLCBsb2NhbGUsIGRlZmF1bHRMb2NhbGUpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0kxOE5fU1VQUE9SVCkge1xuICAgICAgICBjb25zdCBwYXRobmFtZSA9IHBhdGhOb1F1ZXJ5SGFzaChwYXRoKTtcbiAgICAgICAgY29uc3QgcGF0aExvd2VyID0gcGF0aG5hbWUudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgY29uc3QgbG9jYWxlTG93ZXIgPSBsb2NhbGUgJiYgbG9jYWxlLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIHJldHVybiBsb2NhbGUgJiYgbG9jYWxlICE9PSBkZWZhdWx0TG9jYWxlICYmICFwYXRoTG93ZXIuc3RhcnRzV2l0aCgnLycgKyBsb2NhbGVMb3dlciArICcvJykgJiYgcGF0aExvd2VyICE9PSAnLycgKyBsb2NhbGVMb3dlciA/IGFkZFBhdGhQcmVmaXgocGF0aCwgJy8nICsgbG9jYWxlKSA6IHBhdGg7XG4gICAgfVxuICAgIHJldHVybiBwYXRoO1xufVxuZnVuY3Rpb24gZGVsTG9jYWxlKHBhdGgsIGxvY2FsZSkge1xuICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgIGNvbnN0IHBhdGhuYW1lID0gcGF0aE5vUXVlcnlIYXNoKHBhdGgpO1xuICAgICAgICBjb25zdCBwYXRoTG93ZXIgPSBwYXRobmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBjb25zdCBsb2NhbGVMb3dlciA9IGxvY2FsZSAmJiBsb2NhbGUudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgcmV0dXJuIGxvY2FsZSAmJiAocGF0aExvd2VyLnN0YXJ0c1dpdGgoJy8nICsgbG9jYWxlTG93ZXIgKyAnLycpIHx8IHBhdGhMb3dlciA9PT0gJy8nICsgbG9jYWxlTG93ZXIpID8gKHBhdGhuYW1lLmxlbmd0aCA9PT0gbG9jYWxlLmxlbmd0aCArIDEgPyAnLycgOiAnJykgKyBwYXRoLnNsaWNlKGxvY2FsZS5sZW5ndGggKyAxKSA6IHBhdGg7XG4gICAgfVxuICAgIHJldHVybiBwYXRoO1xufVxuZnVuY3Rpb24gcGF0aE5vUXVlcnlIYXNoKHBhdGgpIHtcbiAgICBjb25zdCBxdWVyeUluZGV4ID0gcGF0aC5pbmRleE9mKCc/Jyk7XG4gICAgY29uc3QgaGFzaEluZGV4ID0gcGF0aC5pbmRleE9mKCcjJyk7XG4gICAgaWYgKHF1ZXJ5SW5kZXggPiAtMSB8fCBoYXNoSW5kZXggPiAtMSkge1xuICAgICAgICBwYXRoID0gcGF0aC5zdWJzdHJpbmcoMCwgcXVlcnlJbmRleCA+IC0xID8gcXVlcnlJbmRleCA6IGhhc2hJbmRleCk7XG4gICAgfVxuICAgIHJldHVybiBwYXRoO1xufVxuZnVuY3Rpb24gaGFzQmFzZVBhdGgocGF0aCkge1xuICAgIHBhdGggPSBwYXRoTm9RdWVyeUhhc2gocGF0aCk7XG4gICAgcmV0dXJuIHBhdGggPT09IGJhc2VQYXRoIHx8IHBhdGguc3RhcnRzV2l0aChiYXNlUGF0aCArICcvJyk7XG59XG5mdW5jdGlvbiBhZGRCYXNlUGF0aChwYXRoKSB7XG4gICAgLy8gd2Ugb25seSBhZGQgdGhlIGJhc2VwYXRoIG9uIHJlbGF0aXZlIHVybHNcbiAgICByZXR1cm4gYWRkUGF0aFByZWZpeChwYXRoLCBiYXNlUGF0aCk7XG59XG5mdW5jdGlvbiBkZWxCYXNlUGF0aChwYXRoKSB7XG4gICAgcGF0aCA9IHBhdGguc2xpY2UoYmFzZVBhdGgubGVuZ3RoKTtcbiAgICBpZiAoIXBhdGguc3RhcnRzV2l0aCgnLycpKSBwYXRoID0gYC8ke3BhdGh9YDtcbiAgICByZXR1cm4gcGF0aDtcbn1cbmZ1bmN0aW9uIGlzTG9jYWxVUkwodXJsKSB7XG4gICAgLy8gcHJldmVudCBhIGh5ZHJhdGlvbiBtaXNtYXRjaCBvbiBocmVmIGZvciB1cmwgd2l0aCBhbmNob3IgcmVmc1xuICAgIGlmICh1cmwuc3RhcnRzV2l0aCgnLycpIHx8IHVybC5zdGFydHNXaXRoKCcjJykgfHwgdXJsLnN0YXJ0c1dpdGgoJz8nKSkgcmV0dXJuIHRydWU7XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gYWJzb2x1dGUgdXJscyBjYW4gYmUgbG9jYWwgaWYgdGhleSBhcmUgb24gdGhlIHNhbWUgb3JpZ2luXG4gICAgICAgIGNvbnN0IGxvY2F0aW9uT3JpZ2luID0gKDAsIF91dGlscykuZ2V0TG9jYXRpb25PcmlnaW4oKTtcbiAgICAgICAgY29uc3QgcmVzb2x2ZWQgPSBuZXcgVVJMKHVybCwgbG9jYXRpb25PcmlnaW4pO1xuICAgICAgICByZXR1cm4gcmVzb2x2ZWQub3JpZ2luID09PSBsb2NhdGlvbk9yaWdpbiAmJiBoYXNCYXNlUGF0aChyZXNvbHZlZC5wYXRobmFtZSk7XG4gICAgfSBjYXRjaCAoXykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuZnVuY3Rpb24gaW50ZXJwb2xhdGVBcyhyb3V0ZSwgYXNQYXRobmFtZSwgcXVlcnkpIHtcbiAgICBsZXQgaW50ZXJwb2xhdGVkUm91dGUgPSAnJztcbiAgICBjb25zdCBkeW5hbWljUmVnZXggPSAoMCwgX3JvdXRlUmVnZXgpLmdldFJvdXRlUmVnZXgocm91dGUpO1xuICAgIGNvbnN0IGR5bmFtaWNHcm91cHMgPSBkeW5hbWljUmVnZXguZ3JvdXBzO1xuICAgIGNvbnN0IGR5bmFtaWNNYXRjaGVzID0gLy8gVHJ5IHRvIG1hdGNoIHRoZSBkeW5hbWljIHJvdXRlIGFnYWluc3QgdGhlIGFzUGF0aFxuICAgIChhc1BhdGhuYW1lICE9PSByb3V0ZSA/ICgwLCBfcm91dGVNYXRjaGVyKS5nZXRSb3V0ZU1hdGNoZXIoZHluYW1pY1JlZ2V4KShhc1BhdGhuYW1lKSA6ICcnKSB8fCAvLyBGYWxsIGJhY2sgdG8gcmVhZGluZyB0aGUgdmFsdWVzIGZyb20gdGhlIGhyZWZcbiAgICAvLyBUT0RPOiBzaG91bGQgdGhpcyB0YWtlIHByaW9yaXR5OyBhbHNvIG5lZWQgdG8gY2hhbmdlIGluIHRoZSByb3V0ZXIuXG4gICAgcXVlcnk7XG4gICAgaW50ZXJwb2xhdGVkUm91dGUgPSByb3V0ZTtcbiAgICBjb25zdCBwYXJhbXMgPSBPYmplY3Qua2V5cyhkeW5hbWljR3JvdXBzKTtcbiAgICBpZiAoIXBhcmFtcy5ldmVyeSgocGFyYW0pPT57XG4gICAgICAgIGxldCB2YWx1ZSA9IGR5bmFtaWNNYXRjaGVzW3BhcmFtXSB8fCAnJztcbiAgICAgICAgY29uc3QgeyByZXBlYXQgLCBvcHRpb25hbCAgfSA9IGR5bmFtaWNHcm91cHNbcGFyYW1dO1xuICAgICAgICAvLyBzdXBwb3J0IHNpbmdsZS1sZXZlbCBjYXRjaC1hbGxcbiAgICAgICAgLy8gVE9ETzogbW9yZSByb2J1c3QgaGFuZGxpbmcgZm9yIHVzZXItZXJyb3IgKHBhc3NpbmcgYC9gKVxuICAgICAgICBsZXQgcmVwbGFjZWQgPSBgWyR7cmVwZWF0ID8gJy4uLicgOiAnJ30ke3BhcmFtfV1gO1xuICAgICAgICBpZiAob3B0aW9uYWwpIHtcbiAgICAgICAgICAgIHJlcGxhY2VkID0gYCR7IXZhbHVlID8gJy8nIDogJyd9WyR7cmVwbGFjZWR9XWA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlcGVhdCAmJiAhQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHZhbHVlID0gW1xuICAgICAgICAgICAgdmFsdWVcbiAgICAgICAgXTtcbiAgICAgICAgcmV0dXJuIChvcHRpb25hbCB8fCBwYXJhbSBpbiBkeW5hbWljTWF0Y2hlcykgJiYgLy8gSW50ZXJwb2xhdGUgZ3JvdXAgaW50byBkYXRhIFVSTCBpZiBwcmVzZW50XG4gICAgICAgIChpbnRlcnBvbGF0ZWRSb3V0ZSA9IGludGVycG9sYXRlZFJvdXRlLnJlcGxhY2UocmVwbGFjZWQsIHJlcGVhdCA/IHZhbHVlLm1hcCgvLyB0aGVzZSB2YWx1ZXMgc2hvdWxkIGJlIGZ1bGx5IGVuY29kZWQgaW5zdGVhZCBvZiBqdXN0XG4gICAgICAgIC8vIHBhdGggZGVsaW1pdGVyIGVzY2FwZWQgc2luY2UgdGhleSBhcmUgYmVpbmcgaW5zZXJ0ZWRcbiAgICAgICAgLy8gaW50byB0aGUgVVJMIGFuZCB3ZSBleHBlY3QgVVJMIGVuY29kZWQgc2VnbWVudHNcbiAgICAgICAgLy8gd2hlbiBwYXJzaW5nIGR5bmFtaWMgcm91dGUgcGFyYW1zXG4gICAgICAgIChzZWdtZW50KT0+ZW5jb2RlVVJJQ29tcG9uZW50KHNlZ21lbnQpXG4gICAgICAgICkuam9pbignLycpIDogZW5jb2RlVVJJQ29tcG9uZW50KHZhbHVlKSkgfHwgJy8nKTtcbiAgICB9KSkge1xuICAgICAgICBpbnRlcnBvbGF0ZWRSb3V0ZSA9ICcnIC8vIGRpZCBub3Qgc2F0aXNmeSBhbGwgcmVxdWlyZW1lbnRzXG4gICAgICAgIDtcbiAgICAvLyBuLmIuIFdlIGlnbm9yZSB0aGlzIGVycm9yIGJlY2F1c2Ugd2UgaGFuZGxlIHdhcm5pbmcgZm9yIHRoaXMgY2FzZSBpblxuICAgIC8vIGRldmVsb3BtZW50IGluIHRoZSBgPExpbms+YCBjb21wb25lbnQgZGlyZWN0bHkuXG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHBhcmFtcyxcbiAgICAgICAgcmVzdWx0OiBpbnRlcnBvbGF0ZWRSb3V0ZVxuICAgIH07XG59XG5mdW5jdGlvbiBvbWl0UGFybXNGcm9tUXVlcnkocXVlcnksIHBhcmFtcykge1xuICAgIGNvbnN0IGZpbHRlcmVkUXVlcnkgPSB7fTtcbiAgICBPYmplY3Qua2V5cyhxdWVyeSkuZm9yRWFjaCgoa2V5KT0+e1xuICAgICAgICBpZiAoIXBhcmFtcy5pbmNsdWRlcyhrZXkpKSB7XG4gICAgICAgICAgICBmaWx0ZXJlZFF1ZXJ5W2tleV0gPSBxdWVyeVtrZXldO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGZpbHRlcmVkUXVlcnk7XG59XG5mdW5jdGlvbiByZXNvbHZlSHJlZihyb3V0ZXIsIGhyZWYsIHJlc29sdmVBcykge1xuICAgIC8vIHdlIHVzZSBhIGR1bW15IGJhc2UgdXJsIGZvciByZWxhdGl2ZSB1cmxzXG4gICAgbGV0IGJhc2U7XG4gICAgbGV0IHVybEFzU3RyaW5nID0gdHlwZW9mIGhyZWYgPT09ICdzdHJpbmcnID8gaHJlZiA6ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbihocmVmKTtcbiAgICAvLyByZXBlYXRlZCBzbGFzaGVzIGFuZCBiYWNrc2xhc2hlcyBpbiB0aGUgVVJMIGFyZSBjb25zaWRlcmVkXG4gICAgLy8gaW52YWxpZCBhbmQgd2lsbCBuZXZlciBtYXRjaCBhIE5leHQuanMgcGFnZS9maWxlXG4gICAgY29uc3QgdXJsUHJvdG9NYXRjaCA9IHVybEFzU3RyaW5nLm1hdGNoKC9eW2EtekEtWl17MSx9OlxcL1xcLy8pO1xuICAgIGNvbnN0IHVybEFzU3RyaW5nTm9Qcm90byA9IHVybFByb3RvTWF0Y2ggPyB1cmxBc1N0cmluZy5zbGljZSh1cmxQcm90b01hdGNoWzBdLmxlbmd0aCkgOiB1cmxBc1N0cmluZztcbiAgICBjb25zdCB1cmxQYXJ0cyA9IHVybEFzU3RyaW5nTm9Qcm90by5zcGxpdCgnPycpO1xuICAgIGlmICgodXJsUGFydHNbMF0gfHwgJycpLm1hdGNoKC8oXFwvXFwvfFxcXFwpLykpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihgSW52YWxpZCBocmVmIHBhc3NlZCB0byBuZXh0L3JvdXRlcjogJHt1cmxBc1N0cmluZ30sIHJlcGVhdGVkIGZvcndhcmQtc2xhc2hlcyAoLy8pIG9yIGJhY2tzbGFzaGVzIFxcXFwgYXJlIG5vdCB2YWxpZCBpbiB0aGUgaHJlZmApO1xuICAgICAgICBjb25zdCBub3JtYWxpemVkVXJsID0gKDAsIF91dGlscykubm9ybWFsaXplUmVwZWF0ZWRTbGFzaGVzKHVybEFzU3RyaW5nTm9Qcm90byk7XG4gICAgICAgIHVybEFzU3RyaW5nID0gKHVybFByb3RvTWF0Y2ggPyB1cmxQcm90b01hdGNoWzBdIDogJycpICsgbm9ybWFsaXplZFVybDtcbiAgICB9XG4gICAgLy8gUmV0dXJuIGJlY2F1c2UgaXQgY2Fubm90IGJlIHJvdXRlZCBieSB0aGUgTmV4dC5qcyByb3V0ZXJcbiAgICBpZiAoIWlzTG9jYWxVUkwodXJsQXNTdHJpbmcpKSB7XG4gICAgICAgIHJldHVybiByZXNvbHZlQXMgPyBbXG4gICAgICAgICAgICB1cmxBc1N0cmluZ1xuICAgICAgICBdIDogdXJsQXNTdHJpbmc7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGJhc2UgPSBuZXcgVVJMKHVybEFzU3RyaW5nLnN0YXJ0c1dpdGgoJyMnKSA/IHJvdXRlci5hc1BhdGggOiByb3V0ZXIucGF0aG5hbWUsICdodHRwOi8vbicpO1xuICAgIH0gY2F0Y2ggKF8pIHtcbiAgICAgICAgLy8gZmFsbGJhY2sgdG8gLyBmb3IgaW52YWxpZCBhc1BhdGggdmFsdWVzIGUuZy4gLy9cbiAgICAgICAgYmFzZSA9IG5ldyBVUkwoJy8nLCAnaHR0cDovL24nKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZmluYWxVcmwgPSBuZXcgVVJMKHVybEFzU3RyaW5nLCBiYXNlKTtcbiAgICAgICAgZmluYWxVcmwucGF0aG5hbWUgPSAoMCwgX25vcm1hbGl6ZVRyYWlsaW5nU2xhc2gpLm5vcm1hbGl6ZVBhdGhUcmFpbGluZ1NsYXNoKGZpbmFsVXJsLnBhdGhuYW1lKTtcbiAgICAgICAgbGV0IGludGVycG9sYXRlZEFzID0gJyc7XG4gICAgICAgIGlmICgoMCwgX2lzRHluYW1pYykuaXNEeW5hbWljUm91dGUoZmluYWxVcmwucGF0aG5hbWUpICYmIGZpbmFsVXJsLnNlYXJjaFBhcmFtcyAmJiByZXNvbHZlQXMpIHtcbiAgICAgICAgICAgIGNvbnN0IHF1ZXJ5ID0gKDAsIF9xdWVyeXN0cmluZykuc2VhcmNoUGFyYW1zVG9VcmxRdWVyeShmaW5hbFVybC5zZWFyY2hQYXJhbXMpO1xuICAgICAgICAgICAgY29uc3QgeyByZXN1bHQgLCBwYXJhbXMgIH0gPSBpbnRlcnBvbGF0ZUFzKGZpbmFsVXJsLnBhdGhuYW1lLCBmaW5hbFVybC5wYXRobmFtZSwgcXVlcnkpO1xuICAgICAgICAgICAgaWYgKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgIGludGVycG9sYXRlZEFzID0gKDAsIF9mb3JtYXRVcmwpLmZvcm1hdFdpdGhWYWxpZGF0aW9uKHtcbiAgICAgICAgICAgICAgICAgICAgcGF0aG5hbWU6IHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgICAgaGFzaDogZmluYWxVcmwuaGFzaCxcbiAgICAgICAgICAgICAgICAgICAgcXVlcnk6IG9taXRQYXJtc0Zyb21RdWVyeShxdWVyeSwgcGFyYW1zKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIGlmIHRoZSBvcmlnaW4gZGlkbid0IGNoYW5nZSwgaXQgbWVhbnMgd2UgcmVjZWl2ZWQgYSByZWxhdGl2ZSBocmVmXG4gICAgICAgIGNvbnN0IHJlc29sdmVkSHJlZiA9IGZpbmFsVXJsLm9yaWdpbiA9PT0gYmFzZS5vcmlnaW4gPyBmaW5hbFVybC5ocmVmLnNsaWNlKGZpbmFsVXJsLm9yaWdpbi5sZW5ndGgpIDogZmluYWxVcmwuaHJlZjtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVBcyA/IFtcbiAgICAgICAgICAgIHJlc29sdmVkSHJlZixcbiAgICAgICAgICAgIGludGVycG9sYXRlZEFzIHx8IHJlc29sdmVkSHJlZlxuICAgICAgICBdIDogcmVzb2x2ZWRIcmVmO1xuICAgIH0gY2F0Y2ggKF8xKSB7XG4gICAgICAgIHJldHVybiByZXNvbHZlQXMgPyBbXG4gICAgICAgICAgICB1cmxBc1N0cmluZ1xuICAgICAgICBdIDogdXJsQXNTdHJpbmc7XG4gICAgfVxufVxuZnVuY3Rpb24gc3RyaXBPcmlnaW4odXJsKSB7XG4gICAgY29uc3Qgb3JpZ2luID0gKDAsIF91dGlscykuZ2V0TG9jYXRpb25PcmlnaW4oKTtcbiAgICByZXR1cm4gdXJsLnN0YXJ0c1dpdGgob3JpZ2luKSA/IHVybC5zdWJzdHJpbmcob3JpZ2luLmxlbmd0aCkgOiB1cmw7XG59XG5mdW5jdGlvbiBwcmVwYXJlVXJsQXMocm91dGVyLCB1cmwsIGFzKSB7XG4gICAgLy8gSWYgdXJsIGFuZCBhcyBwcm92aWRlZCBhcyBhbiBvYmplY3QgcmVwcmVzZW50YXRpb24sXG4gICAgLy8gd2UnbGwgZm9ybWF0IHRoZW0gaW50byB0aGUgc3RyaW5nIHZlcnNpb24gaGVyZS5cbiAgICBsZXQgW3Jlc29sdmVkSHJlZiwgcmVzb2x2ZWRBc10gPSByZXNvbHZlSHJlZihyb3V0ZXIsIHVybCwgdHJ1ZSk7XG4gICAgY29uc3Qgb3JpZ2luID0gKDAsIF91dGlscykuZ2V0TG9jYXRpb25PcmlnaW4oKTtcbiAgICBjb25zdCBocmVmSGFkT3JpZ2luID0gcmVzb2x2ZWRIcmVmLnN0YXJ0c1dpdGgob3JpZ2luKTtcbiAgICBjb25zdCBhc0hhZE9yaWdpbiA9IHJlc29sdmVkQXMgJiYgcmVzb2x2ZWRBcy5zdGFydHNXaXRoKG9yaWdpbik7XG4gICAgcmVzb2x2ZWRIcmVmID0gc3RyaXBPcmlnaW4ocmVzb2x2ZWRIcmVmKTtcbiAgICByZXNvbHZlZEFzID0gcmVzb2x2ZWRBcyA/IHN0cmlwT3JpZ2luKHJlc29sdmVkQXMpIDogcmVzb2x2ZWRBcztcbiAgICBjb25zdCBwcmVwYXJlZFVybCA9IGhyZWZIYWRPcmlnaW4gPyByZXNvbHZlZEhyZWYgOiBhZGRCYXNlUGF0aChyZXNvbHZlZEhyZWYpO1xuICAgIGNvbnN0IHByZXBhcmVkQXMgPSBhcyA/IHN0cmlwT3JpZ2luKHJlc29sdmVIcmVmKHJvdXRlciwgYXMpKSA6IHJlc29sdmVkQXMgfHwgcmVzb2x2ZWRIcmVmO1xuICAgIHJldHVybiB7XG4gICAgICAgIHVybDogcHJlcGFyZWRVcmwsXG4gICAgICAgIGFzOiBhc0hhZE9yaWdpbiA/IHByZXBhcmVkQXMgOiBhZGRCYXNlUGF0aChwcmVwYXJlZEFzKVxuICAgIH07XG59XG5mdW5jdGlvbiByZXNvbHZlRHluYW1pY1JvdXRlKHBhdGhuYW1lLCBwYWdlcykge1xuICAgIGNvbnN0IGNsZWFuUGF0aG5hbWUgPSAoMCwgX25vcm1hbGl6ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVBhdGhUcmFpbGluZ1NsYXNoKCgwLCBfZGVub3JtYWxpemVQYWdlUGF0aCkuZGVub3JtYWxpemVQYWdlUGF0aChwYXRobmFtZSkpO1xuICAgIGlmIChjbGVhblBhdGhuYW1lID09PSAnLzQwNCcgfHwgY2xlYW5QYXRobmFtZSA9PT0gJy9fZXJyb3InKSB7XG4gICAgICAgIHJldHVybiBwYXRobmFtZTtcbiAgICB9XG4gICAgLy8gaGFuZGxlIHJlc29sdmluZyBocmVmIGZvciBkeW5hbWljIHJvdXRlc1xuICAgIGlmICghcGFnZXMuaW5jbHVkZXMoY2xlYW5QYXRobmFtZSkpIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGFycmF5LWNhbGxiYWNrLXJldHVyblxuICAgICAgICBwYWdlcy5zb21lKChwYWdlKT0+e1xuICAgICAgICAgICAgaWYgKCgwLCBfaXNEeW5hbWljKS5pc0R5bmFtaWNSb3V0ZShwYWdlKSAmJiAoMCwgX3JvdXRlUmVnZXgpLmdldFJvdXRlUmVnZXgocGFnZSkucmUudGVzdChjbGVhblBhdGhuYW1lKSkge1xuICAgICAgICAgICAgICAgIHBhdGhuYW1lID0gcGFnZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiAoMCwgX25vcm1hbGl6ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVBhdGhUcmFpbGluZ1NsYXNoKHBhdGhuYW1lKTtcbn1cbmNvbnN0IG1hbnVhbFNjcm9sbFJlc3RvcmF0aW9uID0gcHJvY2Vzcy5lbnYuX19ORVhUX1NDUk9MTF9SRVNUT1JBVElPTiAmJiB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiAnc2Nyb2xsUmVzdG9yYXRpb24nIGluIHdpbmRvdy5oaXN0b3J5ICYmICEhZnVuY3Rpb24oKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgbGV0IHYgPSAnX19uZXh0JztcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlcXVlbmNlc1xuICAgICAgICByZXR1cm4gc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSh2LCB2KSwgc2Vzc2lvblN0b3JhZ2UucmVtb3ZlSXRlbSh2KSwgdHJ1ZTtcbiAgICB9IGNhdGNoIChuKSB7fVxufSgpO1xuY29uc3QgU1NHX0RBVEFfTk9UX0ZPVU5EID0gU3ltYm9sKCdTU0dfREFUQV9OT1RfRk9VTkQnKTtcbmZ1bmN0aW9uIGZldGNoUmV0cnkodXJsLCBhdHRlbXB0cywgb3B0cykge1xuICAgIHJldHVybiBmZXRjaCh1cmwsIHtcbiAgICAgICAgLy8gQ29va2llcyBhcmUgcmVxdWlyZWQgdG8gYmUgcHJlc2VudCBmb3IgTmV4dC5qcycgU1NHIFwiUHJldmlldyBNb2RlXCIuXG4gICAgICAgIC8vIENvb2tpZXMgbWF5IGFsc28gYmUgcmVxdWlyZWQgZm9yIGBnZXRTZXJ2ZXJTaWRlUHJvcHNgLlxuICAgICAgICAvL1xuICAgICAgICAvLyA+IGBmZXRjaGAgd29u4oCZdCBzZW5kIGNvb2tpZXMsIHVubGVzcyB5b3Ugc2V0IHRoZSBjcmVkZW50aWFscyBpbml0XG4gICAgICAgIC8vID4gb3B0aW9uLlxuICAgICAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvRmV0Y2hfQVBJL1VzaW5nX0ZldGNoXG4gICAgICAgIC8vXG4gICAgICAgIC8vID4gRm9yIG1heGltdW0gYnJvd3NlciBjb21wYXRpYmlsaXR5IHdoZW4gaXQgY29tZXMgdG8gc2VuZGluZyAmXG4gICAgICAgIC8vID4gcmVjZWl2aW5nIGNvb2tpZXMsIGFsd2F5cyBzdXBwbHkgdGhlIGBjcmVkZW50aWFsczogJ3NhbWUtb3JpZ2luJ2BcbiAgICAgICAgLy8gPiBvcHRpb24gaW5zdGVhZCBvZiByZWx5aW5nIG9uIHRoZSBkZWZhdWx0LlxuICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZ2l0aHViL2ZldGNoI2NhdmVhdHNcbiAgICAgICAgY3JlZGVudGlhbHM6ICdzYW1lLW9yaWdpbidcbiAgICB9KS50aGVuKChyZXMpPT57XG4gICAgICAgIGlmICghcmVzLm9rKSB7XG4gICAgICAgICAgICBpZiAoYXR0ZW1wdHMgPiAxICYmIHJlcy5zdGF0dXMgPj0gNTAwKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoUmV0cnkodXJsLCBhdHRlbXB0cyAtIDEsIG9wdHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IDQwNCkge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbigpLnRoZW4oKGRhdGEpPT57XG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXRhLm5vdEZvdW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5vdEZvdW5kOiBTU0dfREFUQV9OT1RfRk9VTkRcbiAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gbG9hZCBzdGF0aWMgcHJvcHNgKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIGxvYWQgc3RhdGljIHByb3BzYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG9wdHMudGV4dCA/IHJlcy50ZXh0KCkgOiByZXMuanNvbigpO1xuICAgIH0pO1xufVxuZnVuY3Rpb24gZmV0Y2hOZXh0RGF0YShkYXRhSHJlZiwgaXNTZXJ2ZXJSZW5kZXIsIHRleHQsIGluZmxpZ2h0Q2FjaGUsIHBlcnNpc3RDYWNoZSkge1xuICAgIGNvbnN0IHsgaHJlZjogY2FjaGVLZXkgIH0gPSBuZXcgVVJMKGRhdGFIcmVmLCB3aW5kb3cubG9jYXRpb24uaHJlZik7XG4gICAgaWYgKGluZmxpZ2h0Q2FjaGVbY2FjaGVLZXldICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIGluZmxpZ2h0Q2FjaGVbY2FjaGVLZXldO1xuICAgIH1cbiAgICByZXR1cm4gaW5mbGlnaHRDYWNoZVtjYWNoZUtleV0gPSBmZXRjaFJldHJ5KGRhdGFIcmVmLCBpc1NlcnZlclJlbmRlciA/IDMgOiAxLCB7XG4gICAgICAgIHRleHRcbiAgICB9KS5jYXRjaCgoZXJyKT0+e1xuICAgICAgICAvLyBXZSBzaG91bGQgb25seSB0cmlnZ2VyIGEgc2VydmVyLXNpZGUgdHJhbnNpdGlvbiBpZiB0aGlzIHdhcyBjYXVzZWRcbiAgICAgICAgLy8gb24gYSBjbGllbnQtc2lkZSB0cmFuc2l0aW9uLiBPdGhlcndpc2UsIHdlJ2QgZ2V0IGludG8gYW4gaW5maW5pdGVcbiAgICAgICAgLy8gbG9vcC5cbiAgICAgICAgaWYgKCFpc1NlcnZlclJlbmRlcikge1xuICAgICAgICAgICAgKDAsIF9yb3V0ZUxvYWRlcikubWFya0Fzc2V0RXJyb3IoZXJyKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBlcnI7XG4gICAgfSkudGhlbigoZGF0YSk9PntcbiAgICAgICAgaWYgKCFwZXJzaXN0Q2FjaGUgfHwgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgZGVsZXRlIGluZmxpZ2h0Q2FjaGVbY2FjaGVLZXldO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIH0pLmNhdGNoKChlcnIpPT57XG4gICAgICAgIGRlbGV0ZSBpbmZsaWdodENhY2hlW2NhY2hlS2V5XTtcbiAgICAgICAgdGhyb3cgZXJyO1xuICAgIH0pO1xufVxuY2xhc3MgUm91dGVyIHtcbiAgICBjb25zdHJ1Y3RvcihwYXRobmFtZTEsIHF1ZXJ5MSwgYXMxLCB7IGluaXRpYWxQcm9wcyAsIHBhZ2VMb2FkZXIgLCBBcHAgLCB3cmFwQXBwICwgQ29tcG9uZW50ICwgZXJyICwgc3Vic2NyaXB0aW9uICwgaXNGYWxsYmFjayAsIGxvY2FsZSAsIGxvY2FsZXMgLCBkZWZhdWx0TG9jYWxlICwgZG9tYWluTG9jYWxlcyAsIGlzUHJldmlldyAsIGlzUnNjICB9KXtcbiAgICAgICAgLy8gU3RhdGljIERhdGEgQ2FjaGVcbiAgICAgICAgdGhpcy5zZGMgPSB7fTtcbiAgICAgICAgLy8gSW4tZmxpZ2h0IFNlcnZlciBEYXRhIFJlcXVlc3RzLCBmb3IgZGVkdXBpbmdcbiAgICAgICAgdGhpcy5zZHIgPSB7fTtcbiAgICAgICAgLy8gSW4tZmxpZ2h0IG1pZGRsZXdhcmUgcHJlZmxpZ2h0IHJlcXVlc3RzXG4gICAgICAgIHRoaXMuc2RlID0ge307XG4gICAgICAgIHRoaXMuX2lkeCA9IDA7XG4gICAgICAgIHRoaXMub25Qb3BTdGF0ZSA9IChlKT0+e1xuICAgICAgICAgICAgY29uc3Qgc3RhdGUgPSBlLnN0YXRlO1xuICAgICAgICAgICAgaWYgKCFzdGF0ZSkge1xuICAgICAgICAgICAgICAgIC8vIFdlIGdldCBzdGF0ZSBhcyB1bmRlZmluZWQgZm9yIHR3byByZWFzb25zLlxuICAgICAgICAgICAgICAgIC8vICAxLiBXaXRoIG9sZGVyIHNhZmFyaSAoPCA4KSBhbmQgb2xkZXIgY2hyb21lICg8IDM0KVxuICAgICAgICAgICAgICAgIC8vICAyLiBXaGVuIHRoZSBVUkwgY2hhbmdlZCB3aXRoICNcbiAgICAgICAgICAgICAgICAvL1xuICAgICAgICAgICAgICAgIC8vIEluIHRoZSBib3RoIGNhc2VzLCB3ZSBkb24ndCBuZWVkIHRvIHByb2NlZWQgYW5kIGNoYW5nZSB0aGUgcm91dGUuXG4gICAgICAgICAgICAgICAgLy8gKGFzIGl0J3MgYWxyZWFkeSBjaGFuZ2VkKVxuICAgICAgICAgICAgICAgIC8vIEJ1dCB3ZSBjYW4gc2ltcGx5IHJlcGxhY2UgdGhlIHN0YXRlIHdpdGggdGhlIG5ldyBjaGFuZ2VzLlxuICAgICAgICAgICAgICAgIC8vIEFjdHVhbGx5LCBmb3IgKDEpIHdlIGRvbid0IG5lZWQgdG8gbm90aGluZy4gQnV0IGl0J3MgaGFyZCB0byBkZXRlY3QgdGhhdCBldmVudC5cbiAgICAgICAgICAgICAgICAvLyBTbywgZG9pbmcgdGhlIGZvbGxvd2luZyBmb3IgKDEpIGRvZXMgbm8gaGFybS5cbiAgICAgICAgICAgICAgICBjb25zdCB7IHBhdGhuYW1lICwgcXVlcnkgIH0gPSB0aGlzO1xuICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlU3RhdGUoJ3JlcGxhY2VTdGF0ZScsICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbih7XG4gICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lOiBhZGRCYXNlUGF0aChwYXRobmFtZSksXG4gICAgICAgICAgICAgICAgICAgIHF1ZXJ5XG4gICAgICAgICAgICAgICAgfSksICgwLCBfdXRpbHMpLmdldFVSTCgpKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXN0YXRlLl9fTikge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxldCBmb3JjZWRTY3JvbGw7XG4gICAgICAgICAgICBjb25zdCB7IHVybCAsIGFzICwgb3B0aW9ucyAsIGlkeCAgfSA9IHN0YXRlO1xuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9TQ1JPTExfUkVTVE9SQVRJT04pIHtcbiAgICAgICAgICAgICAgICBpZiAobWFudWFsU2Nyb2xsUmVzdG9yYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHRoaXMuX2lkeCAhPT0gaWR4KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBTbmFwc2hvdCBjdXJyZW50IHNjcm9sbCBwb3NpdGlvbjpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnX19uZXh0X3Njcm9sbF8nICsgdGhpcy5faWR4LCBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHg6IHNlbGYucGFnZVhPZmZzZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHk6IHNlbGYucGFnZVlPZmZzZXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoICB7fVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gUmVzdG9yZSBvbGQgc2Nyb2xsIHBvc2l0aW9uOlxuICAgICAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB2ID0gc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbSgnX19uZXh0X3Njcm9sbF8nICsgaWR4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JjZWRTY3JvbGwgPSBKU09OLnBhcnNlKHYpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcmNlZFNjcm9sbCA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeDogMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeTogMFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9pZHggPSBpZHg7XG4gICAgICAgICAgICBjb25zdCB7IHBhdGhuYW1lICB9ID0gKDAsIF9wYXJzZVJlbGF0aXZlVXJsKS5wYXJzZVJlbGF0aXZlVXJsKHVybCk7XG4gICAgICAgICAgICAvLyBNYWtlIHN1cmUgd2UgZG9uJ3QgcmUtcmVuZGVyIG9uIGluaXRpYWwgbG9hZCxcbiAgICAgICAgICAgIC8vIGNhbiBiZSBjYXVzZWQgYnkgbmF2aWdhdGluZyBiYWNrIGZyb20gYW4gZXh0ZXJuYWwgc2l0ZVxuICAgICAgICAgICAgaWYgKHRoaXMuaXNTc3IgJiYgYXMgPT09IGFkZEJhc2VQYXRoKHRoaXMuYXNQYXRoKSAmJiBwYXRobmFtZSA9PT0gYWRkQmFzZVBhdGgodGhpcy5wYXRobmFtZSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBJZiB0aGUgZG93bnN0cmVhbSBhcHBsaWNhdGlvbiByZXR1cm5zIGZhbHN5LCByZXR1cm4uXG4gICAgICAgICAgICAvLyBUaGV5IHdpbGwgdGhlbiBiZSByZXNwb25zaWJsZSBmb3IgaGFuZGxpbmcgdGhlIGV2ZW50LlxuICAgICAgICAgICAgaWYgKHRoaXMuX2JwcyAmJiAhdGhpcy5fYnBzKHN0YXRlKSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuY2hhbmdlKCdyZXBsYWNlU3RhdGUnLCB1cmwsIGFzLCBPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zLCB7XG4gICAgICAgICAgICAgICAgc2hhbGxvdzogb3B0aW9ucy5zaGFsbG93ICYmIHRoaXMuX3NoYWxsb3csXG4gICAgICAgICAgICAgICAgbG9jYWxlOiBvcHRpb25zLmxvY2FsZSB8fCB0aGlzLmRlZmF1bHRMb2NhbGVcbiAgICAgICAgICAgIH0pLCBmb3JjZWRTY3JvbGwpO1xuICAgICAgICB9O1xuICAgICAgICAvLyByZXByZXNlbnRzIHRoZSBjdXJyZW50IGNvbXBvbmVudCBrZXlcbiAgICAgICAgY29uc3Qgcm91dGUgPSAoMCwgX25vcm1hbGl6ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVBhdGhUcmFpbGluZ1NsYXNoKHBhdGhuYW1lMSk7XG4gICAgICAgIC8vIHNldCB1cCB0aGUgY29tcG9uZW50IGNhY2hlIChieSByb3V0ZSBrZXlzKVxuICAgICAgICB0aGlzLmNvbXBvbmVudHMgPSB7fTtcbiAgICAgICAgLy8gV2Ugc2hvdWxkIG5vdCBrZWVwIHRoZSBjYWNoZSwgaWYgdGhlcmUncyBhbiBlcnJvclxuICAgICAgICAvLyBPdGhlcndpc2UsIHRoaXMgY2F1c2UgaXNzdWVzIHdoZW4gd2hlbiBnb2luZyBiYWNrIGFuZFxuICAgICAgICAvLyBjb21lIGFnYWluIHRvIHRoZSBlcnJvcmVkIHBhZ2UuXG4gICAgICAgIGlmIChwYXRobmFtZTEgIT09ICcvX2Vycm9yJykge1xuICAgICAgICAgICAgdGhpcy5jb21wb25lbnRzW3JvdXRlXSA9IHtcbiAgICAgICAgICAgICAgICBDb21wb25lbnQsXG4gICAgICAgICAgICAgICAgaW5pdGlhbDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBwcm9wczogaW5pdGlhbFByb3BzLFxuICAgICAgICAgICAgICAgIGVycixcbiAgICAgICAgICAgICAgICBfX05fU1NHOiBpbml0aWFsUHJvcHMgJiYgaW5pdGlhbFByb3BzLl9fTl9TU0csXG4gICAgICAgICAgICAgICAgX19OX1NTUDogaW5pdGlhbFByb3BzICYmIGluaXRpYWxQcm9wcy5fX05fU1NQLFxuICAgICAgICAgICAgICAgIF9fTl9SU0M6ICEhaXNSc2NcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jb21wb25lbnRzWycvX2FwcCddID0ge1xuICAgICAgICAgICAgQ29tcG9uZW50OiBBcHAsXG4gICAgICAgICAgICBzdHlsZVNoZWV0czogW11cbiAgICAgICAgfTtcbiAgICAgICAgLy8gQmFja3dhcmRzIGNvbXBhdCBmb3IgUm91dGVyLnJvdXRlci5ldmVudHNcbiAgICAgICAgLy8gVE9ETzogU2hvdWxkIGJlIHJlbW92ZSB0aGUgZm9sbG93aW5nIG1ham9yIHZlcnNpb24gYXMgaXQgd2FzIG5ldmVyIGRvY3VtZW50ZWRcbiAgICAgICAgdGhpcy5ldmVudHMgPSBSb3V0ZXIuZXZlbnRzO1xuICAgICAgICB0aGlzLnBhZ2VMb2FkZXIgPSBwYWdlTG9hZGVyO1xuICAgICAgICAvLyBpZiBhdXRvIHByZXJlbmRlcmVkIGFuZCBkeW5hbWljIHJvdXRlIHdhaXQgdG8gdXBkYXRlIGFzUGF0aFxuICAgICAgICAvLyB1bnRpbCBhZnRlciBtb3VudCB0byBwcmV2ZW50IGh5ZHJhdGlvbiBtaXNtYXRjaFxuICAgICAgICBjb25zdCBhdXRvRXhwb3J0RHluYW1pYyA9ICgwLCBfaXNEeW5hbWljKS5pc0R5bmFtaWNSb3V0ZShwYXRobmFtZTEpICYmIHNlbGYuX19ORVhUX0RBVEFfXy5hdXRvRXhwb3J0O1xuICAgICAgICB0aGlzLmJhc2VQYXRoID0gYmFzZVBhdGg7XG4gICAgICAgIHRoaXMuc3ViID0gc3Vic2NyaXB0aW9uO1xuICAgICAgICB0aGlzLmNsYyA9IG51bGw7XG4gICAgICAgIHRoaXMuX3dyYXBBcHAgPSB3cmFwQXBwO1xuICAgICAgICAvLyBtYWtlIHN1cmUgdG8gaWdub3JlIGV4dHJhIHBvcFN0YXRlIGluIHNhZmFyaSBvbiBuYXZpZ2F0aW5nXG4gICAgICAgIC8vIGJhY2sgZnJvbSBleHRlcm5hbCBzaXRlXG4gICAgICAgIHRoaXMuaXNTc3IgPSB0cnVlO1xuICAgICAgICB0aGlzLmlzTG9jYWxlRG9tYWluID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaXNSZWFkeSA9ICEhKHNlbGYuX19ORVhUX0RBVEFfXy5nc3NwIHx8IHNlbGYuX19ORVhUX0RBVEFfXy5naXAgfHwgc2VsZi5fX05FWFRfREFUQV9fLmFwcEdpcCAmJiAhc2VsZi5fX05FWFRfREFUQV9fLmdzcCB8fCAhYXV0b0V4cG9ydER5bmFtaWMgJiYgIXNlbGYubG9jYXRpb24uc2VhcmNoICYmICFwcm9jZXNzLmVudi5fX05FWFRfSEFTX1JFV1JJVEVTKTtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9JMThOX1NVUFBPUlQpIHtcbiAgICAgICAgICAgIHRoaXMubG9jYWxlcyA9IGxvY2FsZXM7XG4gICAgICAgICAgICB0aGlzLmRlZmF1bHRMb2NhbGUgPSBkZWZhdWx0TG9jYWxlO1xuICAgICAgICAgICAgdGhpcy5kb21haW5Mb2NhbGVzID0gZG9tYWluTG9jYWxlcztcbiAgICAgICAgICAgIHRoaXMuaXNMb2NhbGVEb21haW4gPSAhIWRldGVjdERvbWFpbkxvY2FsZShkb21haW5Mb2NhbGVzLCBzZWxmLmxvY2F0aW9uLmhvc3RuYW1lKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgcm91dGUsXG4gICAgICAgICAgICBwYXRobmFtZTogcGF0aG5hbWUxLFxuICAgICAgICAgICAgcXVlcnk6IHF1ZXJ5MSxcbiAgICAgICAgICAgIGFzUGF0aDogYXV0b0V4cG9ydER5bmFtaWMgPyBwYXRobmFtZTEgOiBhczEsXG4gICAgICAgICAgICBpc1ByZXZpZXc6ICEhaXNQcmV2aWV3LFxuICAgICAgICAgICAgbG9jYWxlOiBwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUID8gbG9jYWxlIDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgaXNGYWxsYmFja1xuICAgICAgICB9O1xuICAgICAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIC8vIG1ha2Ugc3VyZSBcImFzXCIgZG9lc24ndCBzdGFydCB3aXRoIGRvdWJsZSBzbGFzaGVzIG9yIGVsc2UgaXQgY2FuXG4gICAgICAgICAgICAvLyB0aHJvdyBhbiBlcnJvciBhcyBpdCdzIGNvbnNpZGVyZWQgaW52YWxpZFxuICAgICAgICAgICAgaWYgKCFhczEuc3RhcnRzV2l0aCgnLy8nKSkge1xuICAgICAgICAgICAgICAgIC8vIGluIG9yZGVyIGZvciBgZS5zdGF0ZWAgdG8gd29yayBvbiB0aGUgYG9ucG9wc3RhdGVgIGV2ZW50XG4gICAgICAgICAgICAgICAgLy8gd2UgaGF2ZSB0byByZWdpc3RlciB0aGUgaW5pdGlhbCByb3V0ZSB1cG9uIGluaXRpYWxpemF0aW9uXG4gICAgICAgICAgICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICAgICAgbG9jYWxlXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBvcHRpb25zLl9zaG91bGRSZXNvbHZlSHJlZiA9IGFzMSAhPT0gcGF0aG5hbWUxO1xuICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlU3RhdGUoJ3JlcGxhY2VTdGF0ZScsICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbih7XG4gICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lOiBhZGRCYXNlUGF0aChwYXRobmFtZTEpLFxuICAgICAgICAgICAgICAgICAgICBxdWVyeTogcXVlcnkxXG4gICAgICAgICAgICAgICAgfSksICgwLCBfdXRpbHMpLmdldFVSTCgpLCBvcHRpb25zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdwb3BzdGF0ZScsIHRoaXMub25Qb3BTdGF0ZSk7XG4gICAgICAgICAgICAvLyBlbmFibGUgY3VzdG9tIHNjcm9sbCByZXN0b3JhdGlvbiBoYW5kbGluZyB3aGVuIGF2YWlsYWJsZVxuICAgICAgICAgICAgLy8gb3RoZXJ3aXNlIGZhbGxiYWNrIHRvIGJyb3dzZXIncyBkZWZhdWx0IGhhbmRsaW5nXG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX1NDUk9MTF9SRVNUT1JBVElPTikge1xuICAgICAgICAgICAgICAgIGlmIChtYW51YWxTY3JvbGxSZXN0b3JhdGlvbikge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuaGlzdG9yeS5zY3JvbGxSZXN0b3JhdGlvbiA9ICdtYW51YWwnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZWxvYWQoKSB7XG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcbiAgICB9XG4gICAgLyoqXG4gICAqIEdvIGJhY2sgaW4gaGlzdG9yeVxuICAgKi8gYmFjaygpIHtcbiAgICAgICAgd2luZG93Lmhpc3RvcnkuYmFjaygpO1xuICAgIH1cbiAgICAvKipcbiAgICogUGVyZm9ybXMgYSBgcHVzaFN0YXRlYCB3aXRoIGFyZ3VtZW50c1xuICAgKiBAcGFyYW0gdXJsIG9mIHRoZSByb3V0ZVxuICAgKiBAcGFyYW0gYXMgbWFza3MgYHVybGAgZm9yIHRoZSBicm93c2VyXG4gICAqIEBwYXJhbSBvcHRpb25zIG9iamVjdCB5b3UgY2FuIGRlZmluZSBgc2hhbGxvd2AgYW5kIG90aGVyIG9wdGlvbnNcbiAgICovIHB1c2godXJsLCBhcywgb3B0aW9ucyA9IHt9KSB7XG4gICAgICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfU0NST0xMX1JFU1RPUkFUSU9OKSB7XG4gICAgICAgICAgICAvLyBUT0RPOiByZW1vdmUgaW4gdGhlIGZ1dHVyZSB3aGVuIHdlIHVwZGF0ZSBoaXN0b3J5IGJlZm9yZSByb3V0ZSBjaGFuZ2VcbiAgICAgICAgICAgIC8vIGlzIGNvbXBsZXRlLCBhcyB0aGUgcG9wc3RhdGUgZXZlbnQgc2hvdWxkIGhhbmRsZSB0aGlzIGNhcHR1cmUuXG4gICAgICAgICAgICBpZiAobWFudWFsU2Nyb2xsUmVzdG9yYXRpb24pIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAvLyBTbmFwc2hvdCBzY3JvbGwgcG9zaXRpb24gcmlnaHQgYmVmb3JlIG5hdmlnYXRpbmcgdG8gYSBuZXcgcGFnZTpcbiAgICAgICAgICAgICAgICAgICAgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgnX19uZXh0X3Njcm9sbF8nICsgdGhpcy5faWR4LCBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgICAgICAgICB4OiBzZWxmLnBhZ2VYT2Zmc2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgeTogc2VsZi5wYWdlWU9mZnNldFxuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAge31cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAoeyB1cmwgLCBhcyAgfSA9IHByZXBhcmVVcmxBcyh0aGlzLCB1cmwsIGFzKSk7XG4gICAgICAgIHJldHVybiB0aGlzLmNoYW5nZSgncHVzaFN0YXRlJywgdXJsLCBhcywgb3B0aW9ucyk7XG4gICAgfVxuICAgIC8qKlxuICAgKiBQZXJmb3JtcyBhIGByZXBsYWNlU3RhdGVgIHdpdGggYXJndW1lbnRzXG4gICAqIEBwYXJhbSB1cmwgb2YgdGhlIHJvdXRlXG4gICAqIEBwYXJhbSBhcyBtYXNrcyBgdXJsYCBmb3IgdGhlIGJyb3dzZXJcbiAgICogQHBhcmFtIG9wdGlvbnMgb2JqZWN0IHlvdSBjYW4gZGVmaW5lIGBzaGFsbG93YCBhbmQgb3RoZXIgb3B0aW9uc1xuICAgKi8gcmVwbGFjZSh1cmwsIGFzLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgKHsgdXJsICwgYXMgIH0gPSBwcmVwYXJlVXJsQXModGhpcywgdXJsLCBhcykpO1xuICAgICAgICByZXR1cm4gdGhpcy5jaGFuZ2UoJ3JlcGxhY2VTdGF0ZScsIHVybCwgYXMsIG9wdGlvbnMpO1xuICAgIH1cbiAgICBhc3luYyBjaGFuZ2UobWV0aG9kLCB1cmwsIGFzLCBvcHRpb25zLCBmb3JjZWRTY3JvbGwpIHtcbiAgICAgICAgaWYgKCFpc0xvY2FsVVJMKHVybCkpIHtcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gdXJsO1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHNob3VsZFJlc29sdmVIcmVmID0gb3B0aW9ucy5faCB8fCBvcHRpb25zLl9zaG91bGRSZXNvbHZlSHJlZiB8fCBwYXRoTm9RdWVyeUhhc2godXJsKSA9PT0gcGF0aE5vUXVlcnlIYXNoKGFzKTtcbiAgICAgICAgY29uc3QgbmV4dFN0YXRlID0ge1xuICAgICAgICAgICAgLi4udGhpcy5zdGF0ZVxuICAgICAgICB9O1xuICAgICAgICAvLyBmb3Igc3RhdGljIHBhZ2VzIHdpdGggcXVlcnkgcGFyYW1zIGluIHRoZSBVUkwgd2UgZGVsYXlcbiAgICAgICAgLy8gbWFya2luZyB0aGUgcm91dGVyIHJlYWR5IHVudGlsIGFmdGVyIHRoZSBxdWVyeSBpcyB1cGRhdGVkXG4gICAgICAgIGlmIChvcHRpb25zLl9oKSB7XG4gICAgICAgICAgICB0aGlzLmlzUmVhZHkgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHByZXZMb2NhbGUgPSBuZXh0U3RhdGUubG9jYWxlO1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0kxOE5fU1VQUE9SVCkge1xuICAgICAgICAgICAgbmV4dFN0YXRlLmxvY2FsZSA9IG9wdGlvbnMubG9jYWxlID09PSBmYWxzZSA/IHRoaXMuZGVmYXVsdExvY2FsZSA6IG9wdGlvbnMubG9jYWxlIHx8IG5leHRTdGF0ZS5sb2NhbGU7XG4gICAgICAgICAgICBpZiAodHlwZW9mIG9wdGlvbnMubG9jYWxlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIG9wdGlvbnMubG9jYWxlID0gbmV4dFN0YXRlLmxvY2FsZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHBhcnNlZEFzID0gKDAsIF9wYXJzZVJlbGF0aXZlVXJsKS5wYXJzZVJlbGF0aXZlVXJsKGhhc0Jhc2VQYXRoKGFzKSA/IGRlbEJhc2VQYXRoKGFzKSA6IGFzKTtcbiAgICAgICAgICAgIGNvbnN0IGxvY2FsZVBhdGhSZXN1bHQgPSAoMCwgX25vcm1hbGl6ZUxvY2FsZVBhdGgpLm5vcm1hbGl6ZUxvY2FsZVBhdGgocGFyc2VkQXMucGF0aG5hbWUsIHRoaXMubG9jYWxlcyk7XG4gICAgICAgICAgICBpZiAobG9jYWxlUGF0aFJlc3VsdC5kZXRlY3RlZExvY2FsZSkge1xuICAgICAgICAgICAgICAgIG5leHRTdGF0ZS5sb2NhbGUgPSBsb2NhbGVQYXRoUmVzdWx0LmRldGVjdGVkTG9jYWxlO1xuICAgICAgICAgICAgICAgIHBhcnNlZEFzLnBhdGhuYW1lID0gYWRkQmFzZVBhdGgocGFyc2VkQXMucGF0aG5hbWUpO1xuICAgICAgICAgICAgICAgIGFzID0gKDAsIF9mb3JtYXRVcmwpLmZvcm1hdFdpdGhWYWxpZGF0aW9uKHBhcnNlZEFzKTtcbiAgICAgICAgICAgICAgICB1cmwgPSBhZGRCYXNlUGF0aCgoMCwgX25vcm1hbGl6ZUxvY2FsZVBhdGgpLm5vcm1hbGl6ZUxvY2FsZVBhdGgoaGFzQmFzZVBhdGgodXJsKSA/IGRlbEJhc2VQYXRoKHVybCkgOiB1cmwsIHRoaXMubG9jYWxlcykucGF0aG5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IGRpZE5hdmlnYXRlID0gZmFsc2U7XG4gICAgICAgICAgICAvLyB3ZSBuZWVkIHRvIHdyYXAgdGhpcyBpbiB0aGUgZW52IGNoZWNrIGFnYWluIHNpbmNlIHJlZ2VuZXJhdG9yIHJ1bnRpbWVcbiAgICAgICAgICAgIC8vIG1vdmVzIHRoaXMgb24gaXRzIG93biBkdWUgdG8gdGhlIHJldHVyblxuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9JMThOX1NVUFBPUlQpIHtcbiAgICAgICAgICAgICAgICB2YXIgcmVmO1xuICAgICAgICAgICAgICAgIC8vIGlmIHRoZSBsb2NhbGUgaXNuJ3QgY29uZmlndXJlZCBoYXJkIG5hdmlnYXRlIHRvIHNob3cgNDA0IHBhZ2VcbiAgICAgICAgICAgICAgICBpZiAoISgocmVmID0gdGhpcy5sb2NhbGVzKSA9PT0gbnVsbCB8fCByZWYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHJlZi5pbmNsdWRlcyhuZXh0U3RhdGUubG9jYWxlKSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyc2VkQXMucGF0aG5hbWUgPSBhZGRMb2NhbGUocGFyc2VkQXMucGF0aG5hbWUsIG5leHRTdGF0ZS5sb2NhbGUpO1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbihwYXJzZWRBcyk7XG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMgd2FzIHByZXZpb3VzbHkgYSByZXR1cm4gYnV0IHdhcyByZW1vdmVkIGluIGZhdm9yXG4gICAgICAgICAgICAgICAgICAgIC8vIG9mIGJldHRlciBkZWFkIGNvZGUgZWxpbWluYXRpb24gd2l0aCByZWdlbmVyYXRvciBydW50aW1lXG4gICAgICAgICAgICAgICAgICAgIGRpZE5hdmlnYXRlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBkZXRlY3RlZERvbWFpbiA9IGRldGVjdERvbWFpbkxvY2FsZSh0aGlzLmRvbWFpbkxvY2FsZXMsIHVuZGVmaW5lZCwgbmV4dFN0YXRlLmxvY2FsZSk7XG4gICAgICAgICAgICAvLyB3ZSBuZWVkIHRvIHdyYXAgdGhpcyBpbiB0aGUgZW52IGNoZWNrIGFnYWluIHNpbmNlIHJlZ2VuZXJhdG9yIHJ1bnRpbWVcbiAgICAgICAgICAgIC8vIG1vdmVzIHRoaXMgb24gaXRzIG93biBkdWUgdG8gdGhlIHJldHVyblxuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9JMThOX1NVUFBPUlQpIHtcbiAgICAgICAgICAgICAgICAvLyBpZiB3ZSBhcmUgbmF2aWdhdGluZyB0byBhIGRvbWFpbiBsb2NhbGUgZW5zdXJlIHdlIHJlZGlyZWN0IHRvIHRoZVxuICAgICAgICAgICAgICAgIC8vIGNvcnJlY3QgZG9tYWluXG4gICAgICAgICAgICAgICAgaWYgKCFkaWROYXZpZ2F0ZSAmJiBkZXRlY3RlZERvbWFpbiAmJiB0aGlzLmlzTG9jYWxlRG9tYWluICYmIHNlbGYubG9jYXRpb24uaG9zdG5hbWUgIT09IGRldGVjdGVkRG9tYWluLmRvbWFpbikge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBhc05vQmFzZVBhdGggPSBkZWxCYXNlUGF0aChhcyk7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gYGh0dHAke2RldGVjdGVkRG9tYWluLmh0dHAgPyAnJyA6ICdzJ306Ly8ke2RldGVjdGVkRG9tYWluLmRvbWFpbn0ke2FkZEJhc2VQYXRoKGAke25leHRTdGF0ZS5sb2NhbGUgPT09IGRldGVjdGVkRG9tYWluLmRlZmF1bHRMb2NhbGUgPyAnJyA6IGAvJHtuZXh0U3RhdGUubG9jYWxlfWB9JHthc05vQmFzZVBhdGggPT09ICcvJyA/ICcnIDogYXNOb0Jhc2VQYXRofWAgfHwgJy8nKX1gO1xuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzIHdhcyBwcmV2aW91c2x5IGEgcmV0dXJuIGJ1dCB3YXMgcmVtb3ZlZCBpbiBmYXZvclxuICAgICAgICAgICAgICAgICAgICAvLyBvZiBiZXR0ZXIgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdpdGggcmVnZW5lcmF0b3IgcnVudGltZVxuICAgICAgICAgICAgICAgICAgICBkaWROYXZpZ2F0ZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGRpZE5hdmlnYXRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKCgpPT57fSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFvcHRpb25zLl9oKSB7XG4gICAgICAgICAgICB0aGlzLmlzU3NyID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgLy8gbWFya2luZyByb3V0ZSBjaGFuZ2VzIGFzIGEgbmF2aWdhdGlvbiBzdGFydCBlbnRyeVxuICAgICAgICBpZiAoX3V0aWxzLlNUKSB7XG4gICAgICAgICAgICBwZXJmb3JtYW5jZS5tYXJrKCdyb3V0ZUNoYW5nZScpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHsgc2hhbGxvdyA9ZmFsc2UgLCBzY3JvbGwgPXRydWUgIH0gPSBvcHRpb25zO1xuICAgICAgICBjb25zdCByb3V0ZVByb3BzID0ge1xuICAgICAgICAgICAgc2hhbGxvd1xuICAgICAgICB9O1xuICAgICAgICBpZiAodGhpcy5faW5GbGlnaHRSb3V0ZSkge1xuICAgICAgICAgICAgdGhpcy5hYm9ydENvbXBvbmVudExvYWQodGhpcy5faW5GbGlnaHRSb3V0ZSwgcm91dGVQcm9wcyk7XG4gICAgICAgIH1cbiAgICAgICAgYXMgPSBhZGRCYXNlUGF0aChhZGRMb2NhbGUoaGFzQmFzZVBhdGgoYXMpID8gZGVsQmFzZVBhdGgoYXMpIDogYXMsIG9wdGlvbnMubG9jYWxlLCB0aGlzLmRlZmF1bHRMb2NhbGUpKTtcbiAgICAgICAgY29uc3QgY2xlYW5lZEFzID0gZGVsTG9jYWxlKGhhc0Jhc2VQYXRoKGFzKSA/IGRlbEJhc2VQYXRoKGFzKSA6IGFzLCBuZXh0U3RhdGUubG9jYWxlKTtcbiAgICAgICAgdGhpcy5faW5GbGlnaHRSb3V0ZSA9IGFzO1xuICAgICAgICBsZXQgbG9jYWxlQ2hhbmdlID0gcHJldkxvY2FsZSAhPT0gbmV4dFN0YXRlLmxvY2FsZTtcbiAgICAgICAgLy8gSWYgdGhlIHVybCBjaGFuZ2UgaXMgb25seSByZWxhdGVkIHRvIGEgaGFzaCBjaGFuZ2VcbiAgICAgICAgLy8gV2Ugc2hvdWxkIG5vdCBwcm9jZWVkLiBXZSBzaG91bGQgb25seSBjaGFuZ2UgdGhlIHN0YXRlLlxuICAgICAgICAvLyBXQVJOSU5HOiBgX2hgIGlzIGFuIGludGVybmFsIG9wdGlvbiBmb3IgaGFuZGluZyBOZXh0LmpzIGNsaWVudC1zaWRlXG4gICAgICAgIC8vIGh5ZHJhdGlvbi4gWW91ciBhcHAgc2hvdWxkIF9uZXZlcl8gdXNlIHRoaXMgcHJvcGVydHkuIEl0IG1heSBjaGFuZ2UgYXRcbiAgICAgICAgLy8gYW55IHRpbWUgd2l0aG91dCBub3RpY2UuXG4gICAgICAgIGlmICghb3B0aW9ucy5faCAmJiB0aGlzLm9ubHlBSGFzaENoYW5nZShjbGVhbmVkQXMpICYmICFsb2NhbGVDaGFuZ2UpIHtcbiAgICAgICAgICAgIG5leHRTdGF0ZS5hc1BhdGggPSBjbGVhbmVkQXM7XG4gICAgICAgICAgICBSb3V0ZXIuZXZlbnRzLmVtaXQoJ2hhc2hDaGFuZ2VTdGFydCcsIGFzLCByb3V0ZVByb3BzKTtcbiAgICAgICAgICAgIC8vIFRPRE86IGRvIHdlIG5lZWQgdGhlIHJlc29sdmVkIGhyZWYgd2hlbiBvbmx5IGEgaGFzaCBjaGFuZ2U/XG4gICAgICAgICAgICB0aGlzLmNoYW5nZVN0YXRlKG1ldGhvZCwgdXJsLCBhcywge1xuICAgICAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgICAgICAgICAgc2Nyb2xsOiBmYWxzZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoc2Nyb2xsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zY3JvbGxUb0hhc2goY2xlYW5lZEFzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuc2V0KG5leHRTdGF0ZSwgdGhpcy5jb21wb25lbnRzW25leHRTdGF0ZS5yb3V0ZV0sIG51bGwpO1xuICAgICAgICAgICAgUm91dGVyLmV2ZW50cy5lbWl0KCdoYXNoQ2hhbmdlQ29tcGxldGUnLCBhcywgcm91dGVQcm9wcyk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgcGFyc2VkID0gKDAsIF9wYXJzZVJlbGF0aXZlVXJsKS5wYXJzZVJlbGF0aXZlVXJsKHVybCk7XG4gICAgICAgIGxldCB7IHBhdGhuYW1lICwgcXVlcnkgIH0gPSBwYXJzZWQ7XG4gICAgICAgIC8vIFRoZSBidWlsZCBtYW5pZmVzdCBuZWVkcyB0byBiZSBsb2FkZWQgYmVmb3JlIGF1dG8tc3RhdGljIGR5bmFtaWMgcGFnZXNcbiAgICAgICAgLy8gZ2V0IHRoZWlyIHF1ZXJ5IHBhcmFtZXRlcnMgdG8gYWxsb3cgZW5zdXJpbmcgdGhleSBjYW4gYmUgcGFyc2VkIHByb3Blcmx5XG4gICAgICAgIC8vIHdoZW4gcmV3cml0dGVuIHRvXG4gICAgICAgIGxldCBwYWdlcywgcmV3cml0ZXM7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBbcGFnZXMsIHsgX19yZXdyaXRlczogcmV3cml0ZXMgIH1dID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICAgICAgICAgIHRoaXMucGFnZUxvYWRlci5nZXRQYWdlTGlzdCgpLFxuICAgICAgICAgICAgICAgICgwLCBfcm91dGVMb2FkZXIpLmdldENsaWVudEJ1aWxkTWFuaWZlc3QoKSxcbiAgICAgICAgICAgICAgICB0aGlzLnBhZ2VMb2FkZXIuZ2V0TWlkZGxld2FyZUxpc3QoKSwgXG4gICAgICAgICAgICBdKTtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAvLyBJZiB3ZSBmYWlsIHRvIHJlc29sdmUgdGhlIHBhZ2UgbGlzdCBvciBjbGllbnQtYnVpbGQgbWFuaWZlc3QsIHdlIG11c3RcbiAgICAgICAgICAgIC8vIGRvIGEgc2VydmVyLXNpZGUgdHJhbnNpdGlvbjpcbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gYXM7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgYXNrZWQgdG8gY2hhbmdlIHRoZSBjdXJyZW50IFVSTCB3ZSBzaG91bGQgcmVsb2FkIHRoZSBjdXJyZW50IHBhZ2VcbiAgICAgICAgLy8gKG5vdCBsb2NhdGlvbi5yZWxvYWQoKSBidXQgcmVsb2FkIGdldEluaXRpYWxQcm9wcyBhbmQgb3RoZXIgTmV4dC5qcyBzdHVmZnMpXG4gICAgICAgIC8vIFdlIGFsc28gbmVlZCB0byBzZXQgdGhlIG1ldGhvZCA9IHJlcGxhY2VTdGF0ZSBhbHdheXNcbiAgICAgICAgLy8gYXMgdGhpcyBzaG91bGQgbm90IGdvIGludG8gdGhlIGhpc3RvcnkgKFRoYXQncyBob3cgYnJvd3NlcnMgd29yaylcbiAgICAgICAgLy8gV2Ugc2hvdWxkIGNvbXBhcmUgdGhlIG5ldyBhc1BhdGggdG8gdGhlIGN1cnJlbnQgYXNQYXRoLCBub3QgdGhlIHVybFxuICAgICAgICBpZiAoIXRoaXMudXJsSXNOZXcoY2xlYW5lZEFzKSAmJiAhbG9jYWxlQ2hhbmdlKSB7XG4gICAgICAgICAgICBtZXRob2QgPSAncmVwbGFjZVN0YXRlJztcbiAgICAgICAgfVxuICAgICAgICAvLyB3ZSBuZWVkIHRvIHJlc29sdmUgdGhlIGFzIHZhbHVlIHVzaW5nIHJld3JpdGVzIGZvciBkeW5hbWljIFNTR1xuICAgICAgICAvLyBwYWdlcyB0byBhbGxvdyBidWlsZGluZyB0aGUgZGF0YSBVUkwgY29ycmVjdGx5XG4gICAgICAgIGxldCByZXNvbHZlZEFzID0gYXM7XG4gICAgICAgIC8vIHVybCBhbmQgYXMgc2hvdWxkIGFsd2F5cyBiZSBwcmVmaXhlZCB3aXRoIGJhc2VQYXRoIGJ5IHRoaXNcbiAgICAgICAgLy8gcG9pbnQgYnkgZWl0aGVyIG5leHQvbGluayBvciByb3V0ZXIucHVzaC9yZXBsYWNlIHNvIHN0cmlwIHRoZVxuICAgICAgICAvLyBiYXNlUGF0aCBmcm9tIHRoZSBwYXRobmFtZSB0byBtYXRjaCB0aGUgcGFnZXMgZGlyIDEtdG8tMVxuICAgICAgICBwYXRobmFtZSA9IHBhdGhuYW1lID8gKDAsIF9ub3JtYWxpemVUcmFpbGluZ1NsYXNoKS5yZW1vdmVQYXRoVHJhaWxpbmdTbGFzaChkZWxCYXNlUGF0aChwYXRobmFtZSkpIDogcGF0aG5hbWU7XG4gICAgICAgIGlmIChzaG91bGRSZXNvbHZlSHJlZiAmJiBwYXRobmFtZSAhPT0gJy9fZXJyb3InKSB7XG4gICAgICAgICAgICBvcHRpb25zLl9zaG91bGRSZXNvbHZlSHJlZiA9IHRydWU7XG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0hBU19SRVdSSVRFUyAmJiBhcy5zdGFydHNXaXRoKCcvJykpIHtcbiAgICAgICAgICAgICAgICBjb25zdCByZXdyaXRlc1Jlc3VsdCA9ICgwLCBfcmVzb2x2ZVJld3JpdGVzKS5kZWZhdWx0KGFkZEJhc2VQYXRoKGFkZExvY2FsZShjbGVhbmVkQXMsIG5leHRTdGF0ZS5sb2NhbGUpKSwgcGFnZXMsIHJld3JpdGVzLCBxdWVyeSwgKHApPT5yZXNvbHZlRHluYW1pY1JvdXRlKHAsIHBhZ2VzKVxuICAgICAgICAgICAgICAgICwgdGhpcy5sb2NhbGVzKTtcbiAgICAgICAgICAgICAgICBpZiAocmV3cml0ZXNSZXN1bHQuZXh0ZXJuYWxEZXN0KSB7XG4gICAgICAgICAgICAgICAgICAgIGxvY2F0aW9uLmhyZWYgPSBhcztcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJlc29sdmVkQXMgPSByZXdyaXRlc1Jlc3VsdC5hc1BhdGg7XG4gICAgICAgICAgICAgICAgaWYgKHJld3JpdGVzUmVzdWx0Lm1hdGNoZWRQYWdlICYmIHJld3JpdGVzUmVzdWx0LnJlc29sdmVkSHJlZikge1xuICAgICAgICAgICAgICAgICAgICAvLyBpZiB0aGlzIGRpcmVjdGx5IG1hdGNoZXMgYSBwYWdlIHdlIG5lZWQgdG8gdXBkYXRlIHRoZSBocmVmIHRvXG4gICAgICAgICAgICAgICAgICAgIC8vIGFsbG93IHRoZSBjb3JyZWN0IHBhZ2UgY2h1bmsgdG8gYmUgbG9hZGVkXG4gICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lID0gcmV3cml0ZXNSZXN1bHQucmVzb2x2ZWRIcmVmO1xuICAgICAgICAgICAgICAgICAgICBwYXJzZWQucGF0aG5hbWUgPSBhZGRCYXNlUGF0aChwYXRobmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIHVybCA9ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbihwYXJzZWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgcGFyc2VkLnBhdGhuYW1lID0gcmVzb2x2ZUR5bmFtaWNSb3V0ZShwYXRobmFtZSwgcGFnZXMpO1xuICAgICAgICAgICAgICAgIGlmIChwYXJzZWQucGF0aG5hbWUgIT09IHBhdGhuYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lID0gcGFyc2VkLnBhdGhuYW1lO1xuICAgICAgICAgICAgICAgICAgICBwYXJzZWQucGF0aG5hbWUgPSBhZGRCYXNlUGF0aChwYXRobmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIHVybCA9ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbihwYXJzZWQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoIWlzTG9jYWxVUkwoYXMpKSB7XG4gICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBocmVmOiBcIiR7dXJsfVwiIGFuZCBhczogXCIke2FzfVwiLCByZWNlaXZlZCByZWxhdGl2ZSBocmVmIGFuZCBleHRlcm5hbCBhc2AgKyBgXFxuU2VlIG1vcmUgaW5mbzogaHR0cHM6Ly9uZXh0anMub3JnL2RvY3MvbWVzc2FnZXMvaW52YWxpZC1yZWxhdGl2ZS11cmwtZXh0ZXJuYWwtYXNgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gYXM7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmVzb2x2ZWRBcyA9IGRlbExvY2FsZShkZWxCYXNlUGF0aChyZXNvbHZlZEFzKSwgbmV4dFN0YXRlLmxvY2FsZSk7XG4gICAgICAgIC8qKlxuICAgICAqIElmIHRoZSByb3V0ZSB1cGRhdGUgd2FzIHRyaWdnZXJlZCBmb3IgY2xpZW50LXNpZGUgaHlkcmF0aW9uIGFuZFxuICAgICAqIHRoZSByZW5kZXJlZCByb3V0ZSBpcyBub3QgZHluYW1pYyBkbyBub3QgY2hlY2sgdGhlIHByZWZsaWdodFxuICAgICAqIHJlcXVlc3QgYXMgaXQgaXMgbm90IG5lY2Vzc2FyeS5cbiAgICAgKi8gaWYgKCghb3B0aW9ucy5zaGFsbG93IHx8IG9wdGlvbnMuX2ggPT09IDEpICYmIChvcHRpb25zLl9oICE9PSAxIHx8ICgwLCBfaXNEeW5hbWljKS5pc0R5bmFtaWNSb3V0ZSgoMCwgX25vcm1hbGl6ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVBhdGhUcmFpbGluZ1NsYXNoKHBhdGhuYW1lKSkpKSB7XG4gICAgICAgICAgICBjb25zdCBlZmZlY3QgPSBhd2FpdCB0aGlzLl9wcmVmbGlnaHRSZXF1ZXN0KHtcbiAgICAgICAgICAgICAgICBhcyxcbiAgICAgICAgICAgICAgICBjYWNoZTogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyxcbiAgICAgICAgICAgICAgICBwYWdlcyxcbiAgICAgICAgICAgICAgICBwYXRobmFtZSxcbiAgICAgICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgICAgICBsb2NhbGU6IG5leHRTdGF0ZS5sb2NhbGUsXG4gICAgICAgICAgICAgICAgaXNQcmV2aWV3OiBuZXh0U3RhdGUuaXNQcmV2aWV3XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmIChlZmZlY3QudHlwZSA9PT0gJ3Jld3JpdGUnKSB7XG4gICAgICAgICAgICAgICAgcXVlcnkgPSB7XG4gICAgICAgICAgICAgICAgICAgIC4uLnF1ZXJ5LFxuICAgICAgICAgICAgICAgICAgICAuLi5lZmZlY3QucGFyc2VkQXMucXVlcnlcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIHJlc29sdmVkQXMgPSBlZmZlY3QuYXNQYXRoO1xuICAgICAgICAgICAgICAgIHBhdGhuYW1lID0gZWZmZWN0LnJlc29sdmVkSHJlZjtcbiAgICAgICAgICAgICAgICBwYXJzZWQucGF0aG5hbWUgPSBlZmZlY3QucmVzb2x2ZWRIcmVmO1xuICAgICAgICAgICAgICAgIHVybCA9ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbihwYXJzZWQpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChlZmZlY3QudHlwZSA9PT0gJ3JlZGlyZWN0JyAmJiBlZmZlY3QubmV3QXMpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jaGFuZ2UobWV0aG9kLCBlZmZlY3QubmV3VXJsLCBlZmZlY3QubmV3QXMsIG9wdGlvbnMpO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChlZmZlY3QudHlwZSA9PT0gJ3JlZGlyZWN0JyAmJiBlZmZlY3QuZGVzdGluYXRpb24pIHtcbiAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGVmZmVjdC5kZXN0aW5hdGlvbjtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKCk9Pnt9KTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoZWZmZWN0LnR5cGUgPT09ICdyZWZyZXNoJyAmJiBhcyAhPT0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lKSB7XG4gICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSBhcztcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKCk9Pnt9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCByb3V0ZSA9ICgwLCBfbm9ybWFsaXplVHJhaWxpbmdTbGFzaCkucmVtb3ZlUGF0aFRyYWlsaW5nU2xhc2gocGF0aG5hbWUpO1xuICAgICAgICBpZiAoKDAsIF9pc0R5bmFtaWMpLmlzRHluYW1pY1JvdXRlKHJvdXRlKSkge1xuICAgICAgICAgICAgY29uc3QgcGFyc2VkQXMgPSAoMCwgX3BhcnNlUmVsYXRpdmVVcmwpLnBhcnNlUmVsYXRpdmVVcmwocmVzb2x2ZWRBcyk7XG4gICAgICAgICAgICBjb25zdCBhc1BhdGhuYW1lID0gcGFyc2VkQXMucGF0aG5hbWU7XG4gICAgICAgICAgICBjb25zdCByb3V0ZVJlZ2V4ID0gKDAsIF9yb3V0ZVJlZ2V4KS5nZXRSb3V0ZVJlZ2V4KHJvdXRlKTtcbiAgICAgICAgICAgIGNvbnN0IHJvdXRlTWF0Y2ggPSAoMCwgX3JvdXRlTWF0Y2hlcikuZ2V0Um91dGVNYXRjaGVyKHJvdXRlUmVnZXgpKGFzUGF0aG5hbWUpO1xuICAgICAgICAgICAgY29uc3Qgc2hvdWxkSW50ZXJwb2xhdGUgPSByb3V0ZSA9PT0gYXNQYXRobmFtZTtcbiAgICAgICAgICAgIGNvbnN0IGludGVycG9sYXRlZEFzID0gc2hvdWxkSW50ZXJwb2xhdGUgPyBpbnRlcnBvbGF0ZUFzKHJvdXRlLCBhc1BhdGhuYW1lLCBxdWVyeSkgOiB7fTtcbiAgICAgICAgICAgIGlmICghcm91dGVNYXRjaCB8fCBzaG91bGRJbnRlcnBvbGF0ZSAmJiAhaW50ZXJwb2xhdGVkQXMucmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbWlzc2luZ1BhcmFtcyA9IE9iamVjdC5rZXlzKHJvdXRlUmVnZXguZ3JvdXBzKS5maWx0ZXIoKHBhcmFtKT0+IXF1ZXJ5W3BhcmFtXVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgaWYgKG1pc3NpbmdQYXJhbXMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKGAke3Nob3VsZEludGVycG9sYXRlID8gYEludGVycG9sYXRpbmcgaHJlZmAgOiBgTWlzbWF0Y2hpbmcgXFxgYXNcXGAgYW5kIFxcYGhyZWZcXGBgfSBmYWlsZWQgdG8gbWFudWFsbHkgcHJvdmlkZSBgICsgYHRoZSBwYXJhbXM6ICR7bWlzc2luZ1BhcmFtcy5qb2luKCcsICcpfSBpbiB0aGUgXFxgaHJlZlxcYCdzIFxcYHF1ZXJ5XFxgYCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKChzaG91bGRJbnRlcnBvbGF0ZSA/IGBUaGUgcHJvdmlkZWQgXFxgaHJlZlxcYCAoJHt1cmx9KSB2YWx1ZSBpcyBtaXNzaW5nIHF1ZXJ5IHZhbHVlcyAoJHttaXNzaW5nUGFyYW1zLmpvaW4oJywgJyl9KSB0byBiZSBpbnRlcnBvbGF0ZWQgcHJvcGVybHkuIGAgOiBgVGhlIHByb3ZpZGVkIFxcYGFzXFxgIHZhbHVlICgke2FzUGF0aG5hbWV9KSBpcyBpbmNvbXBhdGlibGUgd2l0aCB0aGUgXFxgaHJlZlxcYCB2YWx1ZSAoJHtyb3V0ZX0pLiBgKSArIGBSZWFkIG1vcmU6IGh0dHBzOi8vbmV4dGpzLm9yZy9kb2NzL21lc3NhZ2VzLyR7c2hvdWxkSW50ZXJwb2xhdGUgPyAnaHJlZi1pbnRlcnBvbGF0aW9uLWZhaWxlZCcgOiAnaW5jb21wYXRpYmxlLWhyZWYtYXMnfWApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoc2hvdWxkSW50ZXJwb2xhdGUpIHtcbiAgICAgICAgICAgICAgICBhcyA9ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbihPYmplY3QuYXNzaWduKHt9LCBwYXJzZWRBcywge1xuICAgICAgICAgICAgICAgICAgICBwYXRobmFtZTogaW50ZXJwb2xhdGVkQXMucmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBxdWVyeTogb21pdFBhcm1zRnJvbVF1ZXJ5KHF1ZXJ5LCBpbnRlcnBvbGF0ZWRBcy5wYXJhbXMpXG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBNZXJnZSBwYXJhbXMgaW50byBgcXVlcnlgLCBvdmVyd3JpdGluZyBhbnkgc3BlY2lmaWVkIGluIHNlYXJjaFxuICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ocXVlcnksIHJvdXRlTWF0Y2gpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIFJvdXRlci5ldmVudHMuZW1pdCgncm91dGVDaGFuZ2VTdGFydCcsIGFzLCByb3V0ZVByb3BzKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHZhciByZWYxLCByZWYyO1xuICAgICAgICAgICAgbGV0IHJvdXRlSW5mbyA9IGF3YWl0IHRoaXMuZ2V0Um91dGVJbmZvKHJvdXRlLCBwYXRobmFtZSwgcXVlcnksIGFzLCByZXNvbHZlZEFzLCByb3V0ZVByb3BzLCBuZXh0U3RhdGUubG9jYWxlLCBuZXh0U3RhdGUuaXNQcmV2aWV3KTtcbiAgICAgICAgICAgIGxldCB7IGVycm9yICwgcHJvcHMgLCBfX05fU1NHICwgX19OX1NTUCAgfSA9IHJvdXRlSW5mbztcbiAgICAgICAgICAgIC8vIGhhbmRsZSByZWRpcmVjdCBvbiBjbGllbnQtdHJhbnNpdGlvblxuICAgICAgICAgICAgaWYgKChfX05fU1NHIHx8IF9fTl9TU1ApICYmIHByb3BzKSB7XG4gICAgICAgICAgICAgICAgaWYgKHByb3BzLnBhZ2VQcm9wcyAmJiBwcm9wcy5wYWdlUHJvcHMuX19OX1JFRElSRUNUKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlc3RpbmF0aW9uID0gcHJvcHMucGFnZVByb3BzLl9fTl9SRURJUkVDVDtcbiAgICAgICAgICAgICAgICAgICAgLy8gY2hlY2sgaWYgZGVzdGluYXRpb24gaXMgaW50ZXJuYWwgKHJlc29sdmVzIHRvIGEgcGFnZSkgYW5kIGF0dGVtcHRcbiAgICAgICAgICAgICAgICAgICAgLy8gY2xpZW50LW5hdmlnYXRpb24gaWYgaXQgaXMgZmFsbGluZyBiYWNrIHRvIGhhcmQgbmF2aWdhdGlvbiBpZlxuICAgICAgICAgICAgICAgICAgICAvLyBpdCdzIG5vdFxuICAgICAgICAgICAgICAgICAgICBpZiAoZGVzdGluYXRpb24uc3RhcnRzV2l0aCgnLycpICYmIHByb3BzLnBhZ2VQcm9wcy5fX05fUkVESVJFQ1RfQkFTRV9QQVRIICE9PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcGFyc2VkSHJlZiA9ICgwLCBfcGFyc2VSZWxhdGl2ZVVybCkucGFyc2VSZWxhdGl2ZVVybChkZXN0aW5hdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJzZWRIcmVmLnBhdGhuYW1lID0gcmVzb2x2ZUR5bmFtaWNSb3V0ZShwYXJzZWRIcmVmLnBhdGhuYW1lLCBwYWdlcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB7IHVybDogbmV3VXJsICwgYXM6IG5ld0FzICB9ID0gcHJlcGFyZVVybEFzKHRoaXMsIGRlc3RpbmF0aW9uLCBkZXN0aW5hdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jaGFuZ2UobWV0aG9kLCBuZXdVcmwsIG5ld0FzLCBvcHRpb25zKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGRlc3RpbmF0aW9uO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKCk9Pnt9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbmV4dFN0YXRlLmlzUHJldmlldyA9ICEhcHJvcHMuX19OX1BSRVZJRVc7XG4gICAgICAgICAgICAgICAgLy8gaGFuZGxlIFNTRyBkYXRhIDQwNFxuICAgICAgICAgICAgICAgIGlmIChwcm9wcy5ub3RGb3VuZCA9PT0gU1NHX0RBVEFfTk9UX0ZPVU5EKSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBub3RGb3VuZFJvdXRlO1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgdGhpcy5mZXRjaENvbXBvbmVudCgnLzQwNCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbm90Rm91bmRSb3V0ZSA9ICcvNDA0JztcbiAgICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoXykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbm90Rm91bmRSb3V0ZSA9ICcvX2Vycm9yJztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByb3V0ZUluZm8gPSBhd2FpdCB0aGlzLmdldFJvdXRlSW5mbyhub3RGb3VuZFJvdXRlLCBub3RGb3VuZFJvdXRlLCBxdWVyeSwgYXMsIHJlc29sdmVkQXMsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNoYWxsb3c6IGZhbHNlXG4gICAgICAgICAgICAgICAgICAgIH0sIG5leHRTdGF0ZS5sb2NhbGUsIG5leHRTdGF0ZS5pc1ByZXZpZXcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFJvdXRlci5ldmVudHMuZW1pdCgnYmVmb3JlSGlzdG9yeUNoYW5nZScsIGFzLCByb3V0ZVByb3BzKTtcbiAgICAgICAgICAgIHRoaXMuY2hhbmdlU3RhdGUobWV0aG9kLCB1cmwsIGFzLCBvcHRpb25zKTtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLl9oICYmIHBhdGhuYW1lID09PSAnL19lcnJvcicgJiYgKChyZWYxID0gc2VsZi5fX05FWFRfREFUQV9fLnByb3BzKSA9PT0gbnVsbCB8fCByZWYxID09PSB2b2lkIDAgPyB2b2lkIDAgOiAocmVmMiA9IHJlZjEucGFnZVByb3BzKSA9PT0gbnVsbCB8fCByZWYyID09PSB2b2lkIDAgPyB2b2lkIDAgOiByZWYyLnN0YXR1c0NvZGUpID09PSA1MDAgJiYgKHByb3BzID09PSBudWxsIHx8IHByb3BzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBwcm9wcy5wYWdlUHJvcHMpKSB7XG4gICAgICAgICAgICAgICAgLy8gZW5zdXJlIHN0YXR1c0NvZGUgaXMgc3RpbGwgY29ycmVjdCBmb3Igc3RhdGljIDUwMCBwYWdlXG4gICAgICAgICAgICAgICAgLy8gd2hlbiB1cGRhdGluZyBxdWVyeSBpbmZvcm1hdGlvblxuICAgICAgICAgICAgICAgIHByb3BzLnBhZ2VQcm9wcy5zdGF0dXNDb2RlID0gNTAwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gc2hhbGxvdyByb3V0aW5nIGlzIG9ubHkgYWxsb3dlZCBmb3Igc2FtZSBwYWdlIFVSTCBjaGFuZ2VzLlxuICAgICAgICAgICAgY29uc3QgaXNWYWxpZFNoYWxsb3dSb3V0ZSA9IG9wdGlvbnMuc2hhbGxvdyAmJiBuZXh0U3RhdGUucm91dGUgPT09IHJvdXRlO1xuICAgICAgICAgICAgdmFyIF9zY3JvbGw7XG4gICAgICAgICAgICBjb25zdCBzaG91bGRTY3JvbGwgPSAoX3Njcm9sbCA9IG9wdGlvbnMuc2Nyb2xsKSAhPT0gbnVsbCAmJiBfc2Nyb2xsICE9PSB2b2lkIDAgPyBfc2Nyb2xsIDogIWlzVmFsaWRTaGFsbG93Um91dGU7XG4gICAgICAgICAgICBjb25zdCByZXNldFNjcm9sbCA9IHNob3VsZFNjcm9sbCA/IHtcbiAgICAgICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgICAgIHk6IDBcbiAgICAgICAgICAgIH0gOiBudWxsO1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5zZXQoe1xuICAgICAgICAgICAgICAgIC4uLm5leHRTdGF0ZSxcbiAgICAgICAgICAgICAgICByb3V0ZSxcbiAgICAgICAgICAgICAgICBwYXRobmFtZSxcbiAgICAgICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgICAgICBhc1BhdGg6IGNsZWFuZWRBcyxcbiAgICAgICAgICAgICAgICBpc0ZhbGxiYWNrOiBmYWxzZVxuICAgICAgICAgICAgfSwgcm91dGVJbmZvLCBmb3JjZWRTY3JvbGwgIT09IG51bGwgJiYgZm9yY2VkU2Nyb2xsICE9PSB2b2lkIDAgPyBmb3JjZWRTY3JvbGwgOiByZXNldFNjcm9sbCkuY2F0Y2goKGUpPT57XG4gICAgICAgICAgICAgICAgaWYgKGUuY2FuY2VsbGVkKSBlcnJvciA9IGVycm9yIHx8IGU7XG4gICAgICAgICAgICAgICAgZWxzZSB0aHJvdyBlO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBSb3V0ZXIuZXZlbnRzLmVtaXQoJ3JvdXRlQ2hhbmdlRXJyb3InLCBlcnJvciwgY2xlYW5lZEFzLCByb3V0ZVByb3BzKTtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5fX05FWFRfSTE4Tl9TVVBQT1JUKSB7XG4gICAgICAgICAgICAgICAgaWYgKG5leHRTdGF0ZS5sb2NhbGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmxhbmcgPSBuZXh0U3RhdGUubG9jYWxlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFJvdXRlci5ldmVudHMuZW1pdCgncm91dGVDaGFuZ2VDb21wbGV0ZScsIGFzLCByb3V0ZVByb3BzKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9IGNhdGNoIChlcnIxKSB7XG4gICAgICAgICAgICBpZiAoKDAsIF9pc0Vycm9yKS5kZWZhdWx0KGVycjEpICYmIGVycjEuY2FuY2VsbGVkKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgZXJyMTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjaGFuZ2VTdGF0ZShtZXRob2QsIHVybCwgYXMsIG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB3aW5kb3cuaGlzdG9yeSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGBXYXJuaW5nOiB3aW5kb3cuaGlzdG9yeSBpcyBub3QgYXZhaWxhYmxlLmApO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlb2Ygd2luZG93Lmhpc3RvcnlbbWV0aG9kXSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGBXYXJuaW5nOiB3aW5kb3cuaGlzdG9yeS4ke21ldGhvZH0gaXMgbm90IGF2YWlsYWJsZWApO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAobWV0aG9kICE9PSAncHVzaFN0YXRlJyB8fCAoMCwgX3V0aWxzKS5nZXRVUkwoKSAhPT0gYXMpIHtcbiAgICAgICAgICAgIHRoaXMuX3NoYWxsb3cgPSBvcHRpb25zLnNoYWxsb3c7XG4gICAgICAgICAgICB3aW5kb3cuaGlzdG9yeVttZXRob2RdKHtcbiAgICAgICAgICAgICAgICB1cmwsXG4gICAgICAgICAgICAgICAgYXMsXG4gICAgICAgICAgICAgICAgb3B0aW9ucyxcbiAgICAgICAgICAgICAgICBfX046IHRydWUsXG4gICAgICAgICAgICAgICAgaWR4OiB0aGlzLl9pZHggPSBtZXRob2QgIT09ICdwdXNoU3RhdGUnID8gdGhpcy5faWR4IDogdGhpcy5faWR4ICsgMVxuICAgICAgICAgICAgfSwgLy8gTW9zdCBicm93c2VycyBjdXJyZW50bHkgaWdub3JlcyB0aGlzIHBhcmFtZXRlciwgYWx0aG91Z2ggdGhleSBtYXkgdXNlIGl0IGluIHRoZSBmdXR1cmUuXG4gICAgICAgICAgICAvLyBQYXNzaW5nIHRoZSBlbXB0eSBzdHJpbmcgaGVyZSBzaG91bGQgYmUgc2FmZSBhZ2FpbnN0IGZ1dHVyZSBjaGFuZ2VzIHRvIHRoZSBtZXRob2QuXG4gICAgICAgICAgICAvLyBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvSGlzdG9yeS9yZXBsYWNlU3RhdGVcbiAgICAgICAgICAgICcnLCBhcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgaGFuZGxlUm91dGVJbmZvRXJyb3IoZXJyLCBwYXRobmFtZSwgcXVlcnksIGFzLCByb3V0ZVByb3BzLCBsb2FkRXJyb3JGYWlsKSB7XG4gICAgICAgIGlmIChlcnIuY2FuY2VsbGVkKSB7XG4gICAgICAgICAgICAvLyBidWJibGUgdXAgY2FuY2VsbGF0aW9uIGVycm9yc1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9XG4gICAgICAgIGlmICgoMCwgX3JvdXRlTG9hZGVyKS5pc0Fzc2V0RXJyb3IoZXJyKSB8fCBsb2FkRXJyb3JGYWlsKSB7XG4gICAgICAgICAgICBSb3V0ZXIuZXZlbnRzLmVtaXQoJ3JvdXRlQ2hhbmdlRXJyb3InLCBlcnIsIGFzLCByb3V0ZVByb3BzKTtcbiAgICAgICAgICAgIC8vIElmIHdlIGNhbid0IGxvYWQgdGhlIHBhZ2UgaXQgY291bGQgYmUgb25lIG9mIGZvbGxvd2luZyByZWFzb25zXG4gICAgICAgICAgICAvLyAgMS4gUGFnZSBkb2Vzbid0IGV4aXN0c1xuICAgICAgICAgICAgLy8gIDIuIFBhZ2UgZG9lcyBleGlzdCBpbiBhIGRpZmZlcmVudCB6b25lXG4gICAgICAgICAgICAvLyAgMy4gSW50ZXJuYWwgZXJyb3Igd2hpbGUgbG9hZGluZyB0aGUgcGFnZVxuICAgICAgICAgICAgLy8gU28sIGRvaW5nIGEgaGFyZCByZWxvYWQgaXMgdGhlIHByb3BlciB3YXkgdG8gZGVhbCB3aXRoIHRoaXMuXG4gICAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGFzO1xuICAgICAgICAgICAgLy8gQ2hhbmdpbmcgdGhlIFVSTCBkb2Vzbid0IGJsb2NrIGV4ZWN1dGluZyB0aGUgY3VycmVudCBjb2RlIHBhdGguXG4gICAgICAgICAgICAvLyBTbyBsZXQncyB0aHJvdyBhIGNhbmNlbGxhdGlvbiBlcnJvciBzdG9wIHRoZSByb3V0aW5nIGxvZ2ljLlxuICAgICAgICAgICAgdGhyb3cgYnVpbGRDYW5jZWxsYXRpb25FcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBsZXQgQ29tcG9uZW50O1xuICAgICAgICAgICAgbGV0IHN0eWxlU2hlZXRzO1xuICAgICAgICAgICAgbGV0IHByb3BzO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBDb21wb25lbnQgPT09ICd1bmRlZmluZWQnIHx8IHR5cGVvZiBzdHlsZVNoZWV0cyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAoeyBwYWdlOiBDb21wb25lbnQgLCBzdHlsZVNoZWV0cyAgfSA9IGF3YWl0IHRoaXMuZmV0Y2hDb21wb25lbnQoJy9fZXJyb3InKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCByb3V0ZUluZm8gPSB7XG4gICAgICAgICAgICAgICAgcHJvcHMsXG4gICAgICAgICAgICAgICAgQ29tcG9uZW50LFxuICAgICAgICAgICAgICAgIHN0eWxlU2hlZXRzLFxuICAgICAgICAgICAgICAgIGVycixcbiAgICAgICAgICAgICAgICBlcnJvcjogZXJyXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKCFyb3V0ZUluZm8ucHJvcHMpIHtcbiAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICByb3V0ZUluZm8ucHJvcHMgPSBhd2FpdCB0aGlzLmdldEluaXRpYWxQcm9wcyhDb21wb25lbnQsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycixcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGhuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgcXVlcnlcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSBjYXRjaCAoZ2lwRXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluIGVycm9yIHBhZ2UgYGdldEluaXRpYWxQcm9wc2A6ICcsIGdpcEVycik7XG4gICAgICAgICAgICAgICAgICAgIHJvdXRlSW5mby5wcm9wcyA9IHt9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiByb3V0ZUluZm87XG4gICAgICAgIH0gY2F0Y2ggKHJvdXRlSW5mb0Vycikge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaGFuZGxlUm91dGVJbmZvRXJyb3IoKDAsIF9pc0Vycm9yKS5kZWZhdWx0KHJvdXRlSW5mb0VycikgPyByb3V0ZUluZm9FcnIgOiBuZXcgRXJyb3Iocm91dGVJbmZvRXJyICsgJycpLCBwYXRobmFtZSwgcXVlcnksIGFzLCByb3V0ZVByb3BzLCB0cnVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhc3luYyBnZXRSb3V0ZUluZm8ocm91dGUsIHBhdGhuYW1lLCBxdWVyeSwgYXMsIHJlc29sdmVkQXMsIHJvdXRlUHJvcHMsIGxvY2FsZSwgaXNQcmV2aWV3KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBleGlzdGluZ1JvdXRlSW5mbyA9IHRoaXMuY29tcG9uZW50c1tyb3V0ZV07XG4gICAgICAgICAgICBpZiAocm91dGVQcm9wcy5zaGFsbG93ICYmIGV4aXN0aW5nUm91dGVJbmZvICYmIHRoaXMucm91dGUgPT09IHJvdXRlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGV4aXN0aW5nUm91dGVJbmZvO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGV0IGNhY2hlZFJvdXRlSW5mbyA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIC8vIGNhbiBvbmx5IHVzZSBub24taW5pdGlhbCByb3V0ZSBpbmZvXG4gICAgICAgICAgICAvLyBjYW5ub3QgcmV1c2Ugcm91dGUgaW5mbyBpbiBkZXZlbG9wbWVudCBzaW5jZSBpdCBjYW4gY2hhbmdlIGFmdGVyIEhNUlxuICAgICAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAnZGV2ZWxvcG1lbnQnICYmIGV4aXN0aW5nUm91dGVJbmZvICYmICEoJ2luaXRpYWwnIGluIGV4aXN0aW5nUm91dGVJbmZvKSkge1xuICAgICAgICAgICAgICAgIGNhY2hlZFJvdXRlSW5mbyA9IGV4aXN0aW5nUm91dGVJbmZvO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgcm91dGVJbmZvID0gY2FjaGVkUm91dGVJbmZvIHx8IGF3YWl0IHRoaXMuZmV0Y2hDb21wb25lbnQocm91dGUpLnRoZW4oKHJlcyk9Pih7XG4gICAgICAgICAgICAgICAgICAgIENvbXBvbmVudDogcmVzLnBhZ2UsXG4gICAgICAgICAgICAgICAgICAgIHN0eWxlU2hlZXRzOiByZXMuc3R5bGVTaGVldHMsXG4gICAgICAgICAgICAgICAgICAgIF9fTl9TU0c6IHJlcy5tb2QuX19OX1NTRyxcbiAgICAgICAgICAgICAgICAgICAgX19OX1NTUDogcmVzLm1vZC5fX05fU1NQLFxuICAgICAgICAgICAgICAgICAgICBfX05fUlNDOiAhIXJlcy5tb2QuX19uZXh0X3JzY19fXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgICBjb25zdCB7IENvbXBvbmVudCAsIF9fTl9TU0cgLCBfX05fU1NQICwgX19OX1JTQyAgfSA9IHJvdXRlSW5mbztcbiAgICAgICAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBpc1ZhbGlkRWxlbWVudFR5cGUgIH0gPSByZXF1aXJlKCduZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QtaXMnKTtcbiAgICAgICAgICAgICAgICBpZiAoIWlzVmFsaWRFbGVtZW50VHlwZShDb21wb25lbnQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVGhlIGRlZmF1bHQgZXhwb3J0IGlzIG5vdCBhIFJlYWN0IENvbXBvbmVudCBpbiBwYWdlOiBcIiR7cGF0aG5hbWV9XCJgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsZXQgZGF0YUhyZWY7XG4gICAgICAgICAgICBpZiAoX19OX1NTRyB8fCBfX05fU1NQIHx8IF9fTl9SU0MpIHtcbiAgICAgICAgICAgICAgICBkYXRhSHJlZiA9IHRoaXMucGFnZUxvYWRlci5nZXREYXRhSHJlZih7XG4gICAgICAgICAgICAgICAgICAgIGhyZWY6ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbih7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYXRobmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5XG4gICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICBhc1BhdGg6IHJlc29sdmVkQXMsXG4gICAgICAgICAgICAgICAgICAgIHNzZzogX19OX1NTRyxcbiAgICAgICAgICAgICAgICAgICAgcnNjOiBfX05fUlNDLFxuICAgICAgICAgICAgICAgICAgICBsb2NhbGVcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHByb3BzID0gYXdhaXQgdGhpcy5fZ2V0RGF0YSgoKT0+X19OX1NTRyB8fCBfX05fU1NQID8gZmV0Y2hOZXh0RGF0YShkYXRhSHJlZiwgdGhpcy5pc1NzciwgZmFsc2UsIF9fTl9TU0cgPyB0aGlzLnNkYyA6IHRoaXMuc2RyLCAhIV9fTl9TU0cgJiYgIWlzUHJldmlldykgOiB0aGlzLmdldEluaXRpYWxQcm9wcyhDb21wb25lbnQsIC8vIHdlIHByb3ZpZGUgQXBwVHJlZSBsYXRlciBzbyB0aGlzIG5lZWRzIHRvIGJlIGBhbnlgXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBwYXRobmFtZSxcbiAgICAgICAgICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICAgICAgICAgIGFzUGF0aDogYXMsXG4gICAgICAgICAgICAgICAgICAgIGxvY2FsZSxcbiAgICAgICAgICAgICAgICAgICAgbG9jYWxlczogdGhpcy5sb2NhbGVzLFxuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0TG9jYWxlOiB0aGlzLmRlZmF1bHRMb2NhbGVcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIGlmIChfX05fUlNDKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBmcmVzaCAsIGRhdGEgIH0gPSBhd2FpdCB0aGlzLl9nZXREYXRhKCgpPT50aGlzLl9nZXRGbGlnaHREYXRhKGRhdGFIcmVmKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgcHJvcHMucGFnZVByb3BzID0gT2JqZWN0LmFzc2lnbihwcm9wcy5wYWdlUHJvcHMsIHtcbiAgICAgICAgICAgICAgICAgICAgX19mbGlnaHRfc2VyaWFsaXplZF9fOiBkYXRhLFxuICAgICAgICAgICAgICAgICAgICBfX2ZsaWdodF9mcmVzaF9fOiBmcmVzaFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcm91dGVJbmZvLnByb3BzID0gcHJvcHM7XG4gICAgICAgICAgICB0aGlzLmNvbXBvbmVudHNbcm91dGVdID0gcm91dGVJbmZvO1xuICAgICAgICAgICAgcmV0dXJuIHJvdXRlSW5mbztcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5oYW5kbGVSb3V0ZUluZm9FcnJvcigoMCwgX2lzRXJyb3IpLmdldFByb3BlckVycm9yKGVyciksIHBhdGhuYW1lLCBxdWVyeSwgYXMsIHJvdXRlUHJvcHMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHNldChzdGF0ZSwgZGF0YSwgcmVzZXRTY3JvbGwpIHtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHN0YXRlO1xuICAgICAgICByZXR1cm4gdGhpcy5zdWIoZGF0YSwgdGhpcy5jb21wb25lbnRzWycvX2FwcCddLkNvbXBvbmVudCwgcmVzZXRTY3JvbGwpO1xuICAgIH1cbiAgICAvKipcbiAgICogQ2FsbGJhY2sgdG8gZXhlY3V0ZSBiZWZvcmUgcmVwbGFjaW5nIHJvdXRlciBzdGF0ZVxuICAgKiBAcGFyYW0gY2IgY2FsbGJhY2sgdG8gYmUgZXhlY3V0ZWRcbiAgICovIGJlZm9yZVBvcFN0YXRlKGNiKSB7XG4gICAgICAgIHRoaXMuX2JwcyA9IGNiO1xuICAgIH1cbiAgICBvbmx5QUhhc2hDaGFuZ2UoYXMpIHtcbiAgICAgICAgaWYgKCF0aGlzLmFzUGF0aCkgcmV0dXJuIGZhbHNlO1xuICAgICAgICBjb25zdCBbb2xkVXJsTm9IYXNoLCBvbGRIYXNoXSA9IHRoaXMuYXNQYXRoLnNwbGl0KCcjJyk7XG4gICAgICAgIGNvbnN0IFtuZXdVcmxOb0hhc2gsIG5ld0hhc2hdID0gYXMuc3BsaXQoJyMnKTtcbiAgICAgICAgLy8gTWFrZXMgc3VyZSB3ZSBzY3JvbGwgdG8gdGhlIHByb3ZpZGVkIGhhc2ggaWYgdGhlIHVybC9oYXNoIGFyZSB0aGUgc2FtZVxuICAgICAgICBpZiAobmV3SGFzaCAmJiBvbGRVcmxOb0hhc2ggPT09IG5ld1VybE5vSGFzaCAmJiBvbGRIYXNoID09PSBuZXdIYXNoKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB0aGUgdXJscyBhcmUgY2hhbmdlLCB0aGVyZSdzIG1vcmUgdGhhbiBhIGhhc2ggY2hhbmdlXG4gICAgICAgIGlmIChvbGRVcmxOb0hhc2ggIT09IG5ld1VybE5vSGFzaCkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIC8vIElmIHRoZSBoYXNoIGhhcyBjaGFuZ2VkLCB0aGVuIGl0J3MgYSBoYXNoIG9ubHkgY2hhbmdlLlxuICAgICAgICAvLyBUaGlzIGNoZWNrIGlzIG5lY2Vzc2FyeSB0byBoYW5kbGUgYm90aCB0aGUgZW50ZXIgYW5kXG4gICAgICAgIC8vIGxlYXZlIGhhc2ggPT09ICcnIGNhc2VzLiBUaGUgaWRlbnRpdHkgY2FzZSBmYWxscyB0aHJvdWdoXG4gICAgICAgIC8vIGFuZCBpcyB0cmVhdGVkIGFzIGEgbmV4dCByZWxvYWQuXG4gICAgICAgIHJldHVybiBvbGRIYXNoICE9PSBuZXdIYXNoO1xuICAgIH1cbiAgICBzY3JvbGxUb0hhc2goYXMpIHtcbiAgICAgICAgY29uc3QgWywgaGFzaCA9ICcnXSA9IGFzLnNwbGl0KCcjJyk7XG4gICAgICAgIC8vIFNjcm9sbCB0byB0b3AgaWYgdGhlIGhhc2ggaXMganVzdCBgI2Agd2l0aCBubyB2YWx1ZSBvciBgI3RvcGBcbiAgICAgICAgLy8gVG8gbWlycm9yIGJyb3dzZXJzXG4gICAgICAgIGlmIChoYXNoID09PSAnJyB8fCBoYXNoID09PSAndG9wJykge1xuICAgICAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIDApO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIEZpcnN0IHdlIGNoZWNrIGlmIHRoZSBlbGVtZW50IGJ5IGlkIGlzIGZvdW5kXG4gICAgICAgIGNvbnN0IGlkRWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChoYXNoKTtcbiAgICAgICAgaWYgKGlkRWwpIHtcbiAgICAgICAgICAgIGlkRWwuc2Nyb2xsSW50b1ZpZXcoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB0aGVyZSdzIG5vIGVsZW1lbnQgd2l0aCB0aGUgaWQsIHdlIGNoZWNrIHRoZSBgbmFtZWAgcHJvcGVydHlcbiAgICAgICAgLy8gVG8gbWlycm9yIGJyb3dzZXJzXG4gICAgICAgIGNvbnN0IG5hbWVFbCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKGhhc2gpWzBdO1xuICAgICAgICBpZiAobmFtZUVsKSB7XG4gICAgICAgICAgICBuYW1lRWwuc2Nyb2xsSW50b1ZpZXcoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICB1cmxJc05ldyhhc1BhdGgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXNQYXRoICE9PSBhc1BhdGg7XG4gICAgfVxuICAgIC8qKlxuICAgKiBQcmVmZXRjaCBwYWdlIGNvZGUsIHlvdSBtYXkgd2FpdCBmb3IgdGhlIGRhdGEgZHVyaW5nIHBhZ2UgcmVuZGVyaW5nLlxuICAgKiBUaGlzIGZlYXR1cmUgb25seSB3b3JrcyBpbiBwcm9kdWN0aW9uIVxuICAgKiBAcGFyYW0gdXJsIHRoZSBocmVmIG9mIHByZWZldGNoZWQgcGFnZVxuICAgKiBAcGFyYW0gYXNQYXRoIHRoZSBhcyBwYXRoIG9mIHRoZSBwcmVmZXRjaGVkIHBhZ2VcbiAgICovIGFzeW5jIHByZWZldGNoKHVybCwgYXNQYXRoID0gdXJsLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgbGV0IHBhcnNlZCA9ICgwLCBfcGFyc2VSZWxhdGl2ZVVybCkucGFyc2VSZWxhdGl2ZVVybCh1cmwpO1xuICAgICAgICBsZXQgeyBwYXRobmFtZSAsIHF1ZXJ5ICB9ID0gcGFyc2VkO1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuX19ORVhUX0kxOE5fU1VQUE9SVCkge1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMubG9jYWxlID09PSBmYWxzZSkge1xuICAgICAgICAgICAgICAgIHBhdGhuYW1lID0gKDAsIF9ub3JtYWxpemVMb2NhbGVQYXRoKS5ub3JtYWxpemVMb2NhbGVQYXRoKHBhdGhuYW1lLCB0aGlzLmxvY2FsZXMpLnBhdGhuYW1lO1xuICAgICAgICAgICAgICAgIHBhcnNlZC5wYXRobmFtZSA9IHBhdGhuYW1lO1xuICAgICAgICAgICAgICAgIHVybCA9ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbihwYXJzZWQpO1xuICAgICAgICAgICAgICAgIGxldCBwYXJzZWRBcyA9ICgwLCBfcGFyc2VSZWxhdGl2ZVVybCkucGFyc2VSZWxhdGl2ZVVybChhc1BhdGgpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGxvY2FsZVBhdGhSZXN1bHQgPSAoMCwgX25vcm1hbGl6ZUxvY2FsZVBhdGgpLm5vcm1hbGl6ZUxvY2FsZVBhdGgocGFyc2VkQXMucGF0aG5hbWUsIHRoaXMubG9jYWxlcyk7XG4gICAgICAgICAgICAgICAgcGFyc2VkQXMucGF0aG5hbWUgPSBsb2NhbGVQYXRoUmVzdWx0LnBhdGhuYW1lO1xuICAgICAgICAgICAgICAgIG9wdGlvbnMubG9jYWxlID0gbG9jYWxlUGF0aFJlc3VsdC5kZXRlY3RlZExvY2FsZSB8fCB0aGlzLmRlZmF1bHRMb2NhbGU7XG4gICAgICAgICAgICAgICAgYXNQYXRoID0gKDAsIF9mb3JtYXRVcmwpLmZvcm1hdFdpdGhWYWxpZGF0aW9uKHBhcnNlZEFzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjb25zdCBwYWdlcyA9IGF3YWl0IHRoaXMucGFnZUxvYWRlci5nZXRQYWdlTGlzdCgpO1xuICAgICAgICBsZXQgcmVzb2x2ZWRBcyA9IGFzUGF0aDtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Ll9fTkVYVF9IQVNfUkVXUklURVMgJiYgYXNQYXRoLnN0YXJ0c1dpdGgoJy8nKSkge1xuICAgICAgICAgICAgbGV0IHJld3JpdGVzO1xuICAgICAgICAgICAgKHsgX19yZXdyaXRlczogcmV3cml0ZXMgIH0gPSBhd2FpdCAoMCwgX3JvdXRlTG9hZGVyKS5nZXRDbGllbnRCdWlsZE1hbmlmZXN0KCkpO1xuICAgICAgICAgICAgY29uc3QgcmV3cml0ZXNSZXN1bHQgPSAoMCwgX3Jlc29sdmVSZXdyaXRlcykuZGVmYXVsdChhZGRCYXNlUGF0aChhZGRMb2NhbGUoYXNQYXRoLCB0aGlzLmxvY2FsZSkpLCBwYWdlcywgcmV3cml0ZXMsIHBhcnNlZC5xdWVyeSwgKHApPT5yZXNvbHZlRHluYW1pY1JvdXRlKHAsIHBhZ2VzKVxuICAgICAgICAgICAgLCB0aGlzLmxvY2FsZXMpO1xuICAgICAgICAgICAgaWYgKHJld3JpdGVzUmVzdWx0LmV4dGVybmFsRGVzdCkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlc29sdmVkQXMgPSBkZWxMb2NhbGUoZGVsQmFzZVBhdGgocmV3cml0ZXNSZXN1bHQuYXNQYXRoKSwgdGhpcy5sb2NhbGUpO1xuICAgICAgICAgICAgaWYgKHJld3JpdGVzUmVzdWx0Lm1hdGNoZWRQYWdlICYmIHJld3JpdGVzUmVzdWx0LnJlc29sdmVkSHJlZikge1xuICAgICAgICAgICAgICAgIC8vIGlmIHRoaXMgZGlyZWN0bHkgbWF0Y2hlcyBhIHBhZ2Ugd2UgbmVlZCB0byB1cGRhdGUgdGhlIGhyZWYgdG9cbiAgICAgICAgICAgICAgICAvLyBhbGxvdyB0aGUgY29ycmVjdCBwYWdlIGNodW5rIHRvIGJlIGxvYWRlZFxuICAgICAgICAgICAgICAgIHBhdGhuYW1lID0gcmV3cml0ZXNSZXN1bHQucmVzb2x2ZWRIcmVmO1xuICAgICAgICAgICAgICAgIHBhcnNlZC5wYXRobmFtZSA9IHBhdGhuYW1lO1xuICAgICAgICAgICAgICAgIHVybCA9ICgwLCBfZm9ybWF0VXJsKS5mb3JtYXRXaXRoVmFsaWRhdGlvbihwYXJzZWQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcGFyc2VkLnBhdGhuYW1lID0gcmVzb2x2ZUR5bmFtaWNSb3V0ZShwYXJzZWQucGF0aG5hbWUsIHBhZ2VzKTtcbiAgICAgICAgICAgIGlmIChwYXJzZWQucGF0aG5hbWUgIT09IHBhdGhuYW1lKSB7XG4gICAgICAgICAgICAgICAgcGF0aG5hbWUgPSBwYXJzZWQucGF0aG5hbWU7XG4gICAgICAgICAgICAgICAgcGFyc2VkLnBhdGhuYW1lID0gcGF0aG5hbWU7XG4gICAgICAgICAgICAgICAgdXJsID0gKDAsIF9mb3JtYXRVcmwpLmZvcm1hdFdpdGhWYWxpZGF0aW9uKHBhcnNlZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gUHJlZmV0Y2ggaXMgbm90IHN1cHBvcnRlZCBpbiBkZXZlbG9wbWVudCBtb2RlIGJlY2F1c2UgaXQgd291bGQgdHJpZ2dlciBvbi1kZW1hbmQtZW50cmllc1xuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGVmZmVjdHMgPSBhd2FpdCB0aGlzLl9wcmVmbGlnaHRSZXF1ZXN0KHtcbiAgICAgICAgICAgIGFzOiBhZGRCYXNlUGF0aChhc1BhdGgpLFxuICAgICAgICAgICAgY2FjaGU6IHRydWUsXG4gICAgICAgICAgICBwYWdlcyxcbiAgICAgICAgICAgIHBhdGhuYW1lLFxuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICBsb2NhbGU6IHRoaXMubG9jYWxlLFxuICAgICAgICAgICAgaXNQcmV2aWV3OiB0aGlzLmlzUHJldmlld1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGVmZmVjdHMudHlwZSA9PT0gJ3Jld3JpdGUnKSB7XG4gICAgICAgICAgICBwYXJzZWQucGF0aG5hbWUgPSBlZmZlY3RzLnJlc29sdmVkSHJlZjtcbiAgICAgICAgICAgIHBhdGhuYW1lID0gZWZmZWN0cy5yZXNvbHZlZEhyZWY7XG4gICAgICAgICAgICBxdWVyeSA9IHtcbiAgICAgICAgICAgICAgICAuLi5xdWVyeSxcbiAgICAgICAgICAgICAgICAuLi5lZmZlY3RzLnBhcnNlZEFzLnF1ZXJ5XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmVzb2x2ZWRBcyA9IGVmZmVjdHMuYXNQYXRoO1xuICAgICAgICAgICAgdXJsID0gKDAsIF9mb3JtYXRVcmwpLmZvcm1hdFdpdGhWYWxpZGF0aW9uKHBhcnNlZCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgcm91dGUgPSAoMCwgX25vcm1hbGl6ZVRyYWlsaW5nU2xhc2gpLnJlbW92ZVBhdGhUcmFpbGluZ1NsYXNoKHBhdGhuYW1lKTtcbiAgICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoW1xuICAgICAgICAgICAgdGhpcy5wYWdlTG9hZGVyLl9pc1NzZyhyb3V0ZSkudGhlbigoaXNTc2cpPT57XG4gICAgICAgICAgICAgICAgcmV0dXJuIGlzU3NnID8gZmV0Y2hOZXh0RGF0YSh0aGlzLnBhZ2VMb2FkZXIuZ2V0RGF0YUhyZWYoe1xuICAgICAgICAgICAgICAgICAgICBocmVmOiB1cmwsXG4gICAgICAgICAgICAgICAgICAgIGFzUGF0aDogcmVzb2x2ZWRBcyxcbiAgICAgICAgICAgICAgICAgICAgc3NnOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICBsb2NhbGU6IHR5cGVvZiBvcHRpb25zLmxvY2FsZSAhPT0gJ3VuZGVmaW5lZCcgPyBvcHRpb25zLmxvY2FsZSA6IHRoaXMubG9jYWxlXG4gICAgICAgICAgICAgICAgfSksIGZhbHNlLCBmYWxzZSwgdGhpcy5zZGMsIHRydWUpIDogZmFsc2U7XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIHRoaXMucGFnZUxvYWRlcltvcHRpb25zLnByaW9yaXR5ID8gJ2xvYWRQYWdlJyA6ICdwcmVmZXRjaCddKHJvdXRlKSwgXG4gICAgICAgIF0pO1xuICAgIH1cbiAgICBhc3luYyBmZXRjaENvbXBvbmVudChyb3V0ZSkge1xuICAgICAgICBsZXQgY2FuY2VsbGVkID0gZmFsc2U7XG4gICAgICAgIGNvbnN0IGNhbmNlbCA9IHRoaXMuY2xjID0gKCk9PntcbiAgICAgICAgICAgIGNhbmNlbGxlZCA9IHRydWU7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGhhbmRsZUNhbmNlbGxlZCA9ICgpPT57XG4gICAgICAgICAgICBpZiAoY2FuY2VsbGVkKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZXJyb3IgPSBuZXcgRXJyb3IoYEFib3J0IGZldGNoaW5nIGNvbXBvbmVudCBmb3Igcm91dGU6IFwiJHtyb3V0ZX1cImApO1xuICAgICAgICAgICAgICAgIGVycm9yLmNhbmNlbGxlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY2FuY2VsID09PSB0aGlzLmNsYykge1xuICAgICAgICAgICAgICAgIHRoaXMuY2xjID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IGNvbXBvbmVudFJlc3VsdCA9IGF3YWl0IHRoaXMucGFnZUxvYWRlci5sb2FkUGFnZShyb3V0ZSk7XG4gICAgICAgICAgICBoYW5kbGVDYW5jZWxsZWQoKTtcbiAgICAgICAgICAgIHJldHVybiBjb21wb25lbnRSZXN1bHQ7XG4gICAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgaGFuZGxlQ2FuY2VsbGVkKCk7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgX2dldERhdGEoZm4pIHtcbiAgICAgICAgbGV0IGNhbmNlbGxlZCA9IGZhbHNlO1xuICAgICAgICBjb25zdCBjYW5jZWwgPSAoKT0+e1xuICAgICAgICAgICAgY2FuY2VsbGVkID0gdHJ1ZTtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5jbGMgPSBjYW5jZWw7XG4gICAgICAgIHJldHVybiBmbigpLnRoZW4oKGRhdGEpPT57XG4gICAgICAgICAgICBpZiAoY2FuY2VsID09PSB0aGlzLmNsYykge1xuICAgICAgICAgICAgICAgIHRoaXMuY2xjID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChjYW5jZWxsZWQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBlcnIgPSBuZXcgRXJyb3IoJ0xvYWRpbmcgaW5pdGlhbCBwcm9wcyBjYW5jZWxsZWQnKTtcbiAgICAgICAgICAgICAgICBlcnIuY2FuY2VsbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIF9nZXRGbGlnaHREYXRhKGRhdGFIcmVmKSB7XG4gICAgICAgIC8vIERvIG5vdCBjYWNoZSBSU0MgZmxpZ2h0IHJlc3BvbnNlIHNpbmNlIGl0J3Mgbm90IGEgc3RhdGljIHJlc291cmNlXG4gICAgICAgIHJldHVybiBmZXRjaE5leHREYXRhKGRhdGFIcmVmLCB0cnVlLCB0cnVlLCB0aGlzLnNkYywgZmFsc2UpLnRoZW4oKHNlcmlhbGl6ZWQpPT57XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGZyZXNoOiB0cnVlLFxuICAgICAgICAgICAgICAgIGRhdGE6IHNlcmlhbGl6ZWRcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhc3luYyBfcHJlZmxpZ2h0UmVxdWVzdChvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IGFzUGF0aG5hbWUgPSBwYXRoTm9RdWVyeUhhc2gob3B0aW9ucy5hcyk7XG4gICAgICAgIGNvbnN0IGNsZWFuZWRBcyA9IGRlbExvY2FsZShoYXNCYXNlUGF0aChhc1BhdGhuYW1lKSA/IGRlbEJhc2VQYXRoKGFzUGF0aG5hbWUpIDogYXNQYXRobmFtZSwgb3B0aW9ucy5sb2NhbGUpO1xuICAgICAgICBjb25zdCBtaWRkbGV3YXJlTGlzdCA9IGF3YWl0IHRoaXMucGFnZUxvYWRlci5nZXRNaWRkbGV3YXJlTGlzdCgpO1xuICAgICAgICBjb25zdCBtaWRkbGV3YXJlID0gbWlkZGxld2FyZUxpc3QubWFwKChbcGFnZSwgc3NyXSk9Pih7XG4gICAgICAgICAgICAgICAgcGFnZSxcbiAgICAgICAgICAgICAgICBzc3JcbiAgICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgICAgIGNvbnN0IHJvdXRpbmdJdGVtcyA9ICgwLCBfcm91dGluZ0l0ZW1zKS5nZXRSb3V0aW5nSXRlbXMob3B0aW9ucy5wYWdlcywgbWlkZGxld2FyZSk7XG4gICAgICAgIGxldCByZXF1aXJlc1ByZWZsaWdodCA9IGZhbHNlO1xuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2Ygcm91dGluZ0l0ZW1zKXtcbiAgICAgICAgICAgIGlmIChpdGVtLm1hdGNoKGNsZWFuZWRBcykpIHtcbiAgICAgICAgICAgICAgICBpZiAoaXRlbS5pc01pZGRsZXdhcmUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVxdWlyZXNQcmVmbGlnaHQgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoIXJlcXVpcmVzUHJlZmxpZ2h0KSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHR5cGU6ICduZXh0J1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgcHJlZmxpZ2h0O1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcHJlZmxpZ2h0ID0gYXdhaXQgdGhpcy5fZ2V0UHJlZmxpZ2h0RGF0YSh7XG4gICAgICAgICAgICAgICAgcHJlZmxpZ2h0SHJlZjogb3B0aW9ucy5hcyxcbiAgICAgICAgICAgICAgICBzaG91bGRDYWNoZTogb3B0aW9ucy5jYWNoZSxcbiAgICAgICAgICAgICAgICBpc1ByZXZpZXc6IG9wdGlvbnMuaXNQcmV2aWV3XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAvLyBJZiBwcmVmbGlnaHQgcmVxdWVzdCBmYWlscywgd2UgbmVlZCB0byBkbyBhIGhhcmQtbmF2aWdhdGlvbi5cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ3JlZGlyZWN0JyxcbiAgICAgICAgICAgICAgICBkZXN0aW5hdGlvbjogb3B0aW9ucy5hc1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocHJlZmxpZ2h0LnJld3JpdGUpIHtcbiAgICAgICAgICAgIC8vIGZvciBleHRlcm5hbCByZXdyaXRlcyB3ZSBuZWVkIHRvIGRvIGEgaGFyZCBuYXZpZ2F0aW9uXG4gICAgICAgICAgICAvLyB0byB0aGUgcmVzb3VyY2VcbiAgICAgICAgICAgIGlmICghcHJlZmxpZ2h0LnJld3JpdGUuc3RhcnRzV2l0aCgnLycpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3JlZGlyZWN0JyxcbiAgICAgICAgICAgICAgICAgICAgZGVzdGluYXRpb246IG9wdGlvbnMuYXNcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgcGFyc2VkID0gKDAsIF9wYXJzZVJlbGF0aXZlVXJsKS5wYXJzZVJlbGF0aXZlVXJsKCgwLCBfbm9ybWFsaXplTG9jYWxlUGF0aCkubm9ybWFsaXplTG9jYWxlUGF0aChoYXNCYXNlUGF0aChwcmVmbGlnaHQucmV3cml0ZSkgPyBkZWxCYXNlUGF0aChwcmVmbGlnaHQucmV3cml0ZSkgOiBwcmVmbGlnaHQucmV3cml0ZSwgdGhpcy5sb2NhbGVzKS5wYXRobmFtZSk7XG4gICAgICAgICAgICBjb25zdCBmc1BhdGhuYW1lID0gKDAsIF9ub3JtYWxpemVUcmFpbGluZ1NsYXNoKS5yZW1vdmVQYXRoVHJhaWxpbmdTbGFzaChwYXJzZWQucGF0aG5hbWUpO1xuICAgICAgICAgICAgbGV0IG1hdGNoZWRQYWdlO1xuICAgICAgICAgICAgbGV0IHJlc29sdmVkSHJlZjtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnBhZ2VzLmluY2x1ZGVzKGZzUGF0aG5hbWUpKSB7XG4gICAgICAgICAgICAgICAgbWF0Y2hlZFBhZ2UgPSB0cnVlO1xuICAgICAgICAgICAgICAgIHJlc29sdmVkSHJlZiA9IGZzUGF0aG5hbWU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc29sdmVkSHJlZiA9IHJlc29sdmVEeW5hbWljUm91dGUoZnNQYXRobmFtZSwgb3B0aW9ucy5wYWdlcyk7XG4gICAgICAgICAgICAgICAgaWYgKHJlc29sdmVkSHJlZiAhPT0gcGFyc2VkLnBhdGhuYW1lICYmIG9wdGlvbnMucGFnZXMuaW5jbHVkZXMocmVzb2x2ZWRIcmVmKSkge1xuICAgICAgICAgICAgICAgICAgICBtYXRjaGVkUGFnZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB0eXBlOiAncmV3cml0ZScsXG4gICAgICAgICAgICAgICAgYXNQYXRoOiBwYXJzZWQucGF0aG5hbWUsXG4gICAgICAgICAgICAgICAgcGFyc2VkQXM6IHBhcnNlZCxcbiAgICAgICAgICAgICAgICBtYXRjaGVkUGFnZSxcbiAgICAgICAgICAgICAgICByZXNvbHZlZEhyZWZcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHByZWZsaWdodC5yZWRpcmVjdCkge1xuICAgICAgICAgICAgaWYgKHByZWZsaWdodC5yZWRpcmVjdC5zdGFydHNXaXRoKCcvJykpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjbGVhblJlZGlyZWN0ID0gKDAsIF9ub3JtYWxpemVUcmFpbGluZ1NsYXNoKS5yZW1vdmVQYXRoVHJhaWxpbmdTbGFzaCgoMCwgX25vcm1hbGl6ZUxvY2FsZVBhdGgpLm5vcm1hbGl6ZUxvY2FsZVBhdGgoaGFzQmFzZVBhdGgocHJlZmxpZ2h0LnJlZGlyZWN0KSA/IGRlbEJhc2VQYXRoKHByZWZsaWdodC5yZWRpcmVjdCkgOiBwcmVmbGlnaHQucmVkaXJlY3QsIHRoaXMubG9jYWxlcykucGF0aG5hbWUpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgdXJsOiBuZXdVcmwgLCBhczogbmV3QXMgIH0gPSBwcmVwYXJlVXJsQXModGhpcywgY2xlYW5SZWRpcmVjdCwgY2xlYW5SZWRpcmVjdCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3JlZGlyZWN0JyxcbiAgICAgICAgICAgICAgICAgICAgbmV3VXJsLFxuICAgICAgICAgICAgICAgICAgICBuZXdBc1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdyZWRpcmVjdCcsXG4gICAgICAgICAgICAgICAgZGVzdGluYXRpb246IHByZWZsaWdodC5yZWRpcmVjdFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICAvLyBGb3IgU1NSIHJlcXVlc3RzLCB0aGV5IHdpbGwgYmUgaGFuZGxlZCBsaWtlIG5vcm1hbCBwYWdlcy5cbiAgICAgICAgaWYgKHByZWZsaWdodC5yZWZyZXNoICYmICFwcmVmbGlnaHQuc3NyKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdyZWZyZXNoJ1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdHlwZTogJ25leHQnXG4gICAgICAgIH07XG4gICAgfVxuICAgIF9nZXRQcmVmbGlnaHREYXRhKHBhcmFtcykge1xuICAgICAgICBjb25zdCB7IHByZWZsaWdodEhyZWYgLCBzaG91bGRDYWNoZSA9ZmFsc2UgLCBpc1ByZXZpZXcgIH0gPSBwYXJhbXM7XG4gICAgICAgIGNvbnN0IHsgaHJlZjogY2FjaGVLZXkgIH0gPSBuZXcgVVJMKHByZWZsaWdodEhyZWYsIHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgJiYgIWlzUHJldmlldyAmJiBzaG91bGRDYWNoZSAmJiB0aGlzLnNkZVtjYWNoZUtleV0pIHtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5zZGVbY2FjaGVLZXldKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmV0Y2gocHJlZmxpZ2h0SHJlZiwge1xuICAgICAgICAgICAgbWV0aG9kOiAnSEVBRCcsXG4gICAgICAgICAgICBjcmVkZW50aWFsczogJ3NhbWUtb3JpZ2luJyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAneC1taWRkbGV3YXJlLXByZWZsaWdodCc6ICcxJ1xuICAgICAgICAgICAgfVxuICAgICAgICB9KS50aGVuKChyZXMpPT57XG4gICAgICAgICAgICBpZiAoIXJlcy5vaykge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgRmFpbGVkIHRvIHByZWZsaWdodCByZXF1ZXN0YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIGNhY2hlOiByZXMuaGVhZGVycy5nZXQoJ3gtbWlkZGxld2FyZS1jYWNoZScpLFxuICAgICAgICAgICAgICAgIHJlZGlyZWN0OiByZXMuaGVhZGVycy5nZXQoJ0xvY2F0aW9uJyksXG4gICAgICAgICAgICAgICAgcmVmcmVzaDogcmVzLmhlYWRlcnMuaGFzKCd4LW1pZGRsZXdhcmUtcmVmcmVzaCcpLFxuICAgICAgICAgICAgICAgIHJld3JpdGU6IHJlcy5oZWFkZXJzLmdldCgneC1taWRkbGV3YXJlLXJld3JpdGUnKSxcbiAgICAgICAgICAgICAgICBzc3I6ICEhcmVzLmhlYWRlcnMuZ2V0KCd4LW1pZGRsZXdhcmUtc3NyJylcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pLnRoZW4oKGRhdGEpPT57XG4gICAgICAgICAgICBpZiAoc2hvdWxkQ2FjaGUgJiYgZGF0YS5jYWNoZSAhPT0gJ25vLWNhY2hlJykge1xuICAgICAgICAgICAgICAgIHRoaXMuc2RlW2NhY2hlS2V5XSA9IGRhdGE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgfSkuY2F0Y2goKGVycik9PntcbiAgICAgICAgICAgIGRlbGV0ZSB0aGlzLnNkZVtjYWNoZUtleV07XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXRJbml0aWFsUHJvcHMoQ29tcG9uZW50LCBjdHgpIHtcbiAgICAgICAgY29uc3QgeyBDb21wb25lbnQ6IEFwcCAgfSA9IHRoaXMuY29tcG9uZW50c1snL19hcHAnXTtcbiAgICAgICAgY29uc3QgQXBwVHJlZSA9IHRoaXMuX3dyYXBBcHAoQXBwKTtcbiAgICAgICAgY3R4LkFwcFRyZWUgPSBBcHBUcmVlO1xuICAgICAgICByZXR1cm4gKDAsIF91dGlscykubG9hZEdldEluaXRpYWxQcm9wcyhBcHAsIHtcbiAgICAgICAgICAgIEFwcFRyZWUsXG4gICAgICAgICAgICBDb21wb25lbnQsXG4gICAgICAgICAgICByb3V0ZXI6IHRoaXMsXG4gICAgICAgICAgICBjdHhcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGFib3J0Q29tcG9uZW50TG9hZChhcywgcm91dGVQcm9wcykge1xuICAgICAgICBpZiAodGhpcy5jbGMpIHtcbiAgICAgICAgICAgIFJvdXRlci5ldmVudHMuZW1pdCgncm91dGVDaGFuZ2VFcnJvcicsIGJ1aWxkQ2FuY2VsbGF0aW9uRXJyb3IoKSwgYXMsIHJvdXRlUHJvcHMpO1xuICAgICAgICAgICAgdGhpcy5jbGMoKTtcbiAgICAgICAgICAgIHRoaXMuY2xjID0gbnVsbDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgcm91dGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLnJvdXRlO1xuICAgIH1cbiAgICBnZXQgcGF0aG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLnBhdGhuYW1lO1xuICAgIH1cbiAgICBnZXQgcXVlcnkoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLnF1ZXJ5O1xuICAgIH1cbiAgICBnZXQgYXNQYXRoKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0ZS5hc1BhdGg7XG4gICAgfVxuICAgIGdldCBsb2NhbGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLmxvY2FsZTtcbiAgICB9XG4gICAgZ2V0IGlzRmFsbGJhY2soKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLmlzRmFsbGJhY2s7XG4gICAgfVxuICAgIGdldCBpc1ByZXZpZXcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlLmlzUHJldmlldztcbiAgICB9XG59XG5leHBvcnRzLmRlZmF1bHQgPSBSb3V0ZXI7XG5Sb3V0ZXIuZXZlbnRzID0gKDAsIF9taXR0KS5kZWZhdWx0KCk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJvdXRlci5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJnZXREb21haW5Mb2NhbGUiLCJhZGRMb2NhbGUiLCJkZWxMb2NhbGUiLCJoYXNCYXNlUGF0aCIsImFkZEJhc2VQYXRoIiwiZGVsQmFzZVBhdGgiLCJpc0xvY2FsVVJMIiwiaW50ZXJwb2xhdGVBcyIsInJlc29sdmVIcmVmIiwiZGVmYXVsdCIsIl9ub3JtYWxpemVUcmFpbGluZ1NsYXNoIiwicmVxdWlyZSIsIl9yb3V0ZUxvYWRlciIsIl9pc0Vycm9yIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJfZGVub3JtYWxpemVQYWdlUGF0aCIsIl9ub3JtYWxpemVMb2NhbGVQYXRoIiwiX21pdHQiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX3V0aWxzIiwiX2lzRHluYW1pYyIsIl9wYXJzZVJlbGF0aXZlVXJsIiwiX3F1ZXJ5c3RyaW5nIiwiX3Jlc29sdmVSZXdyaXRlcyIsIl9yb3V0ZU1hdGNoZXIiLCJfcm91dGVSZWdleCIsIl9mb3JtYXRVcmwiLCJfcm91dGluZ0l0ZW1zIiwib2JqIiwiX19lc01vZHVsZSIsIm5ld09iaiIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJnZXQiLCJzZXQiLCJkZXRlY3REb21haW5Mb2NhbGUiLCJwcm9jZXNzIiwiZW52IiwiX19ORVhUX0kxOE5fU1VQUE9SVCIsImJhc2VQYXRoIiwiX19ORVhUX1JPVVRFUl9CQVNFUEFUSCIsImJ1aWxkQ2FuY2VsbGF0aW9uRXJyb3IiLCJhc3NpZ24iLCJFcnJvciIsImNhbmNlbGxlZCIsImFkZFBhdGhQcmVmaXgiLCJwYXRoIiwicHJlZml4Iiwic3RhcnRzV2l0aCIsInBhdGhuYW1lIiwicGF0aE5vUXVlcnlIYXNoIiwibm9ybWFsaXplUGF0aFRyYWlsaW5nU2xhc2giLCJzbGljZSIsImxlbmd0aCIsImxvY2FsZSIsImxvY2FsZXMiLCJkb21haW5Mb2NhbGVzIiwibm9ybWFsaXplTG9jYWxlUGF0aCIsImRldGVjdGVkTG9jYWxlIiwiZGV0ZWN0ZWREb21haW4iLCJ1bmRlZmluZWQiLCJodHRwIiwiZG9tYWluIiwiZGVmYXVsdExvY2FsZSIsInBhdGhMb3dlciIsInRvTG93ZXJDYXNlIiwibG9jYWxlTG93ZXIiLCJxdWVyeUluZGV4IiwiaW5kZXhPZiIsImhhc2hJbmRleCIsInN1YnN0cmluZyIsInVybCIsImxvY2F0aW9uT3JpZ2luIiwiZ2V0TG9jYXRpb25PcmlnaW4iLCJyZXNvbHZlZCIsIlVSTCIsIm9yaWdpbiIsIl8iLCJyb3V0ZSIsImFzUGF0aG5hbWUiLCJxdWVyeSIsImludGVycG9sYXRlZFJvdXRlIiwiZHluYW1pY1JlZ2V4IiwiZ2V0Um91dGVSZWdleCIsImR5bmFtaWNHcm91cHMiLCJncm91cHMiLCJkeW5hbWljTWF0Y2hlcyIsImdldFJvdXRlTWF0Y2hlciIsInBhcmFtcyIsImtleXMiLCJldmVyeSIsInBhcmFtIiwicmVwZWF0Iiwib3B0aW9uYWwiLCJyZXBsYWNlZCIsIkFycmF5IiwiaXNBcnJheSIsInJlcGxhY2UiLCJtYXAiLCJzZWdtZW50IiwiZW5jb2RlVVJJQ29tcG9uZW50Iiwiam9pbiIsInJlc3VsdCIsIm9taXRQYXJtc0Zyb21RdWVyeSIsImZpbHRlcmVkUXVlcnkiLCJmb3JFYWNoIiwiaW5jbHVkZXMiLCJyb3V0ZXIiLCJocmVmIiwicmVzb2x2ZUFzIiwiYmFzZSIsInVybEFzU3RyaW5nIiwiZm9ybWF0V2l0aFZhbGlkYXRpb24iLCJ1cmxQcm90b01hdGNoIiwibWF0Y2giLCJ1cmxBc1N0cmluZ05vUHJvdG8iLCJ1cmxQYXJ0cyIsInNwbGl0IiwiY29uc29sZSIsImVycm9yIiwibm9ybWFsaXplZFVybCIsIm5vcm1hbGl6ZVJlcGVhdGVkU2xhc2hlcyIsImFzUGF0aCIsImZpbmFsVXJsIiwiaW50ZXJwb2xhdGVkQXMiLCJpc0R5bmFtaWNSb3V0ZSIsInNlYXJjaFBhcmFtcyIsInNlYXJjaFBhcmFtc1RvVXJsUXVlcnkiLCJoYXNoIiwicmVzb2x2ZWRIcmVmIiwiXzEiLCJzdHJpcE9yaWdpbiIsInByZXBhcmVVcmxBcyIsImFzIiwicmVzb2x2ZWRBcyIsImhyZWZIYWRPcmlnaW4iLCJhc0hhZE9yaWdpbiIsInByZXBhcmVkVXJsIiwicHJlcGFyZWRBcyIsInJlc29sdmVEeW5hbWljUm91dGUiLCJwYWdlcyIsImNsZWFuUGF0aG5hbWUiLCJyZW1vdmVQYXRoVHJhaWxpbmdTbGFzaCIsImRlbm9ybWFsaXplUGFnZVBhdGgiLCJzb21lIiwicGFnZSIsInJlIiwidGVzdCIsIm1hbnVhbFNjcm9sbFJlc3RvcmF0aW9uIiwiX19ORVhUX1NDUk9MTF9SRVNUT1JBVElPTiIsIndpbmRvdyIsImhpc3RvcnkiLCJ2Iiwic2Vzc2lvblN0b3JhZ2UiLCJzZXRJdGVtIiwicmVtb3ZlSXRlbSIsIm4iLCJTU0dfREFUQV9OT1RfRk9VTkQiLCJTeW1ib2wiLCJmZXRjaFJldHJ5IiwiYXR0ZW1wdHMiLCJvcHRzIiwiZmV0Y2giLCJjcmVkZW50aWFscyIsInRoZW4iLCJyZXMiLCJvayIsInN0YXR1cyIsImpzb24iLCJkYXRhIiwibm90Rm91bmQiLCJ0ZXh0IiwiZmV0Y2hOZXh0RGF0YSIsImRhdGFIcmVmIiwiaXNTZXJ2ZXJSZW5kZXIiLCJpbmZsaWdodENhY2hlIiwicGVyc2lzdENhY2hlIiwiY2FjaGVLZXkiLCJsb2NhdGlvbiIsImNhdGNoIiwiZXJyIiwibWFya0Fzc2V0RXJyb3IiLCJSb3V0ZXIiLCJjb25zdHJ1Y3RvciIsInBhdGhuYW1lMSIsInF1ZXJ5MSIsImFzMSIsImluaXRpYWxQcm9wcyIsInBhZ2VMb2FkZXIiLCJBcHAiLCJ3cmFwQXBwIiwiQ29tcG9uZW50Iiwic3Vic2NyaXB0aW9uIiwiaXNGYWxsYmFjayIsImlzUHJldmlldyIsImlzUnNjIiwic2RjIiwic2RyIiwic2RlIiwiX2lkeCIsIm9uUG9wU3RhdGUiLCJlIiwic3RhdGUiLCJjaGFuZ2VTdGF0ZSIsImdldFVSTCIsIl9fTiIsImZvcmNlZFNjcm9sbCIsIm9wdGlvbnMiLCJpZHgiLCJKU09OIiwic3RyaW5naWZ5IiwieCIsInNlbGYiLCJwYWdlWE9mZnNldCIsInkiLCJwYWdlWU9mZnNldCIsImdldEl0ZW0iLCJwYXJzZSIsInBhcnNlUmVsYXRpdmVVcmwiLCJpc1NzciIsIl9icHMiLCJjaGFuZ2UiLCJzaGFsbG93IiwiX3NoYWxsb3ciLCJjb21wb25lbnRzIiwiaW5pdGlhbCIsInByb3BzIiwiX19OX1NTRyIsIl9fTl9TU1AiLCJfX05fUlNDIiwic3R5bGVTaGVldHMiLCJldmVudHMiLCJhdXRvRXhwb3J0RHluYW1pYyIsIl9fTkVYVF9EQVRBX18iLCJhdXRvRXhwb3J0Iiwic3ViIiwiY2xjIiwiX3dyYXBBcHAiLCJpc0xvY2FsZURvbWFpbiIsImlzUmVhZHkiLCJnc3NwIiwiZ2lwIiwiYXBwR2lwIiwiZ3NwIiwic2VhcmNoIiwiX19ORVhUX0hBU19SRVdSSVRFUyIsImhvc3RuYW1lIiwiX3Nob3VsZFJlc29sdmVIcmVmIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNjcm9sbFJlc3RvcmF0aW9uIiwicmVsb2FkIiwiYmFjayIsInB1c2giLCJtZXRob2QiLCJzaG91bGRSZXNvbHZlSHJlZiIsIl9oIiwibmV4dFN0YXRlIiwicHJldkxvY2FsZSIsInBhcnNlZEFzIiwibG9jYWxlUGF0aFJlc3VsdCIsImRpZE5hdmlnYXRlIiwicmVmIiwiYXNOb0Jhc2VQYXRoIiwiUHJvbWlzZSIsIlNUIiwicGVyZm9ybWFuY2UiLCJtYXJrIiwic2Nyb2xsIiwicm91dGVQcm9wcyIsIl9pbkZsaWdodFJvdXRlIiwiYWJvcnRDb21wb25lbnRMb2FkIiwiY2xlYW5lZEFzIiwibG9jYWxlQ2hhbmdlIiwib25seUFIYXNoQ2hhbmdlIiwiZW1pdCIsInNjcm9sbFRvSGFzaCIsInBhcnNlZCIsInJld3JpdGVzIiwiX19yZXdyaXRlcyIsImFsbCIsImdldFBhZ2VMaXN0IiwiZ2V0Q2xpZW50QnVpbGRNYW5pZmVzdCIsImdldE1pZGRsZXdhcmVMaXN0IiwidXJsSXNOZXciLCJyZXdyaXRlc1Jlc3VsdCIsInAiLCJleHRlcm5hbERlc3QiLCJtYXRjaGVkUGFnZSIsImVmZmVjdCIsIl9wcmVmbGlnaHRSZXF1ZXN0IiwiY2FjaGUiLCJ0eXBlIiwibmV3QXMiLCJuZXdVcmwiLCJkZXN0aW5hdGlvbiIsInJvdXRlUmVnZXgiLCJyb3V0ZU1hdGNoIiwic2hvdWxkSW50ZXJwb2xhdGUiLCJtaXNzaW5nUGFyYW1zIiwiZmlsdGVyIiwid2FybiIsInJlZjEiLCJyZWYyIiwicm91dGVJbmZvIiwiZ2V0Um91dGVJbmZvIiwicGFnZVByb3BzIiwiX19OX1JFRElSRUNUIiwiX19OX1JFRElSRUNUX0JBU0VfUEFUSCIsInBhcnNlZEhyZWYiLCJfX05fUFJFVklFVyIsIm5vdEZvdW5kUm91dGUiLCJmZXRjaENvbXBvbmVudCIsInN0YXR1c0NvZGUiLCJpc1ZhbGlkU2hhbGxvd1JvdXRlIiwiX3Njcm9sbCIsInNob3VsZFNjcm9sbCIsInJlc2V0U2Nyb2xsIiwiZG9jdW1lbnQiLCJkb2N1bWVudEVsZW1lbnQiLCJsYW5nIiwiZXJyMSIsImhhbmRsZVJvdXRlSW5mb0Vycm9yIiwibG9hZEVycm9yRmFpbCIsImlzQXNzZXRFcnJvciIsImdldEluaXRpYWxQcm9wcyIsImdpcEVyciIsInJvdXRlSW5mb0VyciIsImV4aXN0aW5nUm91dGVJbmZvIiwiY2FjaGVkUm91dGVJbmZvIiwibW9kIiwiX19uZXh0X3JzY19fIiwiaXNWYWxpZEVsZW1lbnRUeXBlIiwiZ2V0RGF0YUhyZWYiLCJzc2ciLCJyc2MiLCJfZ2V0RGF0YSIsImZyZXNoIiwiX2dldEZsaWdodERhdGEiLCJfX2ZsaWdodF9zZXJpYWxpemVkX18iLCJfX2ZsaWdodF9mcmVzaF9fIiwiZ2V0UHJvcGVyRXJyb3IiLCJiZWZvcmVQb3BTdGF0ZSIsImNiIiwib2xkVXJsTm9IYXNoIiwib2xkSGFzaCIsIm5ld1VybE5vSGFzaCIsIm5ld0hhc2giLCJzY3JvbGxUbyIsImlkRWwiLCJnZXRFbGVtZW50QnlJZCIsInNjcm9sbEludG9WaWV3IiwibmFtZUVsIiwiZ2V0RWxlbWVudHNCeU5hbWUiLCJwcmVmZXRjaCIsImVmZmVjdHMiLCJfaXNTc2ciLCJpc1NzZyIsInByaW9yaXR5IiwiY2FuY2VsIiwiaGFuZGxlQ2FuY2VsbGVkIiwiY29tcG9uZW50UmVzdWx0IiwibG9hZFBhZ2UiLCJmbiIsInNlcmlhbGl6ZWQiLCJtaWRkbGV3YXJlTGlzdCIsIm1pZGRsZXdhcmUiLCJzc3IiLCJyb3V0aW5nSXRlbXMiLCJnZXRSb3V0aW5nSXRlbXMiLCJyZXF1aXJlc1ByZWZsaWdodCIsIml0ZW0iLCJpc01pZGRsZXdhcmUiLCJwcmVmbGlnaHQiLCJfZ2V0UHJlZmxpZ2h0RGF0YSIsInByZWZsaWdodEhyZWYiLCJzaG91bGRDYWNoZSIsInJld3JpdGUiLCJmc1BhdGhuYW1lIiwicmVkaXJlY3QiLCJjbGVhblJlZGlyZWN0IiwicmVmcmVzaCIsInJlc29sdmUiLCJoZWFkZXJzIiwiaGFzIiwiY3R4IiwiQXBwVHJlZSIsImxvYWRHZXRJbml0aWFsUHJvcHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/shared/lib/router/router.js\n");

/***/ }),

/***/ "./src/components/header/index.tsx":
/*!*****************************************!*\
  !*** ./src/components/header/index.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/react */ \"@chakra-ui/react\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _definitions_context_modal_account__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @definitions/context/modal.account */ \"./src/definitions/context/modal.account.tsx\");\n/* harmony import */ var _components_navbar_navbar_default__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @components/navbar/navbar-default */ \"./src/components/navbar/navbar-default.tsx\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__);\nvar _jsxFileName = \"D:\\\\dev\\\\sbx\\\\site\\\\source\\\\SBX-WEB\\\\src\\\\components\\\\header\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\nconst Header = ({\n  isDark = false,\n  isSticky = false\n}) => {\n  const {\n    state,\n    // eslint-disable-line @typescript-eslint/no-unused-vars\n    dispatch\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_definitions_context_modal_account__WEBPACK_IMPORTED_MODULE_3__.ModalAccountCtx);\n  const {\n    colorMode\n  } = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.useColorMode)();\n  const router = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n  const {\n    modal\n  } = router.query;\n  const sticky = isSticky ? {\n    zIndex: \"sticky\",\n    w: \"full\",\n    pos: \"fixed\",\n    bg: \"transparent\",\n    background: colorMode === \"light\" ? \"var(--chakra-colors-white)\" : \"var(--chakra-colors-gray-800)\",\n    transitionProperty: \"background-color\",\n    transitionDuration: \"var(--chakra-transition-duration-normal)\"\n  } : {};\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    if (modal === \"account\") {\n      dispatch({\n        type: _definitions_context_modal_account__WEBPACK_IMPORTED_MODULE_3__.ModalAccountActions.OPEN\n      });\n    }\n  }, [modal]);\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Box, _objectSpread(_objectSpread({\n    py: 1\n  }, sticky), {}, {\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_2__.Container, {\n      \"data-testid\": \"container\",\n      maxW: \"container.xl\",\n      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_5__.jsxDEV)(_components_navbar_navbar_default__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        isDark: isDark\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, undefined)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, undefined);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(Header));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9oZWFkZXIvaW5kZXgudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUVBO0FBRUE7QUFFQTtBQUtBOzs7QUFJQSxNQUFNVSxNQUFnQyxHQUFHLENBQUM7QUFDeENDLEVBQUFBLE1BQU0sR0FBRyxLQUQrQjtBQUV4Q0MsRUFBQUEsUUFBUSxHQUFHO0FBRjZCLENBQUQsS0FHbkM7QUFDSixRQUFNO0FBQ0pDLElBQUFBLEtBREk7QUFDRztBQUNQQyxJQUFBQTtBQUZJLE1BR0ZaLGlEQUFVLENBQUNNLCtFQUFELENBSGQ7QUFJQSxRQUFNO0FBQUVPLElBQUFBO0FBQUYsTUFBZ0JULDhEQUFZLEVBQWxDO0FBRUEsUUFBTVUsTUFBTSxHQUFHYixzREFBUyxFQUF4QjtBQUNBLFFBQU07QUFBRWMsSUFBQUE7QUFBRixNQUFZRCxNQUFNLENBQUNFLEtBQXpCO0FBQ0EsUUFBTUMsTUFBbUIsR0FBR1AsUUFBUSxHQUNoQztBQUNFUSxJQUFBQSxNQUFNLEVBQUUsUUFEVjtBQUVFQyxJQUFBQSxDQUFDLEVBQUUsTUFGTDtBQUdFQyxJQUFBQSxHQUFHLEVBQUUsT0FIUDtBQUlFQyxJQUFBQSxFQUFFLEVBQUUsYUFKTjtBQUtFQyxJQUFBQSxVQUFVLEVBQ1JULFNBQVMsS0FBSyxPQUFkLEdBQ0ksNEJBREosR0FFSSwrQkFSUjtBQVNFVSxJQUFBQSxrQkFBa0IsRUFBRSxrQkFUdEI7QUFVRUMsSUFBQUEsa0JBQWtCLEVBQUU7QUFWdEIsR0FEZ0MsR0FhaEMsRUFiSjtBQWVBekIsRUFBQUEsZ0RBQVMsQ0FBQyxNQUFNO0FBQ2QsUUFBSWdCLEtBQUssS0FBSyxTQUFkLEVBQXlCO0FBQ3ZCSCxNQUFBQSxRQUFRLENBQUM7QUFBRWEsUUFBQUEsSUFBSSxFQUFFcEIsd0ZBQXdCcUI7QUFBaEMsT0FBRCxDQUFSO0FBQ0Q7QUFDRixHQUpRLEVBSU4sQ0FBQ1gsS0FBRCxDQUpNLENBQVQ7QUFNQSxzQkFDRSw4REFBQyxpREFBRDtBQUFLLE1BQUUsRUFBRTtBQUFULEtBQWdCRSxNQUFoQjtBQUFBLDJCQUNFLDhEQUFDLHVEQUFEO0FBQVcscUJBQVksV0FBdkI7QUFBbUMsVUFBSSxFQUFDLGNBQXhDO0FBQUEsNkJBQ0UsOERBQUMseUVBQUQ7QUFBUSxjQUFNLEVBQUVSO0FBQWhCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFERjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQURGO0FBT0QsQ0F4Q0Q7O0FBMENBLDhFQUFlWCwyQ0FBSSxDQUFDVSxNQUFELENBQW5CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVyY3VyeS8uL3NyYy9jb21wb25lbnRzL2hlYWRlci9pbmRleC50c3g/MTI0NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtZW1vLCB1c2VFZmZlY3QsIHVzZUNvbnRleHQgfSBmcm9tIFwicmVhY3RcIjtcblxuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvcm91dGVyXCI7XG5cbmltcG9ydCB7IEJveCwgQ2hha3JhUHJvcHMsIENvbnRhaW5lciwgdXNlQ29sb3JNb2RlIH0gZnJvbSBcIkBjaGFrcmEtdWkvcmVhY3RcIjtcblxuaW1wb3J0IHtcbiAgTW9kYWxBY2NvdW50QWN0aW9ucyxcbiAgTW9kYWxBY2NvdW50Q3R4LFxufSBmcm9tIFwiQGRlZmluaXRpb25zL2NvbnRleHQvbW9kYWwuYWNjb3VudFwiO1xuXG5pbXBvcnQgTmF2YmFyIGZyb20gXCJAY29tcG9uZW50cy9uYXZiYXIvbmF2YmFyLWRlZmF1bHRcIjtcblxuaW1wb3J0IHsgSUhlYWRlciB9IGZyb20gXCIuL2hlYWRlclwiO1xuXG5jb25zdCBIZWFkZXI6IFJlYWN0LkZDPElIZWFkZXIuSVByb3BzPiA9ICh7XG4gIGlzRGFyayA9IGZhbHNlLFxuICBpc1N0aWNreSA9IGZhbHNlLFxufSkgPT4ge1xuICBjb25zdCB7XG4gICAgc3RhdGUsIC8vIGVzbGludC1kaXNhYmxlLWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLXVudXNlZC12YXJzXG4gICAgZGlzcGF0Y2gsXG4gIH0gPSB1c2VDb250ZXh0KE1vZGFsQWNjb3VudEN0eCk7XG4gIGNvbnN0IHsgY29sb3JNb2RlIH0gPSB1c2VDb2xvck1vZGUoKTtcblxuICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcbiAgY29uc3QgeyBtb2RhbCB9ID0gcm91dGVyLnF1ZXJ5O1xuICBjb25zdCBzdGlja3k6IENoYWtyYVByb3BzID0gaXNTdGlja3lcbiAgICA/IHtcbiAgICAgICAgekluZGV4OiBcInN0aWNreVwiLFxuICAgICAgICB3OiBcImZ1bGxcIixcbiAgICAgICAgcG9zOiBcImZpeGVkXCIsXG4gICAgICAgIGJnOiBcInRyYW5zcGFyZW50XCIsXG4gICAgICAgIGJhY2tncm91bmQ6XG4gICAgICAgICAgY29sb3JNb2RlID09PSBcImxpZ2h0XCJcbiAgICAgICAgICAgID8gXCJ2YXIoLS1jaGFrcmEtY29sb3JzLXdoaXRlKVwiXG4gICAgICAgICAgICA6IFwidmFyKC0tY2hha3JhLWNvbG9ycy1ncmF5LTgwMClcIixcbiAgICAgICAgdHJhbnNpdGlvblByb3BlcnR5OiBcImJhY2tncm91bmQtY29sb3JcIixcbiAgICAgICAgdHJhbnNpdGlvbkR1cmF0aW9uOiBcInZhcigtLWNoYWtyYS10cmFuc2l0aW9uLWR1cmF0aW9uLW5vcm1hbClcIixcbiAgICAgIH1cbiAgICA6IHt9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKG1vZGFsID09PSBcImFjY291bnRcIikge1xuICAgICAgZGlzcGF0Y2goeyB0eXBlOiBNb2RhbEFjY291bnRBY3Rpb25zLk9QRU4gfSk7XG4gICAgfVxuICB9LCBbbW9kYWxdKTtcblxuICByZXR1cm4gKFxuICAgIDxCb3ggcHk9ezF9IHsuLi5zdGlja3l9PlxuICAgICAgPENvbnRhaW5lciBkYXRhLXRlc3RpZD1cImNvbnRhaW5lclwiIG1heFc9XCJjb250YWluZXIueGxcIj5cbiAgICAgICAgPE5hdmJhciBpc0Rhcms9e2lzRGFya30gLz5cbiAgICAgIDwvQ29udGFpbmVyPlxuICAgIDwvQm94PlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgbWVtbyhIZWFkZXIpO1xuIl0sIm5hbWVzIjpbIm1lbW8iLCJ1c2VFZmZlY3QiLCJ1c2VDb250ZXh0IiwidXNlUm91dGVyIiwiQm94IiwiQ29udGFpbmVyIiwidXNlQ29sb3JNb2RlIiwiTW9kYWxBY2NvdW50QWN0aW9ucyIsIk1vZGFsQWNjb3VudEN0eCIsIk5hdmJhciIsIkhlYWRlciIsImlzRGFyayIsImlzU3RpY2t5Iiwic3RhdGUiLCJkaXNwYXRjaCIsImNvbG9yTW9kZSIsInJvdXRlciIsIm1vZGFsIiwicXVlcnkiLCJzdGlja3kiLCJ6SW5kZXgiLCJ3IiwicG9zIiwiYmciLCJiYWNrZ3JvdW5kIiwidHJhbnNpdGlvblByb3BlcnR5IiwidHJhbnNpdGlvbkR1cmF0aW9uIiwidHlwZSIsIk9QRU4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/header/index.tsx\n");

/***/ }),

/***/ "./src/components/logo/logo-with-site-name-interactive.tsx":
/*!*****************************************************************!*\
  !*** ./src/components/logo/logo-with-site-name-interactive.tsx ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LogoWithSiteName\": () => (/* binding */ LogoWithSiteName)\n/* harmony export */ });\n/* harmony import */ var _root_src_pages_home_components_HeroSection_components_CanvasDisplay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @root/src/pages/home/components/HeroSection/components/CanvasDisplay */ \"./src/pages/home/components/HeroSection/components/CanvasDisplay.tsx\");\n/* harmony import */ var _root_src_pages_home_components_HeroSection_components_classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @root/src/pages/home/components/HeroSection/components/classes */ \"./src/pages/home/components/HeroSection/components/classes/index.ts\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-components */ \"styled-components\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(styled_components__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/react */ \"@chakra-ui/react\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _definitions_site__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @definitions/site */ \"./src/definitions/site/index.ts\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__);\nvar _jsxFileName = \"D:\\\\dev\\\\sbx\\\\site\\\\source\\\\SBX-WEB\\\\src\\\\components\\\\logo\\\\logo-with-site-name-interactive.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\nconst StyledGlobe = styled_components__WEBPACK_IMPORTED_MODULE_2___default()(_root_src_pages_home_components_HeroSection_components_CanvasDisplay__WEBPACK_IMPORTED_MODULE_0__[\"default\"])`\n  position: relative;\n  top: -3px;\n  width: 80px;\n  height: 80px;\n\n  @media (max-width: 768px) {\n    width: 64px;\n    height: 64px;\n  }\n`;\nconst StyledName = (styled_components__WEBPACK_IMPORTED_MODULE_2___default().span)`\n  font-size: 56px;\n  font-family: \"Pattanakarn-Regular\";\n\n  @media (max-width: 768px) {\n    font-size: 32px;\n  }\n`;\nconst LogoWithSiteName = props => {\n  const color = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.useColorModeValue)(\"gray.800\", \"white\");\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Flex, _objectSpread(_objectSpread({\n    color: color,\n    display: \"flex\",\n    alignItems: \"center\"\n  }, props), {}, {\n    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(StyledGlobe, {\n      width: 72,\n      height: 72,\n      globeConfig: {\n        radius: 3,\n        rings: 8,\n        slices: 12,\n        globeRenderOffsetPercentage: new _root_src_pages_home_components_HeroSection_components_classes__WEBPACK_IMPORTED_MODULE_1__.Point3D(0.5, 0.5)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_3___default()), {\n      href: \"/\",\n      passHref: true,\n      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.chakra.a, {\n        title: \"Mercury Home Page\",\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(StyledName, {\n          children: \"SBX\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_6__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.VisuallyHidden, {\n          children: _definitions_site__WEBPACK_IMPORTED_MODULE_5__[\"default\"].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, undefined)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, undefined)]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, undefined);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9sb2dvL2xvZ28td2l0aC1zaXRlLW5hbWUtaW50ZXJhY3RpdmUudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUVBO0FBRUE7QUFFQTtBQVFBOztBQUVBLE1BQU1TLFdBQVcsR0FBR1Asd0RBQU0sQ0FBQ0YsNEdBQUQsQ0FBZ0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FWQTtBQVlBLE1BQU1VLFVBQVUsR0FBR1IsK0RBQVk7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FQQTtBQVNPLE1BQU1VLGdCQUF1QyxHQUFJQyxLQUFELElBQXdCO0FBQzdFLFFBQU1DLEtBQUssR0FBR1AsbUVBQWlCLENBQUMsVUFBRCxFQUFhLE9BQWIsQ0FBL0I7QUFDQSxzQkFDRSw4REFBQyxrREFBRDtBQUFNLFNBQUssRUFBRU8sS0FBYjtBQUFvQixXQUFPLEVBQUMsTUFBNUI7QUFBbUMsY0FBVSxFQUFDO0FBQTlDLEtBQTJERCxLQUEzRDtBQUFBLDRCQUNFLDhEQUFDLFdBQUQ7QUFDRSxXQUFLLEVBQUUsRUFEVDtBQUVFLFlBQU0sRUFBRSxFQUZWO0FBR0UsaUJBQVcsRUFBRTtBQUNYRSxRQUFBQSxNQUFNLEVBQUUsQ0FERztBQUVYQyxRQUFBQSxLQUFLLEVBQUUsQ0FGSTtBQUdYQyxRQUFBQSxNQUFNLEVBQUUsRUFIRztBQUlYQyxRQUFBQSwyQkFBMkIsRUFBRSxJQUFJakIsbUdBQUosQ0FBWSxHQUFaLEVBQWlCLEdBQWpCO0FBSmxCO0FBSGY7QUFBQTtBQUFBO0FBQUE7QUFBQSxpQkFERixlQVdFLDhEQUFDLGtEQUFEO0FBQVUsVUFBSSxFQUFDLEdBQWY7QUFBbUIsY0FBUSxNQUEzQjtBQUFBLDZCQUNFLDhEQUFDLHNEQUFEO0FBQVUsYUFBSyxFQUFDLG1CQUFoQjtBQUFBLGdDQUNFLDhEQUFDLFVBQUQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEscUJBREYsZUFFRSw4REFBQyw0REFBRDtBQUFBLG9CQUFpQk8sOERBQVNXO0FBQTFCO0FBQUE7QUFBQTtBQUFBO0FBQUEscUJBRkY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBREY7QUFBQTtBQUFBO0FBQUE7QUFBQSxpQkFYRjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsZUFERjtBQW9CRCxDQXRCTSIsInNvdXJjZXMiOlsid2VicGFjazovL21lcmN1cnkvLi9zcmMvY29tcG9uZW50cy9sb2dvL2xvZ28td2l0aC1zaXRlLW5hbWUtaW50ZXJhY3RpdmUudHN4P2Y5NTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENhbnZhc0Rpc3BsYXkgZnJvbSBcIkByb290L3NyYy9wYWdlcy9ob21lL2NvbXBvbmVudHMvSGVyb1NlY3Rpb24vY29tcG9uZW50cy9DYW52YXNEaXNwbGF5XCI7XG5pbXBvcnQgeyBQb2ludDNEIH0gZnJvbSBcIkByb290L3NyYy9wYWdlcy9ob21lL2NvbXBvbmVudHMvSGVyb1NlY3Rpb24vY29tcG9uZW50cy9jbGFzc2VzXCI7XG5cbmltcG9ydCBzdHlsZWQgZnJvbSBcInN0eWxlZC1jb21wb25lbnRzXCI7XG5cbmltcG9ydCBOZXh0TGluayBmcm9tIFwibmV4dC9saW5rXCI7XG5cbmltcG9ydCB7XG4gIENoYWtyYVByb3BzLFxuICBjaGFrcmEsXG4gIEZsZXgsXG4gIFZpc3VhbGx5SGlkZGVuLFxuICB1c2VDb2xvck1vZGVWYWx1ZSxcbn0gZnJvbSBcIkBjaGFrcmEtdWkvcmVhY3RcIjtcblxuaW1wb3J0IFNpdGUgZnJvbSBcIkBkZWZpbml0aW9ucy9zaXRlXCI7XG5cbmNvbnN0IFN0eWxlZEdsb2JlID0gc3R5bGVkKENhbnZhc0Rpc3BsYXkpYFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogLTNweDtcbiAgd2lkdGg6IDgwcHg7XG4gIGhlaWdodDogODBweDtcblxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICB3aWR0aDogNjRweDtcbiAgICBoZWlnaHQ6IDY0cHg7XG4gIH1cbmA7XG5cbmNvbnN0IFN0eWxlZE5hbWUgPSBzdHlsZWQuc3BhbmBcbiAgZm9udC1zaXplOiA1NnB4O1xuICBmb250LWZhbWlseTogXCJQYXR0YW5ha2Fybi1SZWd1bGFyXCI7XG5cbiAgQG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgZm9udC1zaXplOiAzMnB4O1xuICB9XG5gO1xuXG5leHBvcnQgY29uc3QgTG9nb1dpdGhTaXRlTmFtZTogUmVhY3QuRkM8Q2hha3JhUHJvcHM+ID0gKHByb3BzKTogSlNYLkVsZW1lbnQgPT4ge1xuICBjb25zdCBjb2xvciA9IHVzZUNvbG9yTW9kZVZhbHVlKFwiZ3JheS44MDBcIiwgXCJ3aGl0ZVwiKTtcbiAgcmV0dXJuIChcbiAgICA8RmxleCBjb2xvcj17Y29sb3J9IGRpc3BsYXk9XCJmbGV4XCIgYWxpZ25JdGVtcz1cImNlbnRlclwiIHsuLi5wcm9wc30+XG4gICAgICA8U3R5bGVkR2xvYmVcbiAgICAgICAgd2lkdGg9ezcyfVxuICAgICAgICBoZWlnaHQ9ezcyfVxuICAgICAgICBnbG9iZUNvbmZpZz17e1xuICAgICAgICAgIHJhZGl1czogMyxcbiAgICAgICAgICByaW5nczogOCxcbiAgICAgICAgICBzbGljZXM6IDEyLFxuICAgICAgICAgIGdsb2JlUmVuZGVyT2Zmc2V0UGVyY2VudGFnZTogbmV3IFBvaW50M0QoMC41LCAwLjUpLFxuICAgICAgICB9fVxuICAgICAgLz5cbiAgICAgIDxOZXh0TGluayBocmVmPVwiL1wiIHBhc3NIcmVmPlxuICAgICAgICA8Y2hha3JhLmEgdGl0bGU9XCJNZXJjdXJ5IEhvbWUgUGFnZVwiPlxuICAgICAgICAgIDxTdHlsZWROYW1lPlNCWDwvU3R5bGVkTmFtZT5cbiAgICAgICAgICA8VmlzdWFsbHlIaWRkZW4+e1NpdGUubmFtZX08L1Zpc3VhbGx5SGlkZGVuPlxuICAgICAgICA8L2NoYWtyYS5hPlxuICAgICAgPC9OZXh0TGluaz5cbiAgICA8L0ZsZXg+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbIkNhbnZhc0Rpc3BsYXkiLCJQb2ludDNEIiwic3R5bGVkIiwiTmV4dExpbmsiLCJjaGFrcmEiLCJGbGV4IiwiVmlzdWFsbHlIaWRkZW4iLCJ1c2VDb2xvck1vZGVWYWx1ZSIsIlNpdGUiLCJTdHlsZWRHbG9iZSIsIlN0eWxlZE5hbWUiLCJzcGFuIiwiTG9nb1dpdGhTaXRlTmFtZSIsInByb3BzIiwiY29sb3IiLCJyYWRpdXMiLCJyaW5ncyIsInNsaWNlcyIsImdsb2JlUmVuZGVyT2Zmc2V0UGVyY2VudGFnZSIsIm5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/components/logo/logo-with-site-name-interactive.tsx\n");

/***/ }),

/***/ "./src/components/navbar/menu-item-tag.tsx":
/*!*************************************************!*\
  !*** ./src/components/navbar/menu-item-tag.tsx ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @chakra-ui/react */ \"@chakra-ui/react\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _definitions_navigation_main__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @definitions/navigation/main */ \"./src/definitions/navigation/main.ts\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__);\nvar _jsxFileName = \"D:\\\\dev\\\\sbx\\\\site\\\\source\\\\SBX-WEB\\\\src\\\\components\\\\navbar\\\\menu-item-tag.tsx\";\n\n\n\n\n\n\nconst MenuItemTag = ({\n  title\n}) => {\n  var _hasTag$, _hasTag$2;\n\n  const hasTag = _definitions_navigation_main__WEBPACK_IMPORTED_MODULE_2__.ItemsTag.length && _definitions_navigation_main__WEBPACK_IMPORTED_MODULE_2__.ItemsTag.filter(e => e.title === title);\n  if (!hasTag.length) return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment, {}, void 0, false);\n  const badge = ((_hasTag$ = hasTag[0]) === null || _hasTag$ === void 0 ? void 0 : _hasTag$.badge) || \"New\";\n  const colorScheme = ((_hasTag$2 = hasTag[0]) === null || _hasTag$2 === void 0 ? void 0 : _hasTag$2.colorScheme) || \"green\";\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.Fragment, {\n    children: hasTag.length > 0 && /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_1__.Tag, {\n      size: \"sm\",\n      borderRadius: \"full\",\n      variant: \"solid\",\n      colorScheme: colorScheme,\n      children: badge\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, undefined)\n  }, void 0, false);\n};\n\nMenuItemTag.displayName = \"MenuItemTag\";\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(MenuItemTag));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9uYXZiYXIvbWVudS1pdGVtLXRhZy50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFFQTtBQUVBOzs7O0FBTUEsTUFBTUcsV0FBbUMsR0FBRyxDQUFDO0FBQUVDLEVBQUFBO0FBQUYsQ0FBRCxLQUFlO0FBQUE7O0FBQ3pELFFBQU1DLE1BQU0sR0FBR0gseUVBQUEsSUFBbUJBLHlFQUFBLENBQWlCTSxDQUFELElBQU9BLENBQUMsQ0FBQ0osS0FBRixLQUFZQSxLQUFuQyxDQUFsQztBQUNBLE1BQUksQ0FBQ0MsTUFBTSxDQUFDQyxNQUFaLEVBQW9CLG9CQUFPLDZJQUFQO0FBRXBCLFFBQU1HLEtBQUssR0FBRyxhQUFBSixNQUFNLENBQUMsQ0FBRCxDQUFOLHNEQUFXSSxLQUFYLEtBQW9CLEtBQWxDO0FBQ0EsUUFBTUMsV0FBVyxHQUFHLGNBQUFMLE1BQU0sQ0FBQyxDQUFELENBQU4sd0RBQVdLLFdBQVgsS0FBMEIsT0FBOUM7QUFDQSxzQkFDRTtBQUFBLGNBQ0dMLE1BQU0sQ0FBQ0MsTUFBUCxHQUFnQixDQUFoQixpQkFDQyw4REFBQyxpREFBRDtBQUNFLFVBQUksRUFBQyxJQURQO0FBRUUsa0JBQVksRUFBQyxNQUZmO0FBR0UsYUFBTyxFQUFDLE9BSFY7QUFJRSxpQkFBVyxFQUFFSSxXQUpmO0FBQUEsZ0JBTUdEO0FBTkg7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUZKLG1CQURGO0FBY0QsQ0FwQkQ7O0FBc0JBTixXQUFXLENBQUNRLFdBQVosR0FBMEIsYUFBMUI7QUFFQSw4RUFBZVgsMkNBQUksQ0FBQ0csV0FBRCxDQUFuQiIsInNvdXJjZXMiOlsid2VicGFjazovL21lcmN1cnkvLi9zcmMvY29tcG9uZW50cy9uYXZiYXIvbWVudS1pdGVtLXRhZy50c3g/MzAyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtZW1vIH0gZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCB7IENoYWtyYVByb3BzLCBUYWcsIFRoZW1pbmdQcm9wcyB9IGZyb20gXCJAY2hha3JhLXVpL3JlYWN0XCI7XG5cbmltcG9ydCB7IEl0ZW1zVGFnIH0gZnJvbSBcIkBkZWZpbml0aW9ucy9uYXZpZ2F0aW9uL21haW5cIjtcblxuaW50ZXJmYWNlIElNZW51SXRlbVRhZyBleHRlbmRzIENoYWtyYVByb3BzLCBUaGVtaW5nUHJvcHMge1xuICB0aXRsZTogc3RyaW5nO1xufVxuXG5jb25zdCBNZW51SXRlbVRhZzogUmVhY3QuRkM8SU1lbnVJdGVtVGFnPiA9ICh7IHRpdGxlIH0pID0+IHtcbiAgY29uc3QgaGFzVGFnID0gSXRlbXNUYWcubGVuZ3RoICYmIEl0ZW1zVGFnLmZpbHRlcigoZSkgPT4gZS50aXRsZSA9PT0gdGl0bGUpO1xuICBpZiAoIWhhc1RhZy5sZW5ndGgpIHJldHVybiA8PjwvPjtcblxuICBjb25zdCBiYWRnZSA9IGhhc1RhZ1swXT8uYmFkZ2UgfHwgXCJOZXdcIjtcbiAgY29uc3QgY29sb3JTY2hlbWUgPSBoYXNUYWdbMF0/LmNvbG9yU2NoZW1lIHx8IFwiZ3JlZW5cIjtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAge2hhc1RhZy5sZW5ndGggPiAwICYmIChcbiAgICAgICAgPFRhZ1xuICAgICAgICAgIHNpemU9XCJzbVwiXG4gICAgICAgICAgYm9yZGVyUmFkaXVzPVwiZnVsbFwiXG4gICAgICAgICAgdmFyaWFudD1cInNvbGlkXCJcbiAgICAgICAgICBjb2xvclNjaGVtZT17Y29sb3JTY2hlbWV9XG4gICAgICAgID5cbiAgICAgICAgICB7YmFkZ2V9XG4gICAgICAgIDwvVGFnPlxuICAgICAgKX1cbiAgICA8Lz5cbiAgKTtcbn07XG5cbk1lbnVJdGVtVGFnLmRpc3BsYXlOYW1lID0gXCJNZW51SXRlbVRhZ1wiO1xuXG5leHBvcnQgZGVmYXVsdCBtZW1vKE1lbnVJdGVtVGFnKTtcbiJdLCJuYW1lcyI6WyJtZW1vIiwiVGFnIiwiSXRlbXNUYWciLCJNZW51SXRlbVRhZyIsInRpdGxlIiwiaGFzVGFnIiwibGVuZ3RoIiwiZmlsdGVyIiwiZSIsImJhZGdlIiwiY29sb3JTY2hlbWUiLCJkaXNwbGF5TmFtZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/components/navbar/menu-item-tag.tsx\n");

/***/ }),

/***/ "./src/components/navbar/mobile-navbar.tsx":
/*!*************************************************!*\
  !*** ./src/components/navbar/mobile-navbar.tsx ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _chakra_ui_icons__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/icons */ \"@chakra-ui/icons\");\n/* harmony import */ var _chakra_ui_icons__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_icons__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @chakra-ui/react */ \"@chakra-ui/react\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _definitions_context_mobile_menu__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @definitions/context/mobile.menu */ \"./src/definitions/context/mobile.menu.tsx\");\n/* harmony import */ var _definitions_navigation_main__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @definitions/navigation/main */ \"./src/definitions/navigation/main.ts\");\n/* harmony import */ var _definitions_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @definitions/utils */ \"./src/definitions/utils/index.ts\");\n/* harmony import */ var _menu_item_tag__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./menu-item-tag */ \"./src/components/navbar/menu-item-tag.tsx\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__);\nvar _jsxFileName = \"D:\\\\dev\\\\sbx\\\\site\\\\source\\\\SBX-WEB\\\\src\\\\components\\\\navbar\\\\mobile-navbar.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst MobileNavbar = () => {\n  const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n  const {\n    state,\n    dispatch\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_definitions_context_mobile_menu__WEBPACK_IMPORTED_MODULE_5__.MobileMenuCtx);\n  const toggleHandler = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    dispatch({\n      type: _definitions_context_mobile_menu__WEBPACK_IMPORTED_MODULE_5__.MobileMenuActions.TOGGLE\n    });\n  }, [dispatch]);\n  const closeHandler = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    dispatch({\n      type: _definitions_context_mobile_menu__WEBPACK_IMPORTED_MODULE_5__.MobileMenuActions.CLOSE\n    });\n  }, [dispatch]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    router.events.on(\"routeChangeStart\", closeHandler); // router.events.on(\"routeChangeComplete\", toggleHandler);\n    // router.events.on('routeChangeError', toggleHandler)\n\n    return () => {\n      router.events.off(\"routeChangeStart\", closeHandler); // router.events.off(\"routeChangeComplete\", toggleHandler);\n      // router.events.off('routeChangeError', toggleHandler)\n    };\n  }, [router]);\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Drawer, {\n    isOpen: state.isOpen,\n    onClose: toggleHandler,\n    placement: \"right\",\n    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.DrawerOverlay, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.DrawerContent, {\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.DrawerCloseButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.DrawerBody, {\n        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Stack, {\n          mt: 10,\n          w: \"full\",\n          spacing: 2,\n          children: _definitions_navigation_main__WEBPACK_IMPORTED_MODULE_6__.main.map((link, index) => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(MobileNavItem, _objectSpread({}, link), index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, undefined))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, undefined)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, undefined)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, undefined)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, undefined);\n};\n\nif (_definitions_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {\n  MobileNavbar.displayName = \"MobileNavbar\";\n}\n\nconst MobileNavItem = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(({\n  title,\n  subitems,\n  href\n}) => {\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.Fragment, {\n    children: subitems ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(MobileNavSubitems, {\n      href: href,\n      title: title,\n      subitems: subitems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }, undefined) : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n      href: href,\n      passHref: true,\n      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Button, {\n        justifyContent: \"start\",\n        isFullWidth: true,\n        variant: \"ghost\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, undefined)\n  }, void 0, false);\n});\n\nif (_definitions_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {\n  MobileNavItem.displayName = \"MobileNavItem\";\n}\n\nconst MobileNavSubitems = ({\n  title,\n  // href,\n  subitems\n}) => {\n  const {\n    isOpen,\n    onToggle\n  } = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.useDisclosure)();\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Stack, {\n    align: \"start\",\n    w: \"full\",\n    spacing: 2,\n    onClick: onToggle,\n    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Button, {\n      isFullWidth: true,\n      isActive: isOpen,\n      variant: \"ghost\",\n      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Flex, {\n        as: \"p\",\n        w: \"full\",\n        justify: \"space-between\",\n        align: \"center\",\n        children: [title, /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Icon, {\n          as: _chakra_ui_icons__WEBPACK_IMPORTED_MODULE_3__.ChevronDownIcon,\n          transition: \"all .25s ease-in-out\",\n          transform: isOpen ? \"rotate(180deg)\" : \"\",\n          w: 6,\n          h: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, undefined)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Collapse, {\n      in: isOpen,\n      animateOpacity: true,\n      style: {\n        width: \"100%\",\n        marginTop: \"0!important\"\n      },\n      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Stack, {\n        ml: 2,\n        pl: 4,\n        borderLeft: 1,\n        borderStyle: \"solid\",\n        borderColor: (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.useColorModeValue)(\"gray.200\", \"gray.600\"),\n        align: \"start\",\n        w: \"full\",\n        children: isOpen && subitems.map((item, index) =>\n        /*#__PURE__*/\n        // Mobile Sub Items\n        (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(MobileNavItemSubitem, {\n          title: item.title,\n          href: item.href,\n          subitems: item.subitems\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, undefined))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, undefined)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, undefined);\n};\n\nif (_definitions_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {\n  MobileNavSubitems.displayName = \"MobileNavSubitems\";\n}\n\nconst MobileNavItemDivider = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(() => {\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Box, {\n    w: \"full\",\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, undefined)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, undefined);\n});\n\nif (_definitions_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {\n  MobileNavItemDivider.displayName = \"MobileNavItemDivider\";\n}\n\nconst MobileNavItemSubitem = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(({\n  title,\n  href\n}) => {\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.Fragment, {\n    children: title == \"---\" ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(MobileNavItemDivider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }, undefined) : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.Fragment, {\n      children: href ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n        href: href,\n        passHref: true,\n        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Link, {\n          rounded: \"lg\",\n          _hover: {\n            bg: (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.useColorModeValue)(\"gray.100\", \"whiteAlpha.200\"),\n            textDecoration: \"none\"\n          },\n          w: \"full\",\n          py: 2,\n          px: 4,\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Flex, {\n            as: \"span\",\n            align: \"center\",\n            children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Text, {\n              mr: \"auto\",\n              as: \"span\",\n              children: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 21\n            }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_menu_item_tag__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n              title: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 21\n            }, undefined)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 19\n          }, undefined)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, undefined)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 15\n      }, undefined) : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Flex, {\n        w: \"full\",\n        py: 2,\n        px: 4,\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_4__.Text, {\n          mr: \"auto\",\n          as: \"span\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_9__.jsxDEV)(_menu_item_tag__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n          title: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 17\n        }, undefined)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 15\n      }, undefined)\n    }, void 0, false)\n  }, void 0, false);\n});\n\nif (_definitions_utils__WEBPACK_IMPORTED_MODULE_7__.__DEV__) {\n  MobileNavItemSubitem.displayName = \"MobileNavItemSubitem\";\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(MobileNavbar));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/navbar/mobile-navbar.tsx\n");

/***/ }),

/***/ "./src/components/navbar/navbar-default.tsx":
/*!**************************************************!*\
  !*** ./src/components/navbar/navbar-default.tsx ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/link */ \"./node_modules/next/link.js\");\n/* harmony import */ var next_link__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_link__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _chakra_ui_icons__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @chakra-ui/icons */ \"@chakra-ui/icons\");\n/* harmony import */ var _chakra_ui_icons__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_icons__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/react */ \"@chakra-ui/react\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _definitions_context_mobile_menu__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @definitions/context/mobile.menu */ \"./src/definitions/context/mobile.menu.tsx\");\n/* harmony import */ var _definitions_navigation_main__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @definitions/navigation/main */ \"./src/definitions/navigation/main.ts\");\n/* harmony import */ var _definitions_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @definitions/utils */ \"./src/definitions/utils/index.ts\");\n/* harmony import */ var _definitions_utils_scrollbar__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @definitions/utils/scrollbar */ \"./src/definitions/utils/scrollbar.ts\");\n/* harmony import */ var _components_logo_logo_with_site_name_interactive__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @components/logo/logo-with-site-name-interactive */ \"./src/components/logo/logo-with-site-name-interactive.tsx\");\n/* harmony import */ var _components_theme_switch__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @components/theme-switch */ \"./src/components/theme-switch/index.tsx\");\n/* harmony import */ var _menu_item_tag__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./menu-item-tag */ \"./src/components/navbar/menu-item-tag.tsx\");\n/* harmony import */ var _mobile_navbar__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./mobile-navbar */ \"./src/components/navbar/mobile-navbar.tsx\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__);\nconst _excluded = [\"isDark\", \"justifyContent\", \"items\", \"startItems\", \"endItems\", \"children\"];\nvar _jsxFileName = \"D:\\\\dev\\\\sbx\\\\site\\\\source\\\\SBX-WEB\\\\src\\\\components\\\\navbar\\\\navbar-default.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst NavbarDefault = _ref => {\n  let {\n    isDark,\n    justifyContent = \"space-between\",\n    items,\n    startItems,\n    endItems,\n    children\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  const color = isDark ? \"whiteAlpha.900\" : \"currentColor\";\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_definitions_context_mobile_menu__WEBPACK_IMPORTED_MODULE_4__.MobileMenuProvider, {\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.Box // bg={useColorModeValue(\"transparent\", \"gray.900\")}\n    // rounded={\"full\"}\n    // ref={scrollRef}\n    , _objectSpread(_objectSpread({\n      py: 5,\n      overflowX: \"auto\",\n      sx: (0,_definitions_utils_scrollbar__WEBPACK_IMPORTED_MODULE_7__[\"default\"])()\n    }, rest), {}, {\n      children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.Flex, {\n        w: \"100%\",\n        alignItems: \"center\",\n        justifyContent: justifyContent,\n        children: [startItems ? startItems : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_components_logo_logo_with_site_name_interactive__WEBPACK_IMPORTED_MODULE_8__.LogoWithSiteName, {\n          color: color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 38\n        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.HStack, {\n          ml: \"auto\",\n          as: \"nav\",\n          spacing: [0, 0, 1, 1],\n          display: {\n            base: \"none\",\n            md: \"flex\"\n          },\n          children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(AllMenu, {\n            isDark: isDark,\n            items: items ? items : _definitions_navigation_main__WEBPACK_IMPORTED_MODULE_5__.main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, undefined)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, undefined), endItems ? endItems : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.HStack, {\n          children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_components_theme_switch__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(MobileNavButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, undefined)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, undefined)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, undefined), children ? children : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_mobile_navbar__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 32\n      }, undefined)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, undefined)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, undefined);\n};\n\nif (_definitions_utils__WEBPACK_IMPORTED_MODULE_6__.__DEV__) {\n  NavbarDefault.displayName = \"NavbarDefault\";\n}\n\nconst AllMenu = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(({\n  isDark,\n  items\n}) => {\n  const buttonStyle = {\n    color: isDark ? \"whiteAlpha.900\" : \"inherit\",\n    _hover: {\n      bg: isDark ? (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.useColorModeValue)(\"whiteAlpha.300\", \"whiteAlpha.200\") : (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.useColorModeValue)(\"blackAlpha.100\", \"whiteAlpha.200\")\n    },\n    _active: {\n      bg: isDark ? (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.useColorModeValue)(\"whiteAlpha.500\", \"whiteAlpha.300\") : (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.useColorModeValue)(\"blackAlpha.200\", \"whiteAlpha.300\")\n    }\n  };\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.Fragment, {\n    children: items.map((item, index) => {\n      return item !== null && item !== void 0 && item.subitems ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.Menu, {\n        id: item.title,\n        isLazy: true,\n        children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.MenuButton, _objectSpread(_objectSpread({\n          variant: \"ghost\",\n          as: _chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.Button,\n          rightIcon: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_chakra_ui_icons__WEBPACK_IMPORTED_MODULE_2__.ChevronDownIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 28\n          }, undefined),\n          fontSize: \"xl\"\n        }, buttonStyle), {}, {\n          children: item.title\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.MenuList, {\n          overflowX: \"auto\",\n          maxHeight: \"75vh\",\n          zIndex: \"dropdown\",\n          sx: (0,_definitions_utils_scrollbar__WEBPACK_IMPORTED_MODULE_7__[\"default\"])(),\n          children: item.subitems.map((sub, idx) => {\n            return sub.title == \"---\" ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.MenuDivider, {}, `${sub.title}-${idx}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, undefined) : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(MenuSubItem, _objectSpread({}, sub), `${sub.title}-${idx}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }, undefined);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, undefined)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, undefined) : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n        href: item.href,\n        passHref: true,\n        children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.Button, _objectSpread(_objectSpread({\n          variant: \"ghost\",\n          fontSize: \"xl\"\n        }, buttonStyle), {}, {\n          children: [item.title, /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_menu_item_tag__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n            title: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, undefined)]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, undefined)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, undefined);\n    })\n  }, void 0, false);\n});\n\nif (_definitions_utils__WEBPACK_IMPORTED_MODULE_6__.__DEV__) {\n  AllMenu.displayName = \"AllMenu\";\n}\n\nconst MenuSubItem = ({\n  title,\n  href\n}) => {\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.Fragment, {\n    children: href ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)((next_link__WEBPACK_IMPORTED_MODULE_1___default()), {\n      href: href,\n      passHref: true,\n      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.MenuItem, {\n        justifyContent: \"space-between\",\n        children: [title, /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_menu_item_tag__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n          title: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, undefined)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, undefined)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, undefined) : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.Flex, {\n      py: \"0.4rem\",\n      px: \"0.8rem\",\n      justifyContent: \"space-between\",\n      children: [title, /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_menu_item_tag__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, undefined)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, undefined)\n  }, void 0, false);\n};\n\nif (_definitions_utils__WEBPACK_IMPORTED_MODULE_6__.__DEV__) {\n  MenuSubItem.displayName = \"MenuSubItem\";\n}\n\nconst MobileNavButton = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(() => {\n  const {\n    state,\n    dispatch\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(_definitions_context_mobile_menu__WEBPACK_IMPORTED_MODULE_4__.MobileMenuCtx);\n  const toggleHandler = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(() => {\n    dispatch({\n      type: _definitions_context_mobile_menu__WEBPACK_IMPORTED_MODULE_4__.MobileMenuActions.TOGGLE\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.IconButton, {\n    size: \"md\",\n    icon: state.isOpen ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_chakra_ui_icons__WEBPACK_IMPORTED_MODULE_2__.CloseIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 28\n    }, undefined) : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_12__.jsxDEV)(_chakra_ui_icons__WEBPACK_IMPORTED_MODULE_2__.HamburgerIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 44\n    }, undefined),\n    \"aria-label\": \"Open Menu\",\n    display: {\n      md: \"none\"\n    },\n    onClick: toggleHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, undefined);\n});\n\nif (_definitions_utils__WEBPACK_IMPORTED_MODULE_6__.__DEV__) {\n  MobileNavButton.displayName = \"MobileNavButton\";\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.memo)(NavbarDefault));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/navbar/navbar-default.tsx\n");

/***/ }),

/***/ "./src/components/theme-switch/index.tsx":
/*!***********************************************!*\
  !*** ./src/components/theme-switch/index.tsx ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_icons_all_files_io5_IoSunny_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-icons-all-files/io5/IoSunny.js */ \"react-icons-all-files/io5/IoSunny.js\");\n/* harmony import */ var react_icons_all_files_io5_IoSunny_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_icons_all_files_io5_IoSunny_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_icons_all_files_io5_IoMoon_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-icons-all-files/io5/IoMoon.js */ \"react-icons-all-files/io5/IoMoon.js\");\n/* harmony import */ var react_icons_all_files_io5_IoMoon_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_icons_all_files_io5_IoMoon_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @chakra-ui/react */ \"@chakra-ui/react\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__);\n\n\nvar _jsxFileName = \"D:\\\\dev\\\\sbx\\\\site\\\\source\\\\SBX-WEB\\\\src\\\\components\\\\theme-switch\\\\index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nconst ThemeSwitch = props => {\n  const {\n    colorMode,\n    toggleColorMode\n  } = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.useColorMode)();\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_3__.Button, _objectSpread(_objectSpread({\n    flexShrink: 0,\n    variant: \"ghost\",\n    size: \"md\",\n    onClick: toggleColorMode\n  }, props), {}, {\n    children: colorMode === \"light\" ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(react_icons_all_files_io5_IoMoon_js__WEBPACK_IMPORTED_MODULE_1__.IoMoon, {\n      size: \"12px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 32\n    }, undefined) : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_4__.jsxDEV)(react_icons_all_files_io5_IoSunny_js__WEBPACK_IMPORTED_MODULE_0__.IoSunny, {\n      size: \"12px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 57\n    }, undefined)\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, undefined);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_2__.memo)(ThemeSwitch));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy90aGVtZS1zd2l0Y2gvaW5kZXgudHN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUVBO0FBRUE7OztBQUVBLE1BQU1JLFdBQWtDLEdBQUlDLEtBQUQsSUFBVztBQUNwRCxRQUFNO0FBQUVDLElBQUFBLFNBQUY7QUFBYUMsSUFBQUE7QUFBYixNQUFpQ0osOERBQVksRUFBbkQ7QUFFQSxzQkFDRSw4REFBQyxvREFBRDtBQUNFLGNBQVUsRUFBRSxDQURkO0FBRUUsV0FBTyxFQUFDLE9BRlY7QUFHRSxRQUFJLEVBQUMsSUFIUDtBQUlFLFdBQU8sRUFBRUk7QUFKWCxLQUtNRixLQUxOO0FBQUEsY0FPR0MsU0FBUyxLQUFLLE9BQWQsZ0JBQXdCO0FBQVEsVUFBSSxFQUFDO0FBQWI7QUFBQTtBQUFBO0FBQUE7QUFBQSxpQkFBeEIsZ0JBQWlEO0FBQVMsVUFBSSxFQUFDO0FBQWQ7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQVBwRDtBQUFBO0FBQUE7QUFBQTtBQUFBLGVBREY7QUFXRCxDQWREOztBQWdCQSw4RUFBZUwsMkNBQUksQ0FBQ0csV0FBRCxDQUFuQiIsInNvdXJjZXMiOlsid2VicGFjazovL21lcmN1cnkvLi9zcmMvY29tcG9uZW50cy90aGVtZS1zd2l0Y2gvaW5kZXgudHN4P2NmYjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW9Nb29uLCBJb1N1bm55IH0gZnJvbSBcIkByZWFjdC1pY29uc1wiO1xuXG5pbXBvcnQgUmVhY3QsIHsgbWVtbyB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgeyBCdXR0b24sIENoYWtyYVByb3BzLCB1c2VDb2xvck1vZGUgfSBmcm9tIFwiQGNoYWtyYS11aS9yZWFjdFwiO1xuXG5jb25zdCBUaGVtZVN3aXRjaDogUmVhY3QuRkM8Q2hha3JhUHJvcHM+ID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IHsgY29sb3JNb2RlLCB0b2dnbGVDb2xvck1vZGUgfSA9IHVzZUNvbG9yTW9kZSgpO1xuXG4gIHJldHVybiAoXG4gICAgPEJ1dHRvblxuICAgICAgZmxleFNocmluaz17MH1cbiAgICAgIHZhcmlhbnQ9XCJnaG9zdFwiXG4gICAgICBzaXplPVwibWRcIlxuICAgICAgb25DbGljaz17dG9nZ2xlQ29sb3JNb2RlfVxuICAgICAgey4uLnByb3BzfVxuICAgID5cbiAgICAgIHtjb2xvck1vZGUgPT09IFwibGlnaHRcIiA/IDxJb01vb24gc2l6ZT1cIjEycHhcIiAvPiA6IDxJb1N1bm55IHNpemU9XCIxMnB4XCIgLz59XG4gICAgPC9CdXR0b24+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBtZW1vKFRoZW1lU3dpdGNoKTtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsIm1lbW8iLCJCdXR0b24iLCJ1c2VDb2xvck1vZGUiLCJUaGVtZVN3aXRjaCIsInByb3BzIiwiY29sb3JNb2RlIiwidG9nZ2xlQ29sb3JNb2RlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/theme-switch/index.tsx\n");

/***/ }),

/***/ "./src/definitions/context/mobile.menu.tsx":
/*!*************************************************!*\
  !*** ./src/definitions/context/mobile.menu.tsx ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MobileMenuActions\": () => (/* binding */ MobileMenuActions),\n/* harmony export */   \"MobileMenuCtx\": () => (/* binding */ MobileMenuCtx),\n/* harmony export */   \"MobileMenuProvider\": () => (/* binding */ MobileMenuProvider)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__);\nvar _jsxFileName = \"D:\\\\dev\\\\sbx\\\\site\\\\source\\\\SBX-WEB\\\\src\\\\definitions\\\\context\\\\mobile.menu.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\nlet MobileMenuActions;\n\n(function (MobileMenuActions) {\n  MobileMenuActions[\"TOGGLE\"] = \"TOGGLE\";\n  MobileMenuActions[\"CLOSE\"] = \"CLOSE\";\n})(MobileMenuActions || (MobileMenuActions = {}));\n\nconst initialState = {\n  isOpen: false\n};\nconst MobileMenuCtx = /*#__PURE__*/(0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({\n  state: initialState,\n  dispatch: () => null\n});\n\nfunction reducer(state, action) {\n  // const { type, payload } = action;\n  switch (action.type) {\n    case \"TOGGLE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isOpen: !state.isOpen\n      });\n\n    case \"CLOSE\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isOpen: false\n      });\n\n    default:\n      return state;\n  }\n}\n\nconst MobileMenuProvider = ({\n  children\n}) => {\n  const {\n    0: state,\n    1: dispatch\n  } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useReducer)(reducer, initialState);\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(MobileMenuCtx.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, undefined);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGVmaW5pdGlvbnMvY29udGV4dC9tb2JpbGUubWVudS50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7O0FBRU8sSUFBS0csaUJBQVo7O1dBQVlBO0FBQUFBLEVBQUFBO0FBQUFBLEVBQUFBO0dBQUFBLHNCQUFBQTs7QUFjWixNQUFNQyxZQUFxQixHQUFHO0FBQzVCQyxFQUFBQSxNQUFNLEVBQUU7QUFEb0IsQ0FBOUI7QUFJTyxNQUFNQyxhQUFhLGdCQUFHSixvREFBYSxDQUl2QztBQUNESyxFQUFBQSxLQUFLLEVBQUVILFlBRE47QUFFREksRUFBQUEsUUFBUSxFQUFFLE1BQU07QUFGZixDQUp1QyxDQUFuQzs7QUFTUCxTQUFTQyxPQUFULENBQWlCRixLQUFqQixFQUFpQ0csTUFBakMsRUFBNEQ7QUFDMUQ7QUFDQSxVQUFRQSxNQUFNLENBQUNDLElBQWY7QUFDRSxTQUFLLFFBQUw7QUFDRSw2Q0FDS0osS0FETDtBQUVFRixRQUFBQSxNQUFNLEVBQUUsQ0FBQ0UsS0FBSyxDQUFDRjtBQUZqQjs7QUFJRixTQUFLLE9BQUw7QUFDRSw2Q0FDS0UsS0FETDtBQUVFRixRQUFBQSxNQUFNLEVBQUU7QUFGVjs7QUFJRjtBQUNFLGFBQU9FLEtBQVA7QUFaSjtBQWNEOztBQUVNLE1BQU1LLGtCQUE0QixHQUFHLENBQUM7QUFBRUMsRUFBQUE7QUFBRixDQUFELEtBQStCO0FBQ3pFLFFBQU07QUFBQSxPQUFDTixLQUFEO0FBQUEsT0FBUUM7QUFBUixNQUFvQlAsaURBQVUsQ0FBQ1EsT0FBRCxFQUFVTCxZQUFWLENBQXBDO0FBQ0Esc0JBQ0UsOERBQUMsYUFBRCxDQUFlLFFBQWY7QUFBd0IsU0FBSyxFQUFFO0FBQUVHLE1BQUFBLEtBQUY7QUFBU0MsTUFBQUE7QUFBVCxLQUEvQjtBQUFBLGNBQ0dLO0FBREg7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQURGO0FBS0QsQ0FQTSIsInNvdXJjZXMiOlsid2VicGFjazovL21lcmN1cnkvLi9zcmMvZGVmaW5pdGlvbnMvY29udGV4dC9tb2JpbGUubWVudS50c3g/MGZhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVkdWNlciwgY3JlYXRlQ29udGV4dCB9IGZyb20gXCJyZWFjdFwiO1xuXG5leHBvcnQgZW51bSBNb2JpbGVNZW51QWN0aW9ucyB7XG4gIFRPR0dMRSA9IFwiVE9HR0xFXCIsXG4gIENMT1NFID0gXCJDTE9TRVwiLFxufVxuXG50eXBlIFRfQWN0aW9uID0ge1xuICB0eXBlOiBNb2JpbGVNZW51QWN0aW9ucztcbiAgcGF5bG9hZD86IGJvb2xlYW47XG59O1xuXG50eXBlIFRfU3RhdGUgPSB7XG4gIGlzT3BlbjogYm9vbGVhbjtcbn07XG5cbmNvbnN0IGluaXRpYWxTdGF0ZTogVF9TdGF0ZSA9IHtcbiAgaXNPcGVuOiBmYWxzZSxcbn07XG5cbmV4cG9ydCBjb25zdCBNb2JpbGVNZW51Q3R4ID0gY3JlYXRlQ29udGV4dDx7XG4gIHN0YXRlOiBUX1N0YXRlO1xuICAvLyBkaXNwYXRjaDogUmVhY3QuRGlzcGF0Y2g8YW55PjtcbiAgZGlzcGF0Y2g6IFJlYWN0LkRpc3BhdGNoPFRfQWN0aW9uPjtcbn0+KHtcbiAgc3RhdGU6IGluaXRpYWxTdGF0ZSxcbiAgZGlzcGF0Y2g6ICgpID0+IG51bGwsXG59KTtcblxuZnVuY3Rpb24gcmVkdWNlcihzdGF0ZTogVF9TdGF0ZSwgYWN0aW9uOiBUX0FjdGlvbik6IFRfU3RhdGUge1xuICAvLyBjb25zdCB7IHR5cGUsIHBheWxvYWQgfSA9IGFjdGlvbjtcbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgXCJUT0dHTEVcIjpcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLnN0YXRlLFxuICAgICAgICBpc09wZW46ICFzdGF0ZS5pc09wZW4sXG4gICAgICB9O1xuICAgIGNhc2UgXCJDTE9TRVwiOlxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgLi4uc3RhdGUsXG4gICAgICAgIGlzT3BlbjogZmFsc2UsXG4gICAgICB9O1xuICAgIGRlZmF1bHQ6XG4gICAgICByZXR1cm4gc3RhdGU7XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IE1vYmlsZU1lbnVQcm92aWRlcjogUmVhY3QuRkMgPSAoeyBjaGlsZHJlbiB9KTogSlNYLkVsZW1lbnQgPT4ge1xuICBjb25zdCBbc3RhdGUsIGRpc3BhdGNoXSA9IHVzZVJlZHVjZXIocmVkdWNlciwgaW5pdGlhbFN0YXRlKTtcbiAgcmV0dXJuIChcbiAgICA8TW9iaWxlTWVudUN0eC5Qcm92aWRlciB2YWx1ZT17eyBzdGF0ZSwgZGlzcGF0Y2ggfX0+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9Nb2JpbGVNZW51Q3R4LlByb3ZpZGVyPlxuICApO1xufTtcbiJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZVJlZHVjZXIiLCJjcmVhdGVDb250ZXh0IiwiTW9iaWxlTWVudUFjdGlvbnMiLCJpbml0aWFsU3RhdGUiLCJpc09wZW4iLCJNb2JpbGVNZW51Q3R4Iiwic3RhdGUiLCJkaXNwYXRjaCIsInJlZHVjZXIiLCJhY3Rpb24iLCJ0eXBlIiwiTW9iaWxlTWVudVByb3ZpZGVyIiwiY2hpbGRyZW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/definitions/context/mobile.menu.tsx\n");

/***/ }),

/***/ "./src/definitions/site/index.ts":
/*!***************************************!*\
  !*** ./src/definitions/site/index.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst Site = {\n  name: \"SBX\",\n  company: \"SBX\",\n  slogan: \"SBX\",\n  description: \"\",\n  address: \"\",\n  purchase: \"https://creativemarket.com/themebiotic\"\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Site);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGVmaW5pdGlvbnMvc2l0ZS9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsSUFBSSxHQUFHO0FBQ1hDLEVBQUFBLElBQUksRUFBRSxLQURLO0FBRVhDLEVBQUFBLE9BQU8sRUFBRSxLQUZFO0FBR1hDLEVBQUFBLE1BQU0sRUFBRSxLQUhHO0FBSVhDLEVBQUFBLFdBQVcsRUFBRSxFQUpGO0FBS1hDLEVBQUFBLE9BQU8sRUFBRSxFQUxFO0FBTVhDLEVBQUFBLFFBQVEsRUFBRUMsd0NBQWtDRTtBQU5qQyxDQUFiO0FBU0EsaUVBQWVULElBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXJjdXJ5Ly4vc3JjL2RlZmluaXRpb25zL3NpdGUvaW5kZXgudHM/MjAyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBTaXRlID0ge1xuICBuYW1lOiBcIlNCWFwiLFxuICBjb21wYW55OiBcIlNCWFwiLFxuICBzbG9nYW46IFwiU0JYXCIsXG4gIGRlc2NyaXB0aW9uOiBcIlwiLFxuICBhZGRyZXNzOiBcIlwiLFxuICBwdXJjaGFzZTogcHJvY2Vzcy5lbnYuVEVNUExBVEVfUFVSQ0hBU0VfTElOSyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFNpdGU7XG4iXSwibmFtZXMiOlsiU2l0ZSIsIm5hbWUiLCJjb21wYW55Iiwic2xvZ2FuIiwiZGVzY3JpcHRpb24iLCJhZGRyZXNzIiwicHVyY2hhc2UiLCJwcm9jZXNzIiwiZW52IiwiVEVNUExBVEVfUFVSQ0hBU0VfTElOSyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/definitions/site/index.ts\n");

/***/ }),

/***/ "./src/definitions/utils/scrollbar.ts":
/*!********************************************!*\
  !*** ./src/definitions/utils/scrollbar.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @chakra-ui/react */ \"@chakra-ui/react\");\n/* harmony import */ var _chakra_ui_react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst customScrollbar = () => {\n  const scrollColor = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__.useColorModeValue)(\"blackAlpha.400\", \"whiteAlpha.400\");\n  const mozBgColor = \"transparent\";\n  const mozScrollColorLight = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__.useToken)(\"colors\", \"blackAlpha.400\");\n  const mozScrollColorDark = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__.useToken)(\"colors\", \"whiteAlpha.400\");\n  const mozScrollColor = (0,_chakra_ui_react__WEBPACK_IMPORTED_MODULE_0__.useColorModeValue)(mozScrollColorLight, mozScrollColorDark);\n  return {\n    \"&:hover::-webkit-scrollbar\": {\n      height: \"8px\",\n      width: \"8px\"\n    },\n    \"::-webkit-scrollbar\": {\n      height: \"2px\",\n      width: \"2px\"\n    },\n    \"::-webkit-scrollbar-track\": {\n      background: \"transparent\" // WebkitBoxShadow: \"inset 0 0 6px rgba(0,0,0,0.3)\",\n\n    },\n    \"::-webkit-scrollbar-thumb\": {\n      backgroundColor: scrollColor,\n      // background: var(--chakra-colors-gray-700),\n      borderRadius: \"20px\" // outline: \"1px solid slategrey\",\n\n    },\n    // Firefox -moz\n    \"&\": {\n      scrollbarColor: `${mozScrollColor} ${mozBgColor}`,\n      scrollbarWidth: \"thin\"\n    }\n  };\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (customScrollbar);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGVmaW5pdGlvbnMvdXRpbHMvc2Nyb2xsYmFyLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOztBQUdBLE1BQU1FLGVBQWUsR0FBRyxNQUFpQjtBQUN2QyxRQUFNQyxXQUFXLEdBQUdILG1FQUFpQixDQUFDLGdCQUFELEVBQW1CLGdCQUFuQixDQUFyQztBQUNBLFFBQU1JLFVBQVUsR0FBRyxhQUFuQjtBQUNBLFFBQU1DLG1CQUFtQixHQUFHSiwwREFBUSxDQUFDLFFBQUQsRUFBVyxnQkFBWCxDQUFwQztBQUNBLFFBQU1LLGtCQUFrQixHQUFHTCwwREFBUSxDQUFDLFFBQUQsRUFBVyxnQkFBWCxDQUFuQztBQUNBLFFBQU1NLGNBQWMsR0FBR1AsbUVBQWlCLENBQ3RDSyxtQkFEc0MsRUFFdENDLGtCQUZzQyxDQUF4QztBQUlBLFNBQU87QUFDTCxrQ0FBOEI7QUFDNUJFLE1BQUFBLE1BQU0sRUFBRSxLQURvQjtBQUU1QkMsTUFBQUEsS0FBSyxFQUFFO0FBRnFCLEtBRHpCO0FBS0wsMkJBQXVCO0FBQ3JCRCxNQUFBQSxNQUFNLEVBQUUsS0FEYTtBQUVyQkMsTUFBQUEsS0FBSyxFQUFFO0FBRmMsS0FMbEI7QUFTTCxpQ0FBNkI7QUFDM0JDLE1BQUFBLFVBQVUsRUFBRSxhQURlLENBRTNCOztBQUYyQixLQVR4QjtBQWFMLGlDQUE2QjtBQUMzQkMsTUFBQUEsZUFBZSxFQUFFUixXQURVO0FBRTNCO0FBQ0FTLE1BQUFBLFlBQVksRUFBRSxNQUhhLENBSTNCOztBQUoyQixLQWJ4QjtBQW1CTDtBQUNBLFNBQUs7QUFDSEMsTUFBQUEsY0FBYyxFQUFHLEdBQUVOLGNBQWUsSUFBR0gsVUFBVyxFQUQ3QztBQUVIVSxNQUFBQSxjQUFjLEVBQUU7QUFGYjtBQXBCQSxHQUFQO0FBeUJELENBbENEOztBQW9DQSxpRUFBZVosZUFBZiIsInNvdXJjZXMiOlsid2VicGFjazovL21lcmN1cnkvLi9zcmMvZGVmaW5pdGlvbnMvdXRpbHMvc2Nyb2xsYmFyLnRzPzRmNjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlQ29sb3JNb2RlVmFsdWUsIHVzZVRva2VuIH0gZnJvbSBcIkBjaGFrcmEtdWkvcmVhY3RcIjtcbmltcG9ydCB7IENTU09iamVjdCB9IGZyb20gXCJAY2hha3JhLXVpL3N0eWxlZC1zeXN0ZW1cIjtcblxuY29uc3QgY3VzdG9tU2Nyb2xsYmFyID0gKCk6IENTU09iamVjdCA9PiB7XG4gIGNvbnN0IHNjcm9sbENvbG9yID0gdXNlQ29sb3JNb2RlVmFsdWUoXCJibGFja0FscGhhLjQwMFwiLCBcIndoaXRlQWxwaGEuNDAwXCIpO1xuICBjb25zdCBtb3pCZ0NvbG9yID0gXCJ0cmFuc3BhcmVudFwiO1xuICBjb25zdCBtb3pTY3JvbGxDb2xvckxpZ2h0ID0gdXNlVG9rZW4oXCJjb2xvcnNcIiwgXCJibGFja0FscGhhLjQwMFwiKTtcbiAgY29uc3QgbW96U2Nyb2xsQ29sb3JEYXJrID0gdXNlVG9rZW4oXCJjb2xvcnNcIiwgXCJ3aGl0ZUFscGhhLjQwMFwiKTtcbiAgY29uc3QgbW96U2Nyb2xsQ29sb3IgPSB1c2VDb2xvck1vZGVWYWx1ZShcbiAgICBtb3pTY3JvbGxDb2xvckxpZ2h0LFxuICAgIG1velNjcm9sbENvbG9yRGFyayxcbiAgKTtcbiAgcmV0dXJuIHtcbiAgICBcIiY6aG92ZXI6Oi13ZWJraXQtc2Nyb2xsYmFyXCI6IHtcbiAgICAgIGhlaWdodDogXCI4cHhcIixcbiAgICAgIHdpZHRoOiBcIjhweFwiLFxuICAgIH0sXG4gICAgXCI6Oi13ZWJraXQtc2Nyb2xsYmFyXCI6IHtcbiAgICAgIGhlaWdodDogXCIycHhcIixcbiAgICAgIHdpZHRoOiBcIjJweFwiLFxuICAgIH0sXG4gICAgXCI6Oi13ZWJraXQtc2Nyb2xsYmFyLXRyYWNrXCI6IHtcbiAgICAgIGJhY2tncm91bmQ6IFwidHJhbnNwYXJlbnRcIixcbiAgICAgIC8vIFdlYmtpdEJveFNoYWRvdzogXCJpbnNldCAwIDAgNnB4IHJnYmEoMCwwLDAsMC4zKVwiLFxuICAgIH0sXG4gICAgXCI6Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iXCI6IHtcbiAgICAgIGJhY2tncm91bmRDb2xvcjogc2Nyb2xsQ29sb3IsXG4gICAgICAvLyBiYWNrZ3JvdW5kOiB2YXIoLS1jaGFrcmEtY29sb3JzLWdyYXktNzAwKSxcbiAgICAgIGJvcmRlclJhZGl1czogXCIyMHB4XCIsXG4gICAgICAvLyBvdXRsaW5lOiBcIjFweCBzb2xpZCBzbGF0ZWdyZXlcIixcbiAgICB9LFxuICAgIC8vIEZpcmVmb3ggLW1velxuICAgIFwiJlwiOiB7XG4gICAgICBzY3JvbGxiYXJDb2xvcjogYCR7bW96U2Nyb2xsQ29sb3J9ICR7bW96QmdDb2xvcn1gLFxuICAgICAgc2Nyb2xsYmFyV2lkdGg6IFwidGhpblwiLFxuICAgIH0sXG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjdXN0b21TY3JvbGxiYXI7XG4iXSwibmFtZXMiOlsidXNlQ29sb3JNb2RlVmFsdWUiLCJ1c2VUb2tlbiIsImN1c3RvbVNjcm9sbGJhciIsInNjcm9sbENvbG9yIiwibW96QmdDb2xvciIsIm1velNjcm9sbENvbG9yTGlnaHQiLCJtb3pTY3JvbGxDb2xvckRhcmsiLCJtb3pTY3JvbGxDb2xvciIsImhlaWdodCIsIndpZHRoIiwiYmFja2dyb3VuZCIsImJhY2tncm91bmRDb2xvciIsImJvcmRlclJhZGl1cyIsInNjcm9sbGJhckNvbG9yIiwic2Nyb2xsYmFyV2lkdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/definitions/utils/scrollbar.ts\n");

/***/ }),

/***/ "./src/pages/home/components/HeroSection/components/CanvasDisplay.tsx":
/*!****************************************************************************!*\
  !*** ./src/pages/home/components/HeroSection/components/CanvasDisplay.tsx ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! styled-components */ \"styled-components\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(styled_components__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_main__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/main */ \"./src/pages/home/components/HeroSection/components/utils/main.ts\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__);\nvar _jsxFileName = \"D:\\\\dev\\\\sbx\\\\site\\\\source\\\\SBX-WEB\\\\src\\\\pages\\\\home\\\\components\\\\HeroSection\\\\components\\\\CanvasDisplay.tsx\";\n\n\n\n\nconst StyledCanvas = (styled_components__WEBPACK_IMPORTED_MODULE_1___default().canvas)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  /* z-index: -1; */\n  /* cursor: pointer; */\n  cursor: grab;\n  /* border: 2px dashed red; */\n`;\n\nconst CanvasDisplay = ({\n  className,\n  width: widthFromProps,\n  height: heightFromProps,\n  globeConfig: globConfig\n}) => {\n  const ref = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    const canvas = ref.current;\n    if (!canvas) return;\n    const width = widthFromProps || canvas.getBoundingClientRect().width;\n    const height = heightFromProps || canvas.getBoundingClientRect().height;\n    canvas.width = width;\n    canvas.height = height;\n    (0,_utils_main__WEBPACK_IMPORTED_MODULE_2__.init)(canvas, globConfig);\n  }, [widthFromProps, heightFromProps, globConfig]);\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_3__.jsxDEV)(StyledCanvas, {\n    id: \"bg-interactive-display\",\n    ref: ref,\n    width: \"500\",\n    height: \"500\",\n    className: className\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, undefined);\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CanvasDisplay);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvaG9tZS9jb21wb25lbnRzL0hlcm9TZWN0aW9uL2NvbXBvbmVudHMvQ2FudmFzRGlzcGxheS50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7QUFFQTtBQUdBOztBQUVBLE1BQU1LLFlBQVksR0FBR0YsaUVBQWM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FWQTs7QUFZQSxNQUFNSSxhQVdKLEdBQUcsQ0FBQztBQUNKQyxFQUFBQSxTQURJO0FBRUpDLEVBQUFBLEtBQUssRUFBRUMsY0FGSDtBQUdKQyxFQUFBQSxNQUFNLEVBQUVDLGVBSEo7QUFJSkMsRUFBQUEsV0FBVyxFQUFFQztBQUpULENBQUQsS0FLQztBQUNKLFFBQU1DLEdBQUcsR0FBR2IsNkNBQU0sQ0FBMkIsSUFBM0IsQ0FBbEI7QUFFQUQsRUFBQUEsZ0RBQVMsQ0FBQyxNQUFNO0FBQ2QsVUFBTUssTUFBTSxHQUFHUyxHQUFHLENBQUNDLE9BQW5CO0FBQ0EsUUFBSSxDQUFDVixNQUFMLEVBQWE7QUFFYixVQUFNRyxLQUFLLEdBQUdDLGNBQWMsSUFBSUosTUFBTSxDQUFDVyxxQkFBUCxHQUErQlIsS0FBL0Q7QUFDQSxVQUFNRSxNQUFNLEdBQUdDLGVBQWUsSUFBSU4sTUFBTSxDQUFDVyxxQkFBUCxHQUErQk4sTUFBakU7QUFDQUwsSUFBQUEsTUFBTSxDQUFDRyxLQUFQLEdBQWVBLEtBQWY7QUFDQUgsSUFBQUEsTUFBTSxDQUFDSyxNQUFQLEdBQWdCQSxNQUFoQjtBQUVBUCxJQUFBQSxpREFBSSxDQUFDRSxNQUFELEVBQVNRLFVBQVQsQ0FBSjtBQUNELEdBVlEsRUFVTixDQUFDSixjQUFELEVBQWlCRSxlQUFqQixFQUFrQ0UsVUFBbEMsQ0FWTSxDQUFUO0FBWUEsc0JBQ0UsOERBQUMsWUFBRDtBQUNFLE1BQUUsRUFBQyx3QkFETDtBQUVFLE9BQUcsRUFBRUMsR0FGUDtBQUdFLFNBQUssRUFBQyxLQUhSO0FBSUUsVUFBTSxFQUFDLEtBSlQ7QUFLRSxhQUFTLEVBQUVQO0FBTGI7QUFBQTtBQUFBO0FBQUE7QUFBQSxlQURGO0FBU0QsQ0F4Q0Q7O0FBMENBLGlFQUFlRCxhQUFmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVyY3VyeS8uL3NyYy9wYWdlcy9ob21lL2NvbXBvbmVudHMvSGVyb1NlY3Rpb24vY29tcG9uZW50cy9DYW52YXNEaXNwbGF5LnRzeD9mNjg1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgc3R5bGVkIGZyb20gXCJzdHlsZWQtY29tcG9uZW50c1wiO1xuXG5pbXBvcnQgeyBQb2ludDNEIH0gZnJvbSBcIi4vY2xhc3Nlc1wiO1xuaW1wb3J0IHsgaW5pdCB9IGZyb20gXCIuL3V0aWxzL21haW5cIjtcblxuY29uc3QgU3R5bGVkQ2FudmFzID0gc3R5bGVkLmNhbnZhc2BcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgLyogei1pbmRleDogLTE7ICovXG4gIC8qIGN1cnNvcjogcG9pbnRlcjsgKi9cbiAgY3Vyc29yOiBncmFiO1xuICAvKiBib3JkZXI6IDJweCBkYXNoZWQgcmVkOyAqL1xuYDtcblxuY29uc3QgQ2FudmFzRGlzcGxheTogUmVhY3QuRkM8e1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIHdpZHRoPzogbnVtYmVyO1xuICBoZWlnaHQ/OiBudW1iZXI7XG4gIGdsb2JlQ29uZmlnPzoge1xuICAgIHJhZGl1cz86IG51bWJlcjtcbiAgICByaW5ncz86IG51bWJlcjtcbiAgICBzbGljZXM/OiBudW1iZXI7XG4gICAgZ2xvYmVSZW5kZXJPZmZzZXQ/OiBQb2ludDNEO1xuICAgIGdsb2JlUmVuZGVyT2Zmc2V0UGVyY2VudGFnZT86IFBvaW50M0Q7XG4gIH07XG59PiA9ICh7XG4gIGNsYXNzTmFtZSxcbiAgd2lkdGg6IHdpZHRoRnJvbVByb3BzLFxuICBoZWlnaHQ6IGhlaWdodEZyb21Qcm9wcyxcbiAgZ2xvYmVDb25maWc6IGdsb2JDb25maWcsXG59KSA9PiB7XG4gIGNvbnN0IHJlZiA9IHVzZVJlZjxIVE1MQ2FudmFzRWxlbWVudCB8IG51bGw+KG51bGwpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgY2FudmFzID0gcmVmLmN1cnJlbnQ7XG4gICAgaWYgKCFjYW52YXMpIHJldHVybjtcblxuICAgIGNvbnN0IHdpZHRoID0gd2lkdGhGcm9tUHJvcHMgfHwgY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoO1xuICAgIGNvbnN0IGhlaWdodCA9IGhlaWdodEZyb21Qcm9wcyB8fCBjYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0O1xuICAgIGNhbnZhcy53aWR0aCA9IHdpZHRoO1xuICAgIGNhbnZhcy5oZWlnaHQgPSBoZWlnaHQ7XG5cbiAgICBpbml0KGNhbnZhcywgZ2xvYkNvbmZpZyk7XG4gIH0sIFt3aWR0aEZyb21Qcm9wcywgaGVpZ2h0RnJvbVByb3BzLCBnbG9iQ29uZmlnXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8U3R5bGVkQ2FudmFzXG4gICAgICBpZD1cImJnLWludGVyYWN0aXZlLWRpc3BsYXlcIlxuICAgICAgcmVmPXtyZWZ9XG4gICAgICB3aWR0aD1cIjUwMFwiXG4gICAgICBoZWlnaHQ9XCI1MDBcIlxuICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWV9XG4gICAgLz5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENhbnZhc0Rpc3BsYXk7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJzdHlsZWQiLCJpbml0IiwiU3R5bGVkQ2FudmFzIiwiY2FudmFzIiwiQ2FudmFzRGlzcGxheSIsImNsYXNzTmFtZSIsIndpZHRoIiwid2lkdGhGcm9tUHJvcHMiLCJoZWlnaHQiLCJoZWlnaHRGcm9tUHJvcHMiLCJnbG9iZUNvbmZpZyIsImdsb2JDb25maWciLCJyZWYiLCJjdXJyZW50IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/home/components/HeroSection/components/CanvasDisplay.tsx\n");

/***/ }),

/***/ "./src/pages/home/components/HeroSection/components/classes/boid.ts":
/*!**************************************************************************!*\
  !*** ./src/pages/home/components/HeroSection/components/classes/boid.ts ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Boid\": () => (/* binding */ Boid)\n/* harmony export */ });\n/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./point */ \"./src/pages/home/components/HeroSection/components/classes/point.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\nconst MAX_RADIUS = 4;\nclass Boid {\n  constructor(context, position) {\n    _defineProperty(this, \"position\", void 0);\n\n    _defineProperty(this, \"velocity\", new _point__WEBPACK_IMPORTED_MODULE_0__.Point3D());\n\n    _defineProperty(this, \"speed\", 5);\n\n    _defineProperty(this, \"context\", void 0);\n\n    _defineProperty(this, \"show\", false);\n\n    _defineProperty(this, \"radius\", 0);\n\n    _defineProperty(this, \"friction\", 0);\n\n    _defineProperty(this, \"relativeVelocity\", new _point__WEBPACK_IMPORTED_MODULE_0__.Point3D());\n\n    _defineProperty(this, \"acceleration\", 0);\n\n    _defineProperty(this, \"hideSpeed\", 0.15);\n\n    _defineProperty(this, \"applyRadiusUpdate\", () => {\n      if (this.show) {\n        this.radius += this.hideSpeed;\n        this.radius = Math.min(this.radius, MAX_RADIUS);\n      } else {\n        this.radius -= this.hideSpeed;\n        this.radius = Math.max(this.radius, 0);\n        if (this.radius < 0.1) this.radius = 0;\n      }\n    });\n\n    _defineProperty(this, \"applyFriction\", () => {\n      if (!this.friction) return;\n\n      if (Math.abs(this.velocity.x - this.friction) > this.friction) {\n        if (this.velocity.x < this.friction) {\n          this.velocity.x += this.friction;\n        } else {\n          this.velocity.x -= this.friction;\n        }\n      }\n\n      if (Math.abs(this.velocity.y - this.friction) > this.friction) {\n        if (this.velocity.y < this.friction) {\n          this.velocity.y += this.friction;\n        } else {\n          this.velocity.y -= this.friction;\n        }\n      }\n\n      if (Math.abs(this.velocity.z - this.friction) > this.friction) {\n        if (this.velocity.z < this.friction) {\n          this.velocity.z += this.friction;\n        } else {\n          this.velocity.z -= this.friction;\n        }\n      }\n    });\n\n    _defineProperty(this, \"applyAcceleration\", () => {\n      if (!this.acceleration) return;\n\n      if (this.velocity.x < 0) {\n        this.velocity.x -= this.acceleration;\n      } else {\n        this.velocity.x += this.acceleration;\n      }\n\n      if (this.velocity.y < 0) {\n        this.velocity.y -= this.acceleration;\n      } else {\n        this.velocity.y += this.acceleration;\n      }\n\n      if (this.velocity.z < this.acceleration) {\n        this.velocity.z -= this.acceleration;\n      } else {\n        this.velocity.z += this.acceleration;\n      }\n    });\n\n    _defineProperty(this, \"update\", (debug = false) => {\n      this.applyRadiusUpdate();\n      this.applyFriction();\n      this.applyAcceleration();\n      const prevPosition = this.position.clone();\n      this.position = this.position.clone().add(this.velocity);\n      this.relativeVelocity = this.position.clone().subtract(prevPosition).normalized();\n    });\n\n    _defineProperty(this, \"draw\", () => {\n      this.context.beginPath(); // this.context.fillStyle = \"#00ff00\";\n\n      this.context.fillStyle = \"#1201FF\";\n      this.context.arc(this.position.x, this.position.y, this.radius, 0, 2 * Math.PI);\n      this.context.fill();\n    });\n\n    this.context = context;\n    this.position = position;\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/home/components/HeroSection/components/classes/boid.ts\n");

/***/ }),

/***/ "./src/pages/home/components/HeroSection/components/classes/globe.ts":
/*!***************************************************************************!*\
  !*** ./src/pages/home/components/HeroSection/components/classes/globe.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Globe\": () => (/* binding */ Globe)\n/* harmony export */ });\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash/get */ \"lodash/get\");\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(lodash_get__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var lodash_set__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash/set */ \"lodash/set\");\n/* harmony import */ var lodash_set__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash_set__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constant */ \"./src/pages/home/components/HeroSection/components/constant/index.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils */ \"./src/pages/home/components/HeroSection/components/utils/index.ts\");\n/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./point */ \"./src/pages/home/components/HeroSection/components/classes/point.ts\");\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nconst GLOBE_MAX_WIDTH = 2;\nclass Globe {\n  constructor(context, _position, width, height, radius = 20.0, rings = 16, slices = 32) {\n    _defineProperty(this, \"vertices\", []);\n\n    _defineProperty(this, \"vertices2D\", []);\n\n    _defineProperty(this, \"radius\", 20.0);\n\n    _defineProperty(this, \"rings\", 16);\n\n    _defineProperty(this, \"slices\", 32);\n\n    _defineProperty(this, \"numberOfVertices\", 0);\n\n    _defineProperty(this, \"context\", void 0);\n\n    _defineProperty(this, \"position\", new _point__WEBPACK_IMPORTED_MODULE_4__.Point3D());\n\n    _defineProperty(this, \"rotation\", new _point__WEBPACK_IMPORTED_MODULE_4__.Point3D());\n\n    _defineProperty(this, \"width\", void 0);\n\n    _defineProperty(this, \"height\", void 0);\n\n    _defineProperty(this, \"lastX\", -1);\n\n    _defineProperty(this, \"lastY\", -1);\n\n    _defineProperty(this, \"distance\", 900);\n\n    _defineProperty(this, \"show\", true);\n\n    _defineProperty(this, \"lineWidth\", GLOBE_MAX_WIDTH);\n\n    _defineProperty(this, \"calculateVertices\", () => {\n      const dTheta = Math.PI * 2 / this.slices;\n      const dPhi = Math.PI / this.rings;\n\n      for (let lat = 0; lat < this.rings + 1; ++lat) {\n        const phi = _constant__WEBPACK_IMPORTED_MODULE_2__.M_PI_2 - lat * dPhi;\n        const cosPhi = Math.cos(phi);\n        const sinPhi = Math.sin(phi); // Iterate over longitudes (slices)\n\n        for (let lon = 0; lon < this.slices + 1; ++lon) {\n          this.vertices2D[this.numberOfVertices] = new _point__WEBPACK_IMPORTED_MODULE_4__.Point3D();\n          const theta = lon * dTheta;\n          const cosTheta = Math.cos(theta);\n          const sinTheta = Math.sin(theta);\n          const p = this.vertices[this.numberOfVertices] = new _point__WEBPACK_IMPORTED_MODULE_4__.Point3D();\n          p.x = this.radius * cosTheta * cosPhi;\n          p.y = this.radius * sinPhi;\n          p.z = this.radius * sinTheta * cosPhi;\n          this.numberOfVertices++;\n        }\n      }\n    });\n\n    _defineProperty(this, \"setPosition\", position => {\n      if (!this.position.isEqual(position)) {\n        this.position = position;\n      }\n    });\n\n    _defineProperty(this, \"strokeSegment\", (index, color) => {\n      const p = this.vertices2D[index];\n      if (!p) return;\n      const x = p.x;\n      const y = p.y;\n\n      if (this.lastX == -1 && this.lastY == -1) {\n        this.lastX = x;\n        this.lastY = y;\n        return;\n      }\n\n      if (x >= 0 && x < this.width && y >= 0 && y < this.height) {\n        if (p.z < 0) {\n          this.context.strokeStyle = color || \"#1201ff63\";\n        } else {\n          this.context.strokeStyle = color || \"#1201FF\"; // this.context.strokeStyle = color || \"#1201ff63\";\n        }\n\n        this.context.beginPath();\n        this.context.moveTo(this.lastX, this.lastY);\n        this.context.lineTo(x, y);\n        this.context.stroke();\n        this.context.closePath();\n        this.lastX = x;\n        this.lastY = y;\n      }\n    });\n\n    _defineProperty(this, \"drawLines\", () => {\n      for (let i = 0; i < this.numberOfVertices; i++) {\n        this.strokeSegment(i);\n      }\n\n      let color;\n\n      for (let i = 0; i < this.slices + 1; i++) {\n        for (let j = 0; j < this.rings + 1; j++) {\n          if (j <= 5) {//   color = \"red\";\n          }\n\n          this.strokeSegment(i + j * (this.slices + 1), color);\n        }\n      }\n    });\n\n    _defineProperty(this, \"drawVertices\", () => {\n      this.vertices2D.forEach(p => {\n        if (p.z < 0) {\n          // this.context.strokeStyle = \"#ff000063\";\n          this.context.strokeStyle = \"#ff0000\";\n        } else {\n          // this.context.strokeStyle = \"#ff000063\";\n          this.context.strokeStyle = \"#ff0000\";\n        }\n\n        this.context.beginPath();\n        this.context.arc(p.x, p.y, 6, 0, 2 * Math.PI);\n        this.context.stroke();\n      });\n    });\n\n    _defineProperty(this, \"applyRotation\", () => {\n      this.vertices.forEach(p => {\n        (0,_utils__WEBPACK_IMPORTED_MODULE_3__.rotateX)(p, this.rotation.x);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_3__.rotateY)(p, this.rotation.y);\n        (0,_utils__WEBPACK_IMPORTED_MODULE_3__.rotateZ)(p, this.rotation.z);\n      });\n    });\n\n    _defineProperty(this, \"applyOpacityUpdate\", () => {\n      if (this.show) {\n        this.lineWidth += 0.1;\n        this.lineWidth = Math.min(this.lineWidth, GLOBE_MAX_WIDTH);\n      } else {\n        this.lineWidth -= 0.1;\n        this.lineWidth = Math.max(this.lineWidth, 0);\n        if (this.lineWidth < 0.1) this.lineWidth = 0;\n      }\n    });\n\n    _defineProperty(this, \"applyRotationFriction\", () => {\n      const FRICTION_FACTOR = 0.5;\n      const STOP_FACTOR = 5;\n      [\"x\", \"y\", \"z\"].forEach(key => {\n        const val = lodash_get__WEBPACK_IMPORTED_MODULE_0___default()(this.rotation, key, 0);\n        let newVal = val;\n\n        if (!val) {\n          return;\n        }\n\n        let friction = newVal * FRICTION_FACTOR;\n\n        if (Math.abs(friction) < STOP_FACTOR * 2) {\n          friction *= 0.2;\n        }\n\n        if (val > STOP_FACTOR) {\n          newVal -= friction;\n        } else if (val < -STOP_FACTOR) {\n          newVal -= friction;\n        } else {\n          newVal = 0;\n        }\n\n        lodash_set__WEBPACK_IMPORTED_MODULE_1___default()(this.rotation, key, newVal);\n      });\n    });\n\n    _defineProperty(this, \"update\", () => {\n      // this.rotation.y = Math.PI / 10000;\n      this.applyOpacityUpdate();\n      this.applyRotationFriction();\n      this.applyRotation();\n      this.vertices.forEach((p, i) => {\n        this.vertices2D[i].x = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.projection)(p.x, p.z, this.position.x, 100.0, this.distance);\n        this.vertices2D[i].y = (0,_utils__WEBPACK_IMPORTED_MODULE_3__.projection)(p.y, p.z, this.position.y, 100.0, this.distance);\n        this.vertices2D[i].z = p.z;\n      });\n    });\n\n    _defineProperty(this, \"draw\", () => {\n      // this.drawVertices();\n      if (this.lineWidth < 0.1) {\n        this.context.lineWidth = 1;\n        return;\n      }\n\n      this.context.lineWidth = this.lineWidth;\n      this.drawLines();\n      this.context.lineWidth = 1;\n    });\n\n    this.context = context;\n    this.position = _position;\n    this.radius = radius;\n    this.rings = rings;\n    this.slices = slices;\n    this.width = width;\n    this.height = height;\n    this.calculateVertices();\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/home/components/HeroSection/components/classes/globe.ts\n");

/***/ }),

/***/ "./src/pages/home/components/HeroSection/components/classes/index.ts":
/*!***************************************************************************!*\
  !*** ./src/pages/home/components/HeroSection/components/classes/index.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _globe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./globe */ \"./src/pages/home/components/HeroSection/components/classes/globe.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _globe__WEBPACK_IMPORTED_MODULE_0__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _globe__WEBPACK_IMPORTED_MODULE_0__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _point__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point */ \"./src/pages/home/components/HeroSection/components/classes/point.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _point__WEBPACK_IMPORTED_MODULE_1__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _point__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n/* harmony import */ var _boid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./boid */ \"./src/pages/home/components/HeroSection/components/classes/boid.ts\");\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _boid__WEBPACK_IMPORTED_MODULE_2__) if(__WEBPACK_IMPORT_KEY__ !== \"default\") __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _boid__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvaG9tZS9jb21wb25lbnRzL0hlcm9TZWN0aW9uL2NvbXBvbmVudHMvY2xhc3Nlcy9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lcmN1cnkvLi9zcmMvcGFnZXMvaG9tZS9jb21wb25lbnRzL0hlcm9TZWN0aW9uL2NvbXBvbmVudHMvY2xhc3Nlcy9pbmRleC50cz83ZDk0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2dsb2JlXCI7XHJcbmV4cG9ydCAqIGZyb20gXCIuL3BvaW50XCI7XHJcbmV4cG9ydCAqIGZyb20gXCIuL2JvaWRcIjtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/pages/home/components/HeroSection/components/classes/index.ts\n");

/***/ }),

/***/ "./src/pages/home/components/HeroSection/components/classes/point.ts":
/*!***************************************************************************!*\
  !*** ./src/pages/home/components/HeroSection/components/classes/point.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Point3D\": () => (/* binding */ Point3D)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass Point3D {\n  constructor(x = 0, y = 0, z = 0) {\n    _defineProperty(this, \"x\", 0);\n\n    _defineProperty(this, \"y\", 0);\n\n    _defineProperty(this, \"z\", 0);\n\n    _defineProperty(this, \"normalized\", () => {\n      const m = this.x * this.x + this.y * this.y + this.z * this.z || 1;\n      return new Point3D(this.x / m, this.y / m, this.z / m);\n    });\n\n    _defineProperty(this, \"add\", v => {\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      return this;\n    });\n\n    _defineProperty(this, \"addSingleValue\", (v = 1) => {\n      this.x += v;\n      this.y += v;\n      this.z += v;\n      return this;\n    });\n\n    _defineProperty(this, \"multiply\", v => {\n      this.x *= v;\n      this.y *= v;\n      this.z *= v;\n      return this;\n    });\n\n    _defineProperty(this, \"subtract\", v => {\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      return this;\n    });\n\n    _defineProperty(this, \"subtractSingleValue\", (v = 1) => {\n      this.x -= v;\n      this.y -= v;\n      this.z -= v;\n      return this;\n    });\n\n    _defineProperty(this, \"divideSingleValue\", (v = 1) => {\n      this.x /= v;\n      this.y /= v;\n      this.z /= v;\n      return this;\n    });\n\n    _defineProperty(this, \"clone\", () => {\n      return new Point3D(this.x, this.y, this.z);\n    });\n\n    _defineProperty(this, \"copyFrom\", v => {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      return this;\n    });\n\n    _defineProperty(this, \"distanceFrom\", v => {\n      return Math.sqrt(Math.abs(v.x - this.x) + Math.abs(v.y - this.y) + Math.abs(v.z - this.z));\n    });\n\n    _defineProperty(this, \"isEqual\", v => {\n      return this.x === v.x && this.y === v.y && this.z === v.z;\n    });\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvaG9tZS9jb21wb25lbnRzL0hlcm9TZWN0aW9uL2NvbXBvbmVudHMvY2xhc3Nlcy9wb2ludC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTyxNQUFNQSxPQUFOLENBQWM7QUFLbkJDLEVBQUFBLFdBQVcsQ0FBQ0MsQ0FBUyxHQUFHLENBQWIsRUFBZ0JDLENBQVMsR0FBRyxDQUE1QixFQUErQkMsQ0FBUyxHQUFHLENBQTNDLEVBQThDO0FBQUEsK0JBSnJELENBSXFEOztBQUFBLCtCQUhyRCxDQUdxRDs7QUFBQSwrQkFGckQsQ0FFcUQ7O0FBQUEsd0NBTTVDLE1BQU07QUFDakIsWUFBTUMsQ0FBQyxHQUFHLEtBQUtILENBQUwsR0FBUyxLQUFLQSxDQUFkLEdBQWtCLEtBQUtDLENBQUwsR0FBUyxLQUFLQSxDQUFoQyxHQUFvQyxLQUFLQyxDQUFMLEdBQVMsS0FBS0EsQ0FBbEQsSUFBdUQsQ0FBakU7QUFDQSxhQUFPLElBQUlKLE9BQUosQ0FBWSxLQUFLRSxDQUFMLEdBQVNHLENBQXJCLEVBQXdCLEtBQUtGLENBQUwsR0FBU0UsQ0FBakMsRUFBb0MsS0FBS0QsQ0FBTCxHQUFTQyxDQUE3QyxDQUFQO0FBQ0QsS0FUd0Q7O0FBQUEsaUNBV2xEQyxDQUFELElBQWdCO0FBQ3BCLFdBQUtKLENBQUwsSUFBVUksQ0FBQyxDQUFDSixDQUFaO0FBQ0EsV0FBS0MsQ0FBTCxJQUFVRyxDQUFDLENBQUNILENBQVo7QUFDQSxXQUFLQyxDQUFMLElBQVVFLENBQUMsQ0FBQ0YsQ0FBWjtBQUVBLGFBQU8sSUFBUDtBQUNELEtBakJ3RDs7QUFBQSw0Q0FtQnhDLENBQUNFLENBQVMsR0FBRyxDQUFiLEtBQW1CO0FBQ2xDLFdBQUtKLENBQUwsSUFBVUksQ0FBVjtBQUNBLFdBQUtILENBQUwsSUFBVUcsQ0FBVjtBQUNBLFdBQUtGLENBQUwsSUFBVUUsQ0FBVjtBQUVBLGFBQU8sSUFBUDtBQUNELEtBekJ3RDs7QUFBQSxzQ0EyQjdDQSxDQUFELElBQWU7QUFDeEIsV0FBS0osQ0FBTCxJQUFVSSxDQUFWO0FBQ0EsV0FBS0gsQ0FBTCxJQUFVRyxDQUFWO0FBQ0EsV0FBS0YsQ0FBTCxJQUFVRSxDQUFWO0FBRUEsYUFBTyxJQUFQO0FBQ0QsS0FqQ3dEOztBQUFBLHNDQW1DN0NBLENBQUQsSUFBZ0I7QUFDekIsV0FBS0osQ0FBTCxJQUFVSSxDQUFDLENBQUNKLENBQVo7QUFDQSxXQUFLQyxDQUFMLElBQVVHLENBQUMsQ0FBQ0gsQ0FBWjtBQUNBLFdBQUtDLENBQUwsSUFBVUUsQ0FBQyxDQUFDRixDQUFaO0FBRUEsYUFBTyxJQUFQO0FBQ0QsS0F6Q3dEOztBQUFBLGlEQTJDbkMsQ0FBQ0UsQ0FBUyxHQUFHLENBQWIsS0FBbUI7QUFDdkMsV0FBS0osQ0FBTCxJQUFVSSxDQUFWO0FBQ0EsV0FBS0gsQ0FBTCxJQUFVRyxDQUFWO0FBQ0EsV0FBS0YsQ0FBTCxJQUFVRSxDQUFWO0FBRUEsYUFBTyxJQUFQO0FBQ0QsS0FqRHdEOztBQUFBLCtDQW1EckMsQ0FBQ0EsQ0FBUyxHQUFHLENBQWIsS0FBbUI7QUFDckMsV0FBS0osQ0FBTCxJQUFVSSxDQUFWO0FBQ0EsV0FBS0gsQ0FBTCxJQUFVRyxDQUFWO0FBQ0EsV0FBS0YsQ0FBTCxJQUFVRSxDQUFWO0FBRUEsYUFBTyxJQUFQO0FBQ0QsS0F6RHdEOztBQUFBLG1DQTJEakQsTUFBTTtBQUNaLGFBQU8sSUFBSU4sT0FBSixDQUFZLEtBQUtFLENBQWpCLEVBQW9CLEtBQUtDLENBQXpCLEVBQTRCLEtBQUtDLENBQWpDLENBQVA7QUFDRCxLQTdEd0Q7O0FBQUEsc0NBK0Q3Q0UsQ0FBRCxJQUFnQjtBQUN6QixXQUFLSixDQUFMLEdBQVNJLENBQUMsQ0FBQ0osQ0FBWDtBQUNBLFdBQUtDLENBQUwsR0FBU0csQ0FBQyxDQUFDSCxDQUFYO0FBQ0EsV0FBS0MsQ0FBTCxHQUFTRSxDQUFDLENBQUNGLENBQVg7QUFFQSxhQUFPLElBQVA7QUFDRCxLQXJFd0Q7O0FBQUEsMENBdUV6Q0UsQ0FBRCxJQUFnQjtBQUM3QixhQUFPQyxJQUFJLENBQUNDLElBQUwsQ0FDTEQsSUFBSSxDQUFDRSxHQUFMLENBQVNILENBQUMsQ0FBQ0osQ0FBRixHQUFNLEtBQUtBLENBQXBCLElBQXlCSyxJQUFJLENBQUNFLEdBQUwsQ0FBU0gsQ0FBQyxDQUFDSCxDQUFGLEdBQU0sS0FBS0EsQ0FBcEIsQ0FBekIsR0FBa0RJLElBQUksQ0FBQ0UsR0FBTCxDQUFTSCxDQUFDLENBQUNGLENBQUYsR0FBTSxLQUFLQSxDQUFwQixDQUQ3QyxDQUFQO0FBR0QsS0EzRXdEOztBQUFBLHFDQTZFOUNFLENBQUQsSUFBZ0I7QUFDeEIsYUFBTyxLQUFLSixDQUFMLEtBQVdJLENBQUMsQ0FBQ0osQ0FBYixJQUFrQixLQUFLQyxDQUFMLEtBQVdHLENBQUMsQ0FBQ0gsQ0FBL0IsSUFBb0MsS0FBS0MsQ0FBTCxLQUFXRSxDQUFDLENBQUNGLENBQXhEO0FBQ0QsS0EvRXdEOztBQUN2RCxTQUFLRixDQUFMLEdBQVNBLENBQVQ7QUFDQSxTQUFLQyxDQUFMLEdBQVNBLENBQVQ7QUFDQSxTQUFLQyxDQUFMLEdBQVNBLENBQVQ7QUFDRDs7QUFUa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXJjdXJ5Ly4vc3JjL3BhZ2VzL2hvbWUvY29tcG9uZW50cy9IZXJvU2VjdGlvbi9jb21wb25lbnRzL2NsYXNzZXMvcG9pbnQudHM/MGRmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgUG9pbnQzRCB7XG4gIHggPSAwO1xuICB5ID0gMDtcbiAgeiA9IDA7XG5cbiAgY29uc3RydWN0b3IoeDogbnVtYmVyID0gMCwgeTogbnVtYmVyID0gMCwgejogbnVtYmVyID0gMCkge1xuICAgIHRoaXMueCA9IHg7XG4gICAgdGhpcy55ID0geTtcbiAgICB0aGlzLnogPSB6O1xuICB9XG5cbiAgbm9ybWFsaXplZCA9ICgpID0+IHtcbiAgICBjb25zdCBtID0gdGhpcy54ICogdGhpcy54ICsgdGhpcy55ICogdGhpcy55ICsgdGhpcy56ICogdGhpcy56IHx8IDE7XG4gICAgcmV0dXJuIG5ldyBQb2ludDNEKHRoaXMueCAvIG0sIHRoaXMueSAvIG0sIHRoaXMueiAvIG0pO1xuICB9O1xuXG4gIGFkZCA9ICh2OiBQb2ludDNEKSA9PiB7XG4gICAgdGhpcy54ICs9IHYueDtcbiAgICB0aGlzLnkgKz0gdi55O1xuICAgIHRoaXMueiArPSB2Lno7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICBhZGRTaW5nbGVWYWx1ZSA9ICh2OiBudW1iZXIgPSAxKSA9PiB7XG4gICAgdGhpcy54ICs9IHY7XG4gICAgdGhpcy55ICs9IHY7XG4gICAgdGhpcy56ICs9IHY7XG5cbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICBtdWx0aXBseSA9ICh2OiBudW1iZXIpID0+IHtcbiAgICB0aGlzLnggKj0gdjtcbiAgICB0aGlzLnkgKj0gdjtcbiAgICB0aGlzLnogKj0gdjtcblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIHN1YnRyYWN0ID0gKHY6IFBvaW50M0QpID0+IHtcbiAgICB0aGlzLnggLT0gdi54O1xuICAgIHRoaXMueSAtPSB2Lnk7XG4gICAgdGhpcy56IC09IHYuejtcblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIHN1YnRyYWN0U2luZ2xlVmFsdWUgPSAodjogbnVtYmVyID0gMSkgPT4ge1xuICAgIHRoaXMueCAtPSB2O1xuICAgIHRoaXMueSAtPSB2O1xuICAgIHRoaXMueiAtPSB2O1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgZGl2aWRlU2luZ2xlVmFsdWUgPSAodjogbnVtYmVyID0gMSkgPT4ge1xuICAgIHRoaXMueCAvPSB2O1xuICAgIHRoaXMueSAvPSB2O1xuICAgIHRoaXMueiAvPSB2O1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH07XG5cbiAgY2xvbmUgPSAoKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBQb2ludDNEKHRoaXMueCwgdGhpcy55LCB0aGlzLnopO1xuICB9O1xuXG4gIGNvcHlGcm9tID0gKHY6IFBvaW50M0QpID0+IHtcbiAgICB0aGlzLnggPSB2Lng7XG4gICAgdGhpcy55ID0gdi55O1xuICAgIHRoaXMueiA9IHYuejtcblxuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIGRpc3RhbmNlRnJvbSA9ICh2OiBQb2ludDNEKSA9PiB7XG4gICAgcmV0dXJuIE1hdGguc3FydChcbiAgICAgIE1hdGguYWJzKHYueCAtIHRoaXMueCkgKyBNYXRoLmFicyh2LnkgLSB0aGlzLnkpICsgTWF0aC5hYnModi56IC0gdGhpcy56KSxcbiAgICApO1xuICB9O1xuXG4gIGlzRXF1YWwgPSAodjogUG9pbnQzRCkgPT4ge1xuICAgIHJldHVybiB0aGlzLnggPT09IHYueCAmJiB0aGlzLnkgPT09IHYueSAmJiB0aGlzLnogPT09IHYuejtcbiAgfTtcbn1cbiJdLCJuYW1lcyI6WyJQb2ludDNEIiwiY29uc3RydWN0b3IiLCJ4IiwieSIsInoiLCJtIiwidiIsIk1hdGgiLCJzcXJ0IiwiYWJzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/home/components/HeroSection/components/classes/point.ts\n");

/***/ }),

/***/ "./src/pages/home/components/HeroSection/components/constant/index.ts":
/*!****************************************************************************!*\
  !*** ./src/pages/home/components/HeroSection/components/constant/index.ts ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"M_PI_2\": () => (/* binding */ M_PI_2)\n/* harmony export */ });\nconst M_PI_2 = Math.PI / 2;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvaG9tZS9jb21wb25lbnRzL0hlcm9TZWN0aW9uL2NvbXBvbmVudHMvY29uc3RhbnQvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPLE1BQU1BLE1BQU0sR0FBR0MsSUFBSSxDQUFDQyxFQUFMLEdBQVUsQ0FBekIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXJjdXJ5Ly4vc3JjL3BhZ2VzL2hvbWUvY29tcG9uZW50cy9IZXJvU2VjdGlvbi9jb21wb25lbnRzL2NvbnN0YW50L2luZGV4LnRzP2ZhNmYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IE1fUElfMiA9IE1hdGguUEkgLyAyO1xyXG4iXSwibmFtZXMiOlsiTV9QSV8yIiwiTWF0aCIsIlBJIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/home/components/HeroSection/components/constant/index.ts\n");

/***/ }),

/***/ "./src/pages/home/components/HeroSection/components/utils/index.ts":
/*!*************************************************************************!*\
  !*** ./src/pages/home/components/HeroSection/components/utils/index.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"rotateX\": () => (/* binding */ rotateX),\n/* harmony export */   \"rotateY\": () => (/* binding */ rotateY),\n/* harmony export */   \"rotateZ\": () => (/* binding */ rotateZ),\n/* harmony export */   \"projection\": () => (/* binding */ projection)\n/* harmony export */ });\nfunction rotateX(point, radians) {\n  const y = point.y;\n  point.y = y * Math.cos(radians) + point.z * Math.sin(radians) * -1.0;\n  point.z = y * Math.sin(radians) + point.z * Math.cos(radians);\n}\nfunction rotateY(point, radians) {\n  const x = point.x;\n  point.x = x * Math.cos(radians) + point.z * Math.sin(radians) * -1.0;\n  point.z = x * Math.sin(radians) + point.z * Math.cos(radians);\n}\nfunction rotateZ(point, radians) {\n  const x = point.x;\n  point.x = x * Math.cos(radians) + point.y * Math.sin(radians) * -1.0;\n  point.y = x * Math.sin(radians) + point.y * Math.cos(radians);\n}\nfunction projection(xy, z, xyOffset, zOffset, distance) {\n  return distance * xy / (z - zOffset) + xyOffset;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvaG9tZS9jb21wb25lbnRzL0hlcm9TZWN0aW9uL2NvbXBvbmVudHMvdXRpbHMvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUVPLFNBQVNBLE9BQVQsQ0FBaUJDLEtBQWpCLEVBQWlDQyxPQUFqQyxFQUFrRDtBQUN2RCxRQUFNQyxDQUFDLEdBQUdGLEtBQUssQ0FBQ0UsQ0FBaEI7QUFDQUYsRUFBQUEsS0FBSyxDQUFDRSxDQUFOLEdBQVVBLENBQUMsR0FBR0MsSUFBSSxDQUFDQyxHQUFMLENBQVNILE9BQVQsQ0FBSixHQUF3QkQsS0FBSyxDQUFDSyxDQUFOLEdBQVVGLElBQUksQ0FBQ0csR0FBTCxDQUFTTCxPQUFULENBQVYsR0FBOEIsQ0FBQyxHQUFqRTtBQUNBRCxFQUFBQSxLQUFLLENBQUNLLENBQU4sR0FBVUgsQ0FBQyxHQUFHQyxJQUFJLENBQUNHLEdBQUwsQ0FBU0wsT0FBVCxDQUFKLEdBQXdCRCxLQUFLLENBQUNLLENBQU4sR0FBVUYsSUFBSSxDQUFDQyxHQUFMLENBQVNILE9BQVQsQ0FBNUM7QUFDRDtBQUVNLFNBQVNNLE9BQVQsQ0FBaUJQLEtBQWpCLEVBQWlDQyxPQUFqQyxFQUFrRDtBQUN2RCxRQUFNTyxDQUFDLEdBQUdSLEtBQUssQ0FBQ1EsQ0FBaEI7QUFDQVIsRUFBQUEsS0FBSyxDQUFDUSxDQUFOLEdBQVVBLENBQUMsR0FBR0wsSUFBSSxDQUFDQyxHQUFMLENBQVNILE9BQVQsQ0FBSixHQUF3QkQsS0FBSyxDQUFDSyxDQUFOLEdBQVVGLElBQUksQ0FBQ0csR0FBTCxDQUFTTCxPQUFULENBQVYsR0FBOEIsQ0FBQyxHQUFqRTtBQUNBRCxFQUFBQSxLQUFLLENBQUNLLENBQU4sR0FBVUcsQ0FBQyxHQUFHTCxJQUFJLENBQUNHLEdBQUwsQ0FBU0wsT0FBVCxDQUFKLEdBQXdCRCxLQUFLLENBQUNLLENBQU4sR0FBVUYsSUFBSSxDQUFDQyxHQUFMLENBQVNILE9BQVQsQ0FBNUM7QUFDRDtBQUVNLFNBQVNRLE9BQVQsQ0FBaUJULEtBQWpCLEVBQWlDQyxPQUFqQyxFQUFrRDtBQUN2RCxRQUFNTyxDQUFDLEdBQUdSLEtBQUssQ0FBQ1EsQ0FBaEI7QUFDQVIsRUFBQUEsS0FBSyxDQUFDUSxDQUFOLEdBQVVBLENBQUMsR0FBR0wsSUFBSSxDQUFDQyxHQUFMLENBQVNILE9BQVQsQ0FBSixHQUF3QkQsS0FBSyxDQUFDRSxDQUFOLEdBQVVDLElBQUksQ0FBQ0csR0FBTCxDQUFTTCxPQUFULENBQVYsR0FBOEIsQ0FBQyxHQUFqRTtBQUNBRCxFQUFBQSxLQUFLLENBQUNFLENBQU4sR0FBVU0sQ0FBQyxHQUFHTCxJQUFJLENBQUNHLEdBQUwsQ0FBU0wsT0FBVCxDQUFKLEdBQXdCRCxLQUFLLENBQUNFLENBQU4sR0FBVUMsSUFBSSxDQUFDQyxHQUFMLENBQVNILE9BQVQsQ0FBNUM7QUFDRDtBQUVNLFNBQVNTLFVBQVQsQ0FDTEMsRUFESyxFQUVMTixDQUZLLEVBR0xPLFFBSEssRUFJTEMsT0FKSyxFQUtMQyxRQUxLLEVBTUw7QUFDQSxTQUFRQSxRQUFRLEdBQUdILEVBQVosSUFBbUJOLENBQUMsR0FBR1EsT0FBdkIsSUFBa0NELFFBQXpDO0FBQ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXJjdXJ5Ly4vc3JjL3BhZ2VzL2hvbWUvY29tcG9uZW50cy9IZXJvU2VjdGlvbi9jb21wb25lbnRzL3V0aWxzL2luZGV4LnRzP2ZlMDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUG9pbnQzRCB9IGZyb20gXCIuLi9jbGFzc2VzXCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcm90YXRlWChwb2ludDogUG9pbnQzRCwgcmFkaWFuczogbnVtYmVyKSB7XHJcbiAgY29uc3QgeSA9IHBvaW50Lnk7XHJcbiAgcG9pbnQueSA9IHkgKiBNYXRoLmNvcyhyYWRpYW5zKSArIHBvaW50LnogKiBNYXRoLnNpbihyYWRpYW5zKSAqIC0xLjA7XHJcbiAgcG9pbnQueiA9IHkgKiBNYXRoLnNpbihyYWRpYW5zKSArIHBvaW50LnogKiBNYXRoLmNvcyhyYWRpYW5zKTtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHJvdGF0ZVkocG9pbnQ6IFBvaW50M0QsIHJhZGlhbnM6IG51bWJlcikge1xyXG4gIGNvbnN0IHggPSBwb2ludC54O1xyXG4gIHBvaW50LnggPSB4ICogTWF0aC5jb3MocmFkaWFucykgKyBwb2ludC56ICogTWF0aC5zaW4ocmFkaWFucykgKiAtMS4wO1xyXG4gIHBvaW50LnogPSB4ICogTWF0aC5zaW4ocmFkaWFucykgKyBwb2ludC56ICogTWF0aC5jb3MocmFkaWFucyk7XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByb3RhdGVaKHBvaW50OiBQb2ludDNELCByYWRpYW5zOiBudW1iZXIpIHtcclxuICBjb25zdCB4ID0gcG9pbnQueDtcclxuICBwb2ludC54ID0geCAqIE1hdGguY29zKHJhZGlhbnMpICsgcG9pbnQueSAqIE1hdGguc2luKHJhZGlhbnMpICogLTEuMDtcclxuICBwb2ludC55ID0geCAqIE1hdGguc2luKHJhZGlhbnMpICsgcG9pbnQueSAqIE1hdGguY29zKHJhZGlhbnMpO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gcHJvamVjdGlvbihcclxuICB4eTogbnVtYmVyLFxyXG4gIHo6IG51bWJlcixcclxuICB4eU9mZnNldDogbnVtYmVyLFxyXG4gIHpPZmZzZXQ6IG51bWJlcixcclxuICBkaXN0YW5jZTogbnVtYmVyXHJcbikge1xyXG4gIHJldHVybiAoZGlzdGFuY2UgKiB4eSkgLyAoeiAtIHpPZmZzZXQpICsgeHlPZmZzZXQ7XHJcbn1cclxuIl0sIm5hbWVzIjpbInJvdGF0ZVgiLCJwb2ludCIsInJhZGlhbnMiLCJ5IiwiTWF0aCIsImNvcyIsInoiLCJzaW4iLCJyb3RhdGVZIiwieCIsInJvdGF0ZVoiLCJwcm9qZWN0aW9uIiwieHkiLCJ4eU9mZnNldCIsInpPZmZzZXQiLCJkaXN0YW5jZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/pages/home/components/HeroSection/components/utils/index.ts\n");

/***/ }),

/***/ "./src/pages/home/components/HeroSection/components/utils/main.ts":
/*!************************************************************************!*\
  !*** ./src/pages/home/components/HeroSection/components/utils/main.ts ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"init\": () => (/* binding */ init)\n/* harmony export */ });\n/* harmony import */ var _classes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../classes */ \"./src/pages/home/components/HeroSection/components/classes/index.ts\");\n\n\nconst Hammer = () => Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! hammerjs */ \"hammerjs\", 23));\n\nconst MOBILE_SCREEN_WIDTH_THRESHOLD = 768; //Standard table width\n\nfunction init(canvas, setting = {}) {\n  var _setting$globeRenderO, _setting$globeRenderO2, _setting$globeRenderO3, _setting$globeRenderO4;\n\n  const context = canvas.getContext(\"2d\");\n  if (!context) return -1;\n  let secondsPassed = 0;\n  let oldTimeStamp = 0;\n  let fps = 0;\n  let width = +(canvas.getAttribute(\"width\") || 640);\n  let height = +(canvas.getAttribute(\"height\") || 480);\n  let canvasCenter = new _classes__WEBPACK_IMPORTED_MODULE_0__.Point3D(width / 2, height / 2);\n  let globeX = width;\n\n  if ((_setting$globeRenderO = setting.globeRenderOffsetPercentage) !== null && _setting$globeRenderO !== void 0 && _setting$globeRenderO.x) {\n    globeX *= setting.globeRenderOffsetPercentage.x || 1;\n  }\n\n  if ((_setting$globeRenderO2 = setting.globeRenderOffset) !== null && _setting$globeRenderO2 !== void 0 && _setting$globeRenderO2.x) {\n    globeX += setting.globeRenderOffset.x || 0;\n  }\n\n  let globeY = height;\n\n  if (setting !== null && setting !== void 0 && (_setting$globeRenderO3 = setting.globeRenderOffsetPercentage) !== null && _setting$globeRenderO3 !== void 0 && _setting$globeRenderO3.y) {\n    globeY *= setting.globeRenderOffsetPercentage.y || 1;\n  }\n\n  if ((_setting$globeRenderO4 = setting.globeRenderOffset) !== null && _setting$globeRenderO4 !== void 0 && _setting$globeRenderO4.y) {\n    globeY += (setting === null || setting === void 0 ? void 0 : setting.globeRenderOffset.y) || 0;\n  }\n\n  const globe = new _classes__WEBPACK_IMPORTED_MODULE_0__.Globe(context, new _classes__WEBPACK_IMPORTED_MODULE_0__.Point3D(globeX, globeY), width, height, setting.radius, setting.rings, setting.slices);\n  let timeStamp = 0;\n  let lastScrollPosition = 0; //-----------------------------------------\n\n  Hammer().then(h => {\n    const Hammer = h.default || h;\n    const mc = new Hammer.Manager(canvas); // create a recognizer\n\n    const Swipe = new Hammer.Swipe(); // add the recognizer\n\n    mc.add(Swipe); // subscribe to events\n\n    mc.on(\"swipe\", function (e) {\n      globe.rotation.y += e.deltaX; // globe.rotation.x = e.deltaY;\n    });\n  }); //-----------------------------------------\n\n  const addScrollEvent = () => {\n    lastScrollPosition = 0;\n    document.addEventListener(\"scroll\", () => {\n      const y = lastScrollPosition - window.pageYOffset;\n      globe.rotation.y = y;\n    });\n  };\n\n  const addResizeEvent = () => {\n    window.addEventListener(\"resize\", function () {\n      setTimeout(() => {\n        width = canvas.getBoundingClientRect().width;\n        height = canvas.getBoundingClientRect().height;\n        canvas.setAttribute(\"width\", \"\" + width);\n        canvas.setAttribute(\"height\", \"\" + height);\n        canvasCenter = new _classes__WEBPACK_IMPORTED_MODULE_0__.Point3D(width / 2, height / 2);\n        globe.setPosition(canvasCenter);\n      }, 400);\n    });\n  };\n\n  const updateFps = () => {\n    // Calculate the number of seconds passed since the last frame\n    secondsPassed = (timeStamp - oldTimeStamp) / 1000;\n    secondsPassed = Math.min(secondsPassed, 0.1);\n    oldTimeStamp = timeStamp; // Calculate fps\n\n    fps = Math.round(1 / secondsPassed);\n  };\n\n  const update = () => {\n    globe.update();\n    updateFps();\n  };\n\n  const drawFps = () => {\n    // Draw number to the screen\n    context.font = \"25px Arial\";\n    context.fillStyle = \"black\";\n    context.fillText(\"FPS: \" + fps, 10, 30);\n  };\n\n  const draw = () => {\n    context.clearRect(0, 0, canvas.width, canvas.height); // eslint-disable-next-line no-constant-condition\n\n    if (false) {}\n    globe.draw();\n  };\n\n  const mainLoop = (timeStamp_ = 0) => {\n    timeStamp = timeStamp_;\n    update();\n    draw();\n    window.requestAnimationFrame(mainLoop);\n  };\n\n  const create = () => {\n    addResizeEvent();\n    addScrollEvent();\n    mainLoop();\n  };\n\n  create();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvaG9tZS9jb21wb25lbnRzL0hlcm9TZWN0aW9uL2NvbXBvbmVudHMvdXRpbHMvbWFpbi50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOztBQUVBLE1BQU1FLE1BQU0sR0FBRyxNQUFNLHNIQUFyQjs7QUFFQSxNQUFNQyw2QkFBNkIsR0FBRyxHQUF0QyxFQUEyQzs7QUFFcEMsU0FBU0MsSUFBVCxDQUNMQyxNQURLLEVBRUxDLE9BTUMsR0FBRyxFQVJDLEVBU0w7QUFBQTs7QUFDQSxRQUFNQyxPQUFPLEdBQUdGLE1BQU0sQ0FBQ0csVUFBUCxDQUFrQixJQUFsQixDQUFoQjtBQUVBLE1BQUksQ0FBQ0QsT0FBTCxFQUFjLE9BQU8sQ0FBQyxDQUFSO0FBRWQsTUFBSUUsYUFBYSxHQUFHLENBQXBCO0FBQ0EsTUFBSUMsWUFBWSxHQUFHLENBQW5CO0FBQ0EsTUFBSUMsR0FBRyxHQUFHLENBQVY7QUFFQSxNQUFJQyxLQUFLLEdBQUcsRUFBRVAsTUFBTSxDQUFDUSxZQUFQLENBQW9CLE9BQXBCLEtBQWdDLEdBQWxDLENBQVo7QUFDQSxNQUFJQyxNQUFNLEdBQUcsRUFBRVQsTUFBTSxDQUFDUSxZQUFQLENBQW9CLFFBQXBCLEtBQWlDLEdBQW5DLENBQWI7QUFDQSxNQUFJRSxZQUFZLEdBQUcsSUFBSWQsNkNBQUosQ0FBWVcsS0FBSyxHQUFHLENBQXBCLEVBQXVCRSxNQUFNLEdBQUcsQ0FBaEMsQ0FBbkI7QUFFQSxNQUFJRSxNQUFNLEdBQUdKLEtBQWI7O0FBQ0EsK0JBQUlOLE9BQU8sQ0FBQ1csMkJBQVosa0RBQUksc0JBQXFDQyxDQUF6QyxFQUE0QztBQUMxQ0YsSUFBQUEsTUFBTSxJQUFJVixPQUFPLENBQUNXLDJCQUFSLENBQW9DQyxDQUFwQyxJQUF5QyxDQUFuRDtBQUNEOztBQUNELGdDQUFJWixPQUFPLENBQUNhLGlCQUFaLG1EQUFJLHVCQUEyQkQsQ0FBL0IsRUFBa0M7QUFDaENGLElBQUFBLE1BQU0sSUFBSVYsT0FBTyxDQUFDYSxpQkFBUixD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QUFBQSxNQUFNO0FBQ05LLElBQUFBLElBQUk7QUFFSmhCLElBQUFBLE1BQU0sQ0FBQ29CLHFCQUFQLENBQTZCRixRQUE3QjtBQUNELEdBUEQ7O0FBU0EsUUFBTUcsTUFBTSxHQUFHLE1BQU07QUFDbkJuQixJQUFBQSxjQUFjO0FBQ2RMLElBQUFBLGNBQWM7QUFDZHFCLElBQUFBLFFBQVE7QUFDVCxHQUpEOztBQU1BRyxFQUFBQSxNQUFNO0FBQ1AiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXJjdXJ5Ly4vc3JjL3BhZ2VzL2hvbWUvY29tcG9uZW50cy9IZXJvU2VjdGlvbi9jb21wb25lbnRzL3V0aWxzL21haW4udHM/ZTZjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHbG9iZSwgUG9pbnQzRCB9IGZyb20gXCIuLi9jbGFzc2VzXCI7XG5cbmNvbnN0IEhhbW1lciA9ICgpID0+IGltcG9ydChcImhhbW1lcmpzXCIpO1xuXG5jb25zdCBNT0JJTEVfU0NSRUVOX1dJRFRIX1RIUkVTSE9MRCA9IDc2ODsgLy9TdGFuZGFyZCB0YWJsZSB3aWR0aFxuXG5leHBvcnQgZnVuY3Rpb24gaW5pdChcbiAgY2FudmFzOiBIVE1MQ2FudmFzRWxlbWVudCxcbiAgc2V0dGluZzoge1xuICAgIHJhZGl1cz86IG51bWJlcjtcbiAgICByaW5ncz86IG51bWJlcjtcbiAgICBzbGljZXM/OiBudW1iZXI7XG4gICAgZ2xvYmVSZW5kZXJPZmZzZXQ/OiBQb2ludDNEO1xuICAgIGdsb2JlUmVuZGVyT2Zmc2V0UGVyY2VudGFnZT86IFBvaW50M0Q7XG4gIH0gPSB7fSxcbikge1xuICBjb25zdCBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoXCIyZFwiKTtcblxuICBpZiAoIWNvbnRleHQpIHJldHVybiAtMTtcblxuICBsZXQgc2Vjb25kc1Bhc3NlZCA9IDA7XG4gIGxldCBvbGRUaW1lU3RhbXAgPSAwO1xuICBsZXQgZnBzID0gMDtcblxuICBsZXQgd2lkdGggPSArKGNhbnZhcy5nZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiKSB8fCA2NDApO1xuICBsZXQgaGVpZ2h0ID0gKyhjYW52YXMuZ2V0QXR0cmlidXRlKFwiaGVpZ2h0XCIpIHx8IDQ4MCk7XG4gIGxldCBjYW52YXNDZW50ZXIgPSBuZXcgUG9pbnQzRCh3aWR0aCAvIDIsIGhlaWdodCAvIDIpO1xuXG4gIGxldCBnbG9iZVggPSB3aWR0aDtcbiAgaWYgKHNldHRpbmcuZ2xvYmVSZW5kZXJPZmZzZXRQZXJjZW50YWdlPy54KSB7XG4gICAgZ2xvYmVYICo9IHNldHRpbmcuZ2xvYmVSZW5kZXJPZmZzZXRQZXJjZW50YWdlLnggfHwgMTtcbiAgfVxuICBpZiAoc2V0dGluZy5nbG9iZVJlbmRlck9mZnNldD8ueCkge1xuICAgIGdsb2JlWCArPSBzZXR0aW5nLmdsb2JlUmVuZGVyT2Zmc2V0LnggfHwgMDtcbiAgfVxuXG4gIGxldCBnbG9iZVkgPSBoZWlnaHQ7XG4gIGlmIChzZXR0aW5nPy5nbG9iZVJlbmRlck9mZnNldFBlcmNlbnRhZ2U/LnkpIHtcbiAgICBnbG9iZVkgKj0gc2V0dGluZy5nbG9iZVJlbmRlck9mZnNldFBlcmNlbnRhZ2UueSB8fCAxO1xuICB9XG4gIGlmIChzZXR0aW5nLmdsb2JlUmVuZGVyT2Zmc2V0Py55KSB7XG4gICAgZ2xvYmVZICs9IHNldHRpbmc/Lmdsb2JlUmVuZGVyT2Zmc2V0LnkgfHwgMDtcbiAgfVxuXG4gIGNvbnN0IGdsb2JlID0gbmV3IEdsb2JlKFxuICAgIGNvbnRleHQsXG4gICAgbmV3IFBvaW50M0QoZ2xvYmVYLCBnbG9iZVkpLFxuICAgIHdpZHRoLFxuICAgIGhlaWdodCxcbiAgICBzZXR0aW5nLnJhZGl1cyxcbiAgICBzZXR0aW5nLnJpbmdzLFxuICAgIHNldHRpbmcuc2xpY2VzLFxuICApO1xuXG4gIGxldCB0aW1lU3RhbXAgPSAwO1xuICBsZXQgbGFzdFNjcm9sbFBvc2l0aW9uID0gMDtcblxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgSGFtbWVyKCkudGhlbigoaCkgPT4ge1xuICAgIGNvbnN0IEhhbW1lciA9IGguZGVmYXVsdCB8fCBoO1xuICAgIGNvbnN0IG1jID0gbmV3IEhhbW1lci5NYW5hZ2VyKGNhbnZhcyk7XG5cbiAgICAvLyBjcmVhdGUgYSByZWNvZ25pemVyXG4gICAgY29uc3QgU3dpcGUgPSBuZXcgSGFtbWVyLlN3aXBlKCk7XG5cbiAgICAvLyBhZGQgdGhlIHJlY29nbml6ZXJcbiAgICBtYy5hZGQoU3dpcGUpO1xuXG4gICAgLy8gc3Vic2NyaWJlIHRvIGV2ZW50c1xuICAgIG1jLm9uKFwic3dpcGVcIiwgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGdsb2JlLnJvdGF0aW9uLnkgKz0gZS5kZWx0YVg7XG4gICAgICAvLyBnbG9iZS5yb3RhdGlvbi54ID0gZS5kZWx0YVk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuICBjb25zdCBhZGRTY3JvbGxFdmVudCA9ICgpID0+IHtcbiAgICBsYXN0U2Nyb2xsUG9zaXRpb24gPSAwO1xuXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcInNjcm9sbFwiLCAoKSA9PiB7XG4gICAgICBjb25zdCB5ID0gbGFzdFNjcm9sbFBvc2l0aW9uIC0gd2luZG93LnBhZ2VZT2Zmc2V0O1xuICAgICAgZ2xvYmUucm90YXRpb24ueSA9IHk7XG4gICAgfSk7XG4gIH07XG5cbiAgY29uc3QgYWRkUmVzaXplRXZlbnQgPSAoKSA9PiB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHdpZHRoID0gY2FudmFzLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoO1xuICAgICAgICBoZWlnaHQgPSBjYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkuaGVpZ2h0O1xuXG4gICAgICAgIGNhbnZhcy5zZXRBdHRyaWJ1dGUoXCJ3aWR0aFwiLCBcIlwiICsgd2lkdGgpO1xuICAgICAgICBjYW52YXMuc2V0QXR0cmlidXRlKFwiaGVpZ2h0XCIsIFwiXCIgKyBoZWlnaHQpO1xuXG4gICAgICAgIGNhbnZhc0NlbnRlciA9IG5ldyBQb2ludDNEKHdpZHRoIC8gMiwgaGVpZ2h0IC8gMik7XG4gICAgICAgIGdsb2JlLnNldFBvc2l0aW9uKGNhbnZhc0NlbnRlcik7XG4gICAgICB9LCA0MDApO1xuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IHVwZGF0ZUZwcyA9ICgpID0+IHtcbiAgICAvLyBDYWxjdWxhdGUgdGhlIG51bWJlciBvZiBzZWNvbmRzIHBhc3NlZCBzaW5jZSB0aGUgbGFzdCBmcmFtZVxuICAgIHNlY29uZHNQYXNzZWQgPSAodGltZVN0YW1wIC0gb2xkVGltZVN0YW1wKSAvIDEwMDA7XG4gICAgc2Vjb25kc1Bhc3NlZCA9IE1hdGgubWluKHNlY29uZHNQYXNzZWQsIDAuMSk7XG4gICAgb2xkVGltZVN0YW1wID0gdGltZVN0YW1wO1xuXG4gICAgLy8gQ2FsY3VsYXRlIGZwc1xuICAgIGZwcyA9IE1hdGgucm91bmQoMSAvIHNlY29uZHNQYXNzZWQpO1xuICB9O1xuXG4gIGNvbnN0IHVwZGF0ZSA9ICgpID0+IHtcbiAgICBnbG9iZS51cGRhdGUoKTtcblxuICAgIHVwZGF0ZUZwcygpO1xuICB9O1xuXG4gIGNvbnN0IGRyYXdGcHMgPSAoKSA9PiB7XG4gICAgLy8gRHJhdyBudW1iZXIgdG8gdGhlIHNjcmVlblxuICAgIGNvbnRleHQuZm9udCA9IFwiMjVweCBBcmlhbFwiO1xuICAgIGNvbnRleHQuZmlsbFN0eWxlID0gXCJibGFja1wiO1xuICAgIGNvbnRleHQuZmlsbFRleHQoXCJGUFM6IFwiICsgZnBzLCAxMCwgMzApO1xuICB9O1xuXG4gIGNvbnN0IGRyYXcgPSAoKSA9PiB7XG4gICAgY29udGV4dC5jbGVhclJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcblxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zdGFudC1jb25kaXRpb25cbiAgICBpZiAoZmFsc2UpIGRyYXdGcHMoKTtcbiAgICBnbG9iZS5kcmF3KCk7XG4gIH07XG5cbiAgY29uc3QgbWFpbkxvb3AgPSAodGltZVN0YW1wXyA9IDApID0+IHtcbiAgICB0aW1lU3RhbXAgPSB0aW1lU3RhbXBfO1xuXG4gICAgdXBkYXRlKCk7XG4gICAgZHJhdygpO1xuXG4gICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShtYWluTG9vcCk7XG4gIH07XG5cbiAgY29uc3QgY3JlYXRlID0gKCkgPT4ge1xuICAgIGFkZFJlc2l6ZUV2ZW50KCk7XG4gICAgYWRkU2Nyb2xsRXZlbnQoKTtcbiAgICBtYWluTG9vcCgpO1xuICB9O1xuXG4gIGNyZWF0ZSgpO1xufVxuIl0sIm5hbWVzIjpbIkdsb2JlIiwiUG9pbnQzRCIsIkhhbW1lciIsIk1PQklMRV9TQ1JFRU5fV0lEVEhfVEhSRVNIT0xEIiwiaW5pdCIsImNhbnZhcyIsInNldHRpbmciLCJjb250ZXh0IiwiZ2V0Q29udGV4dCIsInNlY29uZHNQYXNzZWQiLCJvbGRUaW1lU3RhbXAiLCJmcHMiLCJ3aWR0aCIsImdldEF0dHJpYnV0ZSIsImhlaWdodCIsImNhbnZhc0NlbnRlciIsImdsb2JlWCIsImdsb2JlUmVuZGVyT2Zmc2V0UGVyY2VudGFnZSIsIngiLCJnbG9iZVJlbmRlck9mZnNldCIsImdsb2JlWSIsInkiLCJnbG9iZSIsInJhZGl1cyIsInJpbmdzIiwic2xpY2VzIiwidGltZVN0YW1wIiwibGFzdFNjcm9sbFBvc2l0aW9uIiwidGhlbiIsImgiLCJkZWZhdWx0IiwibWMiLCJNYW5hZ2VyIiwiU3dpcGUiLCJhZGQiLCJvbiIsImUiLCJyb3RhdGlvbiIsImRlbHRhWCIsImFkZFNjcm9sbEV2ZW50IiwiZG9jdW1lbnQiLCJhZGRFdmVudExpc3RlbmVyIiwid2luZG93IiwicGFnZVlPZmZzZXQiLCJhZGRSZXNpemVFdmVudCIsInNldFRpbWVvdXQiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJzZXRBdHRyaWJ1dGUiLCJzZXRQb3NpdGlvbiIsInVwZGF0ZUZwcyIsIk1hdGgiLCJtaW4iLCJyb3VuZCIsInVwZGF0ZSIsImRyYXdGcHMiLCJmb250IiwiZmlsbFN0eWxlIiwiZmlsbFRleHQiLCJkcmF3IiwiY2xlYXJSZWN0IiwibWFpbkxvb3AiLCJ0aW1lU3RhbXBfIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiY3JlYXRlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/home/components/HeroSection/components/utils/main.ts\n");

/***/ }),

/***/ "./node_modules/next/dist/lib/is-error.js":
/*!************************************************!*\
  !*** ./node_modules/next/dist/lib/is-error.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports[\"default\"] = isError;\nexports.getProperError = getProperError;\nvar _isPlainObject = __webpack_require__(/*! ../shared/lib/is-plain-object */ \"../shared/lib/is-plain-object\");\nfunction isError(err) {\n    return typeof err === 'object' && err !== null && 'name' in err && 'message' in err;\n}\nfunction getProperError(err) {\n    if (isError(err)) {\n        return err;\n    }\n    if (true) {\n        // provide better error for case where `throw undefined`\n        // is called in development\n        if (typeof err === 'undefined') {\n            return new Error('An undefined error was thrown, ' + 'see here for more info: https://nextjs.org/docs/messages/threw-undefined');\n        }\n        if (err === null) {\n            return new Error('A null error was thrown, ' + 'see here for more info: https://nextjs.org/docs/messages/threw-undefined');\n        }\n    }\n    return new Error((0, _isPlainObject).isPlainObject(err) ? JSON.stringify(err) : err + '');\n}\n\n//# sourceMappingURL=is-error.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1lcnJvci5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QztBQUM3QztBQUNBLENBQUMsRUFBQztBQUNGLGtCQUFlO0FBQ2Ysc0JBQXNCO0FBQ3RCLHFCQUFxQixtQkFBTyxDQUFDLG9FQUErQjtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsSUFBc0M7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lcmN1cnkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2xpYi9pcy1lcnJvci5qcz8xNzhlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gaXNFcnJvcjtcbmV4cG9ydHMuZ2V0UHJvcGVyRXJyb3IgPSBnZXRQcm9wZXJFcnJvcjtcbnZhciBfaXNQbGFpbk9iamVjdCA9IHJlcXVpcmUoXCIuLi9zaGFyZWQvbGliL2lzLXBsYWluLW9iamVjdFwiKTtcbmZ1bmN0aW9uIGlzRXJyb3IoZXJyKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBlcnIgPT09ICdvYmplY3QnICYmIGVyciAhPT0gbnVsbCAmJiAnbmFtZScgaW4gZXJyICYmICdtZXNzYWdlJyBpbiBlcnI7XG59XG5mdW5jdGlvbiBnZXRQcm9wZXJFcnJvcihlcnIpIHtcbiAgICBpZiAoaXNFcnJvcihlcnIpKSB7XG4gICAgICAgIHJldHVybiBlcnI7XG4gICAgfVxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuICAgICAgICAvLyBwcm92aWRlIGJldHRlciBlcnJvciBmb3IgY2FzZSB3aGVyZSBgdGhyb3cgdW5kZWZpbmVkYFxuICAgICAgICAvLyBpcyBjYWxsZWQgaW4gZGV2ZWxvcG1lbnRcbiAgICAgICAgaWYgKHR5cGVvZiBlcnIgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEVycm9yKCdBbiB1bmRlZmluZWQgZXJyb3Igd2FzIHRocm93biwgJyArICdzZWUgaGVyZSBmb3IgbW9yZSBpbmZvOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy90aHJldy11bmRlZmluZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyID09PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEVycm9yKCdBIG51bGwgZXJyb3Igd2FzIHRocm93biwgJyArICdzZWUgaGVyZSBmb3IgbW9yZSBpbmZvOiBodHRwczovL25leHRqcy5vcmcvZG9jcy9tZXNzYWdlcy90aHJldy11bmRlZmluZWQnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbmV3IEVycm9yKCgwLCBfaXNQbGFpbk9iamVjdCkuaXNQbGFpbk9iamVjdChlcnIpID8gSlNPTi5zdHJpbmdpZnkoZXJyKSA6IGVyciArICcnKTtcbn1cblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aXMtZXJyb3IuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/lib/is-error.js\n");

/***/ }),

/***/ "./node_modules/next/link.js":
/*!***********************************!*\
  !*** ./node_modules/next/link.js ***!
  \***********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./dist/client/link */ \"./node_modules/next/dist/client/link.js\")\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzLmpzIiwibWFwcGluZ3MiOiJBQUFBLHlHQUE4QyIsInNvdXJjZXMiOlsid2VicGFjazovL21lcmN1cnkvLi9ub2RlX21vZHVsZXMvbmV4dC9saW5rLmpzPzc1YjMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Rpc3QvY2xpZW50L2xpbmsnKVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/link.js\n");

/***/ })

};
;